netcdf-3.1a 1995/11/03:

cd /usr/local/src
ftp ftp.unidata.ucar.edu
...
tar -xzvf netcdf-3.1a.tar.Z
cd /usr/local/src/netcdf-3.1a/src
setenv CFLAGS '-O -DNDEBUG'
./configure -prefix=/usr/local
make
make test
make install
make clean

cd /usr/local/src
ftp ftp.unidata.ucar.edu
...
tar -xzvf netcdf-2.4.3.tar.Z
cd /usr/local/src/netcdf-2.4.3/src
setenv CFLAGS '-O -DNDEBUG'
setenv FC g77
./configure --prefix=/usr/local
make
make test
make install
make clean

netcdf 3.5a: 1998/12/18
On gss1.acd.ucar.edu AIX 4.3
export CC=gcc
export CXX=g++
export FC=g77
export FFLAGS="-g -Wno-globals"
export CPPFLAGS=-Df2cFortran
./configure --prefix=/usr/local

netcdf 3.4: 1999/04/22
On sanitas.cgd.ucar.edu Solaris 2.6
setenv CC gcc
setenv CXX g++
setenv f77
./configure --prefix=/contrib/netcdf-3.4
make
make test
make install
make clean

On dataproc.ucar.edu IRIX 6.5
setenv CC /usr/local/egcs/bin/gcc
setenv CFLAGS -mabi=64
setenv LDFLAGS -mabi=64 -mips4
setenv CXX /usr/local/egcs/bin/g++
./configure --prefix=/contrib/netcdf-3.4
make
make test
make install
make clean

netcdf 3.4: 1999/06/24
On dust.acd.ucar.edu
cd /gs2/zender
tar xzvf netcdf-3.4.tar.gz
setenv CPPFLAGS -Df2cFortran
setenv FC g77
./configure --prefix=/usr/local
make
make test
sudo make install
make clean

netcdf 3.5a: 1999/06/25
On dust.acd.ucar.edu
tar xvzf netcdf-3.5-alpha.tar.Z
setenv CPPFLAGS '-DNDEBUG -DpgiFortran'
setenv FC /usr/local/pgi/linux86/bin/pgf90
setenv CFLAGS
setenv FFLAGS "-O -w"
./configure --prefix=/usr/local/
make
make
make test
sudo make install
make clean

netcdf 3.5-beta3: 2000/06/06 and 2000/10/06
On lanina.zender.org
tar xvzf netcdf-3.5-beta3.tar.Z
cd ${DATA}/netcdf-3.5-beta3/src
export CPPFLAGS='-DNDEBUG -DpgiFortran'
export FC='pgf90'
export CFLAGS='-O'
export FFLAGS='-O -w'
./configure --prefix=/usr/local
make
make test
sudo make install
make clean

netcdf 3.5-beta6: 2000/11/16
On ess1.ps.uci.edu
tar xvzf netcdf-3.5-beta6.tar.Z
cd ${DATA}/netcdf-3.5-beta6/src
export CC='/usr/bin/cc'
export CPPFLAGS='-DNDEBUG -Df2cFortran'
export CFLAGS='-O'
export FC='/usr/bin/fort'
export FFLAGS='-O'
export CXX='/usr/bin/c++'
./configure --prefix=/usr/local
make
make test
sudo make install
make clean

netcdf-3.5-beta8: 2001/03/07
On dust.ps.uci.edu
tar xvzf netcdf-beta.tar.Z
cd ${DATA}/netcdf-3.5-beta8/src
export CPPFLAGS='-DNDEBUG -DpgiFortran'
export FC='pgf90'
export CFLAGS='-O'
export FFLAGS='-O -w'
./configure --prefix=/usr/local
make
make test
sudo make install
make clean

netcdf-3.5.0: 2004/04/22 PGI
On lanina.ps.uci.edu
tar xvzf netcdf-3.5.0.tar.Z
cd ${DATA}/tmp/netcdf-3.5.0/src
make distclean
export CPPFLAGS='-DNDEBUG -DpgiFortran'
export FC='pgf90'
export CFLAGS='-O'
export FFLAGS='-O -w'
./configure --prefix=/usr/local
make
make test
sudo make install
make clean
sudo cp ${DATA}/tmp/netcdf-3.5.0/src/f90/typesizes.mod /usr/local/include/typesizes.mod.pgf90
sudo cp ${DATA}/tmp/netcdf-3.5.0/src/f90/netcdf.mod /usr/local/include/netcdf.mod.pgf90

On krein.math.uci.edu IRIX 6.5 20010711
zender@krein:~/netcdf-3.5.0/src$ uname -a
IRIX64 krein 6.5 01101245 IP27 mips
unalias make
cd ~
tar xvzf netcdf.tar.Z
cd ~/netcdf-3.5.0/src
export CC='gcc'
# NB: Adding -O2 to CFLAGS breaks 'make test' in t_nc test
export CFLAGS='-mabi=64'
export CXX='g++'
export CXXFLAGS='-mabi=64 -O2'
export F90='f90 -64 -mips4'
export FC='f90 -64 -mips4'
export FFLAGS='-O2'
export F90FLAGS='-O2'
export LDFLAGS=''
make distclean 2>&1 >foo
./configure --prefix=/usr/local 2>&1 >>foo
make 2>&1 >>foo
make test 2>&1 >>foo
make install 2>&1 >>foo
make clean 2>&1 >>foo

netcdf 3.5.0: 20010918
On flagstaff.cgd.ucar.edu Solaris 2.6
cd ${DATA}/tmp/netcdf-3.5.0/src
export CC='gcc'
export CFLAGS='-Wall -O2'
export CXX='g++'
export CXXFLAGS='-Wall -O2'
export F90='f90'
export FC='f90'
export FFLAGS='-fast -xs -stackvar -e'
export F90FLAGS='-O2'
#./configure --prefix=/contrib/netcdf-3.4
./configure --bindir=${MY_BIN_DIR} --libdir=${MY_LIB_DIR} --includedir=${HOME}/include
make
make test
make install
make clean

../ncdump/ncdump -n c1 ftest0.nc > ftest1.cdl
make[3]: Leaving directory `/data/zender/tmp/netcdf-3.5.0/src/ncgen'
229,230c229,230
<   "H",
<   "L" ;
---
>   " ",
>   " " ;
*** ncgen -f test failed ***

netcdf-3.5.0: 2002/11/22 Intel 7.0 compilers
On lanina.ps.uci.edu
tar xvzf netcdf-3.5.0.tar.Z
cd ${DATA}/tmp/netcdf-3.5.0/src
make distclean
# NB: Use PGI Fortran definition because cfortran.h does not yet support Intel ifc 
export CFLAGS='-O'
export CPPFLAGS='-DNDEBUG -DpgiFortran'
export CC='gcc'
export FC='ifc'
export FFLAGS='-O'
./configure --prefix=/usr/local
make
make test
sudo make install
make clean
sudo cp ${DATA}/tmp/netcdf-3.5.0/src/f90/TYPESIZES.mod /usr/local/include/TYPESIZES.mod.ifc
sudo cp ${DATA}/tmp/netcdf-3.5.0/src/f90/NETCDF.mod /usr/local/include/NETCDF.mod.ifc
sudo ln -s -f /usr/local/include/TYPESIZES.mod.ifc /usr/local/include/TYPESIZES.mod
sudo ln -s -f /usr/local/include/NETCDF.mod.ifc /usr/local/include/NETCDF.mod

netcdf-3.5.0: 2002/10/25 Lahey-Fujitsu
On biogenic.ps.uci.edu
mv netcdf-3.5.0.tar.Z ${DATA}/tmp
cd ${DATA}/tmp
tar xvzf netcdf-3.5.0.tar.Z
cd ${DATA}/tmp/netcdf-3.5.0/src
export CPPFLAGS='-DNDEBUG -DpgiFortran'
export FC='lf95'
export CFLAGS='-O'
export FFLAGS='-O'
make distclean
./configure --prefix=/usr/local
make
make test
sudo make install
sudo cp ${DATA}/tmp/netcdf-3.5.0/src/f90/typesizes.mod /usr/local/include/typesizes.mod.lf95
sudo cp ${DATA}/tmp/netcdf-3.5.0/src/f90/netcdf.mod /usr/local/include/netcdf.mod.lf95
make clean

netcdf-3.5.0: 2002/09/04 Sun Solaris 2.8 Compile farm (use native C with g77)
CC='/opt/SUNWspro/bin/cc' CPPFLAGS='-DNDEBUG -Df2cFortran' CXX='/opt/SUNWspro/bin/CC' FC='g77' ./configure --prefix=${HOME} --bindir=${HOME}/bin/${GNU_TRP} --libdir=${HOME}/lib/${GNU_TRP}

netcdf-3.5.0: 2003/03/10 Intel 7.0 compilers
On elnino.ess.uci.edu
tar xvzf netcdf-3.5.0.tar.Z
cd ${DATA}/tmp/netcdf-3.5.0/src
make distclean
# NB: Use PGI Fortran definition because cfortran.h does not yet support Intel ifc 
export CFLAGS='-O'
export CPPFLAGS='-DNDEBUG -DpgiFortran'
export CC='icc'
export CXX='icc'
export FC='ifc'
export FFLAGS='-O'
./configure --prefix=/usr/local
make
make test
sudo make install
make clean
sudo cp ${DATA}/tmp/netcdf-3.5.0/src/f90/TYPESIZES.mod /usr/local/include/TYPESIZES.mod.ifc
sudo cp ${DATA}/tmp/netcdf-3.5.0/src/f90/NETCDF.mod /usr/local/include/NETCDF.mod.ifc
sudo ln -s -f /usr/local/include/TYPESIZES.mod.ifc /usr/local/include/TYPESIZES.mod
sudo ln -s -f /usr/local/include/NETCDF.mod.ifc /usr/local/include/NETCDF.mod

netcdf-3.5.1-beta10: 2003/04/18 Lahey-Fujitsu on 
On dust.ess.uci.edu, Redhat 9 gcc 3.2.2 glibc 2.3.3
mv netcdf-3.5.1-beta10.tar.Z ${DATA}/tmp
cd ${DATA}/tmp
tar xvzf netcdf-3.5.1-beta10.tar.Z
cd ${DATA}/tmp/netcdf-3.5.1-beta10/src
export CPPFLAGS='-DNDEBUG -DpgiFortran'
export FC='lf95'
export CFLAGS='-O'
export FFLAGS='-O'
make distclean
./configure --prefix=/usr/local
make
make test
sudo make install
sudo cp ${DATA}/tmp/netcdf-3.5.1-beta10/src/f90/typesizes.mod /usr/local/include/typesizes.mod.lf95
sudo cp ${DATA}/tmp/netcdf-3.5.1-beta10/src/f90/netcdf.mod /usr/local/include/netcdf.mod.lf95
make clean

netcdf-3.5.1-beta13: 20030508 Lahey-Fujitsu on 
ashes.ess.uci.edu, Debian sid gcc 3.2.3 glibc 2.3.3
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-beta.tar.Z .
mv -f netcdf-beta.tar.Z netcdf-3.5.1-beta13.tar.Z
tar xvzf netcdf-3.5.1-beta13.tar.Z
cd ${DATA}/tmp/netcdf-3.5.1-beta13/src
make distclean
export CC='gcc'
export CXX='g++'
export CPPFLAGS='-DNDEBUG -DpgiFortran'
export FC='lf95'
export CFLAGS='-O'
export FFLAGS='-O'
make distclean
./configure --prefix=/usr/local
make
make test
sudo make install
sudo cp ${DATA}/tmp/netcdf-3.5.1-beta13/src/f90/typesizes.mod /usr/local/include/typesizes.mod.lf95
sudo cp ${DATA}/tmp/netcdf-3.5.1-beta13/src/f90/netcdf.mod /usr/local/include/netcdf.mod.lf95
make clean

/**/
netcdf-3.5.1-beta10: 2003/09/19 Intel 7.1 compilers
On elnino.ess.uci.edu
tar xvzf netcdf-3.5.1-beta10.tar.Z
cd ${DATA}/tmp/netcdf-3.5.1-beta10/src
make distclean
# NB: Use PGI Fortran definition because cfortran.h does not yet support Intel ifc 
export CC='gcc'
export CXX='g++'
export CPPFLAGS='-DNDEBUG -DpgiFortran'
export CFLAGS='-O'
export FC='ifc'
export FLIBS='/opt/intel/compiler70/ia32/lib/libPEPCF90.a'
export FFLAGS='-O -mp -dynamic-libcxa' # -static-libcxa also works
./configure --prefix=/usr/local
make
make test
#sudo make install
make clean
sudo cp ${DATA}/tmp/netcdf-3.5.1-beta10/src/f90/TYPESIZES.mod /usr/local/include/TYPESIZES.mod.ifc
sudo cp ${DATA}/tmp/netcdf-3.5.1-beta10/src/f90/NETCDF.mod /usr/local/include/NETCDF.mod.ifc
sudo ln -s -f /usr/local/include/TYPESIZES.mod.ifc /usr/local/include/TYPESIZES.mod
sudo ln -s -f /usr/local/include/NETCDF.mod.ifc /usr/local/include/NETCDF.mod

netcdf-3.5.1-beta13: 2003/09/30 g95 compiler
On elnino.ess.uci.edu
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-beta.tar.Z .
mv -f netcdf-beta.tar.Z netcdf-3.5.1-beta13.tar.Z
tar xvzf netcdf-3.5.1-beta13.tar.Z
cd ${DATA}/tmp/netcdf-3.5.1-beta13/src
make distclean
# NB: Use PGI Fortran definition because cfortran.h does not yet support ifc or g95
export CC='/usr/bin/gcc'
export CXX='g++'
export CPPFLAGS='-DNDEBUG -DpgiFortran'
export CFLAGS='-O -g'
export FC='g95'
export FFLAGS='-O -g'
./configure --prefix=/usr/local
make
make test
#sudo make install
make clean
sudo cp ${DATA}/tmp/netcdf-3.5.1-beta13/src/libsrc/libnetcdf.a /usr/local/lib/libnetcdf.a
sudo cp ${DATA}/tmp/netcdf-3.5.1-beta13/src/f90/typesizes.mod /usr/local/include/typesizes.mod.g95
sudo cp ${DATA}/tmp/netcdf-3.5.1-beta13/src/f90/netcdf.mod /usr/local/include/netcdf.mod.g95

netcdf-3.5.0: 2003/12/16 Intel 8.0 compilers
On elnino.ess.uci.edu
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-beta.tar.Z .
mv -f netcdf-beta.tar.Z netcdf-3.5.1-beta13.tar.Z
tar xvzf netcdf-3.5.1-beta13.tar.Z
cd ${DATA}/tmp/netcdf-3.5.1-beta13/src
make distclean
# NB: Use PGI Fortran definition because cfortran.h does not yet support Intel ifort 
export CC='icc'
export CFLAGS='-O'
export CPPFLAGS='-DNDEBUG -DpgiFortran'
export CXX='icc'
export FC='ifort'
export FFLAGS='-O -mp -dynamic-libcxa' # -static-libcxa also works
export FLIBS='/usr/local/intel/compiler80/ia32/lib/libPEPCF90.a'
./configure --prefix=/usr/local
make
make test
sudo make install
make clean
sudo cp ${DATA}/tmp/netcdf-3.5.1-beta13/src/f90/typesizes.mod /usr/local/include/typesizes.mod.ifort
sudo cp ${DATA}/tmp/netcdf-3.5.1-beta13/src/f90/netcdf.mod /usr/local/include/netcdf.mod.ifort
sudo ln -s -f /usr/local/include/typesizes.mod.ifort /usr/local/include/typesizes.mod
sudo ln -s -f /usr/local/include/netcdf.mod.ifort /usr/local/include/netcdf.mod

netcdf-3.5.1: 20040211 xlc and xlf on AIX
esmf.ess.uci.edu, AIX 5.1
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf.tar.Z .
mv -f netcdf.tar.Z netcdf-3.5.1.tar.Z
gunzip -f netcdf-3.5.1.tar.Z
tar xvf netcdf-3.5.1.tar
cd ${DATA}/tmp/netcdf-3.5.1/src
make distclean
export GNU_TRP=`~/nco/autobld/config.guess`
export OBJECT_MODE='64' # AIX-specific hack
export CC='xlc_r'
export CFLAGS='-O -qmaxmem=-1 -qarch=auto'
export CPPFLAGS='-D_LARGE_FILES -DNDEBUG -I/usr/vacpp/include'
export CXX='xlC_r'
export FC='xlf_r'
export F90='xlf90_r'
export F90FLAGS='-O -qsuffix=f=f90 -qmaxmem=-1 -qarch=auto'
export FFLAGS='-O -qarch=auto'
make distclean
./configure --prefix=/usr/local > netcdf.configure.foo 2>&1
make
make test
sudo make install
sudo cp ${DATA}/tmp/netcdf-3.5.1/src/f90/typesizes.mod /usr/local/include/typesizes.mod.xlf90
sudo cp ${DATA}/tmp/netcdf-3.5.1/src/f90/netcdf.mod /usr/local/include/netcdf.mod.xlf90
sudo ln -f -s /usr/local/include/netcdf.mod.xlf90 /usr/local/include/netcdf.mod
sudo ln -f -s /usr/local/include/typesizes.mod.xlf90 /usr/local/include/typesizes.mod
make clean

netcdf-3.5.1: 20040614 gcc and lf95 on Linux
ashes.ess.uci.edu, Debian Mepis
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-beta.tar.Z .
mv -f netcdf-beta.tar.Z netcdf-3.5.1.tar.Z
gunzip -f netcdf-3.5.1.tar.Z
tar xvf netcdf-3.5.1.tar
cd ${DATA}/tmp/netcdf-3.5.1/src
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
export CC='gcc'
export CFLAGS='-O'
export CPPFLAGS='-D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE -DNDEBUG -DpgiFortran'
export CXX='g++'
export FC='lf95'
export FFLAGS='-O'
export F90FLAGS='-O'
./configure --prefix=/usr/local > netcdf.configure.foo 2>&1
make
make test
sudo make install
exit # Return to previous shell level
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-3.5.1/src/libsrc/libnetcdf.a /usr/local/lib/libnetcdf.a.gcc-lf95
sudo cp ${DATA}/tmp/netcdf-3.5.1/src/f90/typesizes.mod /usr/local/include/typesizes.mod.lf95
sudo cp ${DATA}/tmp/netcdf-3.5.1/src/f90/netcdf.mod /usr/local/include/netcdf.mod.lf95
make clean

Recent problems 20040615 with lf95 gcc build on ashes:
gcc -c -O   -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE -DNDEBUG -DpgiFortran fortlib.c
lf95 -o nf_test -O  test_get.o test_put.o nf_error.o nf_test.o test_read.o test_write.o util.o fortlib.o ../libsrc/libnetcdf.a  -lm
../libsrc/libnetcdf.a(nc.o)(.text+0x2cf): In function `NC_begins':
: undefined reference to `__divdi3'
../libsrc/libnetcdf.a(nc.o)(.text+0x34b): In function `NC_begins':
: undefined reference to `__divdi3'
../libsrc/libnetcdf.a(nc.o)(.text+0x3d5): In function `NC_begins':
: undefined reference to `__divdi3'
../libsrc/libnetcdf.a(nc.o)(.text+0x4b3): In function `NC_begins':
: undefined reference to `__divdi3'
../libsrc/libnetcdf.a(nc.o)(.text+0x524): In function `NC_begins':
: undefined reference to `__divdi3'
../libsrc/libnetcdf.a(nc.o)(.text+0x5ae): more undefined references to `__divdi3' follow
../libsrc/libnetcdf.a(ncio.o)(.text+0x383): In function `px_get':
: undefined reference to `__moddi3'

netcdf-3.5.1: 2004/08/07 g95 compiler
On elnino.ess.uci.edu
/bin/rm -r ${DATA}/g95;mkdir -p ${DATA}/g95;cd ${DATA}/g95
wget http://g95.sf.net/g95-x86-linux.tgz
tar xvzf g95-x86-linux.tgz
ln -s -f ${DATA}/g95/g95-install /tmp/g95
sudo ln -s -f ${DATA}/g95/g95-install/bin/i686-pc-linux-gnu-g95 /usr/local/bin/g95
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-beta.tar.Z .
mv -f netcdf-beta.tar.Z netcdf-3.5.1.tar.Z
/bin/rm -r ${DATA}/tmp/netcdf-3.5.1
tar xvzf netcdf-3.5.1.tar.Z
cd ${DATA}/tmp/netcdf-3.5.1/src
make distclean
# NB: Use PGI Fortran definition because cfortran.h does not yet support ifc or g95
bash # New shell level keeps g95 environment variables sandboxed
export CC='/usr/bin/gcc'
export CXX='g++'
#export CPPFLAGS='-D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE -DNDEBUG -Df2cFortran'
export CPPFLAGS='-D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE -DNDEBUG -DpgiFortran'
export CFLAGS='-O -g'
export FC='g95'
export F90='g95'
export FFLAGS='-O -g -fno-second-underscore'
export F90FLAGS='-O -g -fno-second-underscore'
./configure --prefix=/usr/local
make
#make test > netcdf.test.log.g95.f2cfortran 2>&1
make test > netcdf.test.log.g95.pgifortran 2>&1
#sudo make install
exit # Return to previous shell level
# NB: Fortran symbols netcdf.o and typeSizes.o are munged into libnetcdf.a 
sudo cp ${DATA}/tmp/netcdf-3.5.1/src/libsrc/libnetcdf.a /usr/local/lib/libnetcdf.a.gcc-g95
sudo cp ${DATA}/tmp/netcdf-3.5.1/src/f90/typesizes.mod /usr/local/include/typesizes.mod.g95
sudo cp ${DATA}/tmp/netcdf-3.5.1/src/f90/netcdf.mod /usr/local/include/netcdf.mod.g95

netcdf-3.5.1: 20040419 gcc and pgf90 on SuSE 9 Linux
sand.ess.uci.edu
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-beta.tar.Z .
mv -f netcdf-beta.tar.Z netcdf-3.5.1.tar.Z
gunzip -f netcdf-3.5.1.tar.Z
tar xvf netcdf-3.5.1.tar
cd ${DATA}/tmp/netcdf-3.5.1/src
make distclean
export GNU_TRP=`~/nco/autobld/config.guess`
export CC='gcc'
export CXX='g++'
export CPPFLAGS='-D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE -DNDEBUG -DpgiFortran'
export CFLAGS='-O -fPIC -m64'
export FC='pgf90'
export F90='pgf90'
export FFLAGS='-O -g -Mlfs -Mrecursive -Mdalign -Mextend'
export F90FLAGS='-O -g -Mlfs -Mrecursive -Mdalign -Mextend -Mfree'
./configure --prefix=/usr/local > netcdf.configure.foo 2>&1
make
make test
sudo make install
# NB: Fortran symbols netcdf.o and typeSizes.o are munged into libnetcdf.a 
sudo cp ${DATA}/tmp/netcdf-3.5.1/src/libsrc/libnetcdf.a /usr/local/lib/libnetcdf.a.gcc-pgf90
sudo cp ${DATA}/tmp/netcdf-3.5.1/src/f90/typesizes.mod /usr/local/include/typesizes.mod.pgf90
sudo cp ${DATA}/tmp/netcdf-3.5.1/src/f90/netcdf.mod /usr/local/include/netcdf.mod.pgf90
make clean

netcdf-3.5.1: 20040419 pgcc/pgCC and pgf90 on SuSE 9 Linux
sand.ess.uci.edu 
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-beta.tar.Z .
mv -f netcdf-beta.tar.Z netcdf-3.5.1.tar.Z
gunzip -f netcdf-3.5.1.tar.Z
tar xvf netcdf-3.5.1.tar
cd ${DATA}/tmp/netcdf-3.5.1/src
make distclean
export GNU_TRP=`~/nco/autobld/config.guess`
export CC='pgcc'
export CXX='pgCC'
export CPPFLAGS='-D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE -DNDEBUG -DpgiFortran'
export CFLAGS='-fast -Mlfs -O -g -m64'
export FC='pgf90'
export F90='pgf90'
export FFLAGS='-O -g -Mlfs -Mrecursive -Mdalign -Mextend'
export F90FLAGS='-O -g -Mlfs -Mrecursive -Mdalign -Mextend -Mfree'
./configure --prefix=/usr/local > netcdf.configure.foo 2>&1
make
make test
sudo make install
# NB: Fortran symbols netcdf.o and typeSizes.o are munged into libnetcdf.a 
sudo cp ${DATA}/tmp/netcdf-3.5.1/src/libsrc/libnetcdf.a /usr/local/lib/libnetcdf.a.pgcc-pgf90
sudo cp ${DATA}/tmp/netcdf-3.5.1/src/f90/typesizes.mod /usr/local/include/typesizes.mod.pgf90
sudo cp ${DATA}/tmp/netcdf-3.5.1/src/f90/netcdf.mod /usr/local/include/netcdf.mod.pgf90
make clean

netcdf-3_6_0-beta6: 20041016 gcc and lf95 on Linux
ashes.ess.uci.edu, Debian Mepis
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-beta.tar.gz
mv -f netcdf-beta.tar.gz netcdf-3_6_0-beta6.tar.gz
gunzip -f netcdf-3_6_0-beta6.tar.gz
tar xvf netcdf-3_6_0-beta6.tar
cd ${DATA}/tmp/netcdf-3_6_0-beta6/src
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
export CC='gcc'
export CFLAGS='-O'
export CPPFLAGS='-DNDEBUG -DpgiFortran'
export CXX='g++'
export FC='lf95'
export FFLAGS='-O'
export F90FLAGS='-O'
./configure --prefix=/usr/local > netcdf.configure.foo 2>&1
make
make test
sudo make install
exit # Return to previous shell level
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-3_6_0-beta6/src/libsrc/libnetcdf.a /usr/local/lib/libnetcdf.a.gcc-lf95
sudo cp ${DATA}/tmp/netcdf-3_6_0-beta6/src/f90/typesizes.mod /usr/local/include/typesizes.mod.lf95
sudo cp ${DATA}/tmp/netcdf-3_6_0-beta6/src/f90/netcdf.mod /usr/local/include/netcdf.mod.lf95
make clean

Gets same problems with Fortran code as on ashes above, probably due
to old lf95 version. Libraries build correctly, though, so OK to
ignore these warnings and install:
gcc -c -O   -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE -DNDEBUG -DpgiFortran fortlib.c
lf95 -o nf_test -O   test_get.o test_put.o nf_error.o nf_test.o test_read.o test_write.o util.o fortlib.o ../libsrc/libnetcdf.a  -lm
../libsrc/libnetcdf.a(nc.o)(.text+0x2f6): In function `NC_begins':
: undefined reference to `__divdi3'
../libsrc/libnetcdf.a(nc.o)(.text+0x372): In function `NC_begins':
: undefined reference to `__divdi3'
../libsrc/libnetcdf.a(nc.o)(.text+0x3fc): In function `NC_begins':
: undefined reference to `__divdi3'
../libsrc/libnetcdf.a(nc.o)(.text+0x4fa): In function `NC_begins':
: undefined reference to `__divdi3'
../libsrc/libnetcdf.a(nc.o)(.text+0x56b): In function `NC_begins':
: undefined reference to `__divdi3'
../libsrc/libnetcdf.a(nc.o)(.text+0x5f5): more undefined references to `__divdi3' follow
../libsrc/libnetcdf.a(ncio.o)(.text+0x383): In function `px_get':
: undefined reference to `__moddi3'

netcdf-3_6_0-beta6: 20041103 gcc and g95 on Linux
elnino.ess.uci.edu, Debian Libranet
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-beta.tar.gz
mv -f netcdf-beta.tar.gz netcdf-3_6_0-beta6.tar.gz
gunzip -f netcdf-3_6_0-beta6.tar.gz
tar xvf netcdf-3_6_0-beta6.tar
cd ${DATA}/tmp/netcdf-3_6_0-beta6/src
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
export CC='/usr/bin/gcc'
export CXX='g++'
#export CPPFLAGS='-DNDEBUG -Df2cFortran'
export CPPFLAGS='-DNDEBUG -DpgiFortran'
export CFLAGS='-O -g'
export FC='g95'
export F90='g95'
export FFLAGS='-O -g -fno-second-underscore'
export F90FLAGS='-O -g -fno-second-underscore'
./configure --prefix=/usr/local > netcdf.configure.foo 2>&1
make
make test
sudo make install
exit # Return to previous shell level
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-3_6_0-beta6/src/libsrc/libnetcdf.a /usr/local/lib/libnetcdf.a.gcc-g95
sudo cp ${DATA}/tmp/netcdf-3_6_0-beta6/src/f90/typesizes.mod /usr/local/include/typesizes.mod.g95
sudo cp ${DATA}/tmp/netcdf-3_6_0-beta6/src/f90/netcdf.mod /usr/local/include/netcdf.mod.g95
make clean

netcdf-3_6_0-beta6: 20040419 gcc and pgf90 on SuSE 9 Linux
sand.ess.uci.edu
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-beta.tar.gz
mv -f netcdf-beta.tar.gz netcdf-3_6_0-beta6.tar.gz
gunzip -f netcdf-3_6_0-beta6.tar.gz
tar xvf netcdf-3_6_0-beta6.tar
cd ${DATA}/tmp/netcdf-3_6_0-beta6/src
make distclean
export GNU_TRP=`~/nco/autobld/config.guess`
export CC='gcc'
export CXX='g++'
export CPPFLAGS='-DNDEBUG -DpgiFortran'
export CFLAGS='-O -fPIC -m64'
export FC='pgf90'
export F90='pgf90'
export FFLAGS='-O -g -Mlfs -Mrecursive -Mdalign -Mextend'
export F90FLAGS='-O -g -Mlfs -Mrecursive -Mdalign -Mextend -Mfree'
./configure --prefix=/usr/local > netcdf.configure.foo 2>&1
make
make test
sudo make install
# NB: Fortran symbols netcdf.o and typeSizes.o are munged into libnetcdf.a 
sudo cp ${DATA}/tmp/netcdf-3_6_0-beta6/src/libsrc/libnetcdf.a /usr/local/lib/libnetcdf.a.gcc-pgf90
sudo cp ${DATA}/tmp/netcdf-3_6_0-beta6/src/f90/typesizes.mod /usr/local/include/typesizes.mod.pgf90
sudo cp ${DATA}/tmp/netcdf-3_6_0-beta6/src/f90/netcdf.mod /usr/local/include/netcdf.mod.pgf90
make clean

# sand.ess.uci.edu LINUXAMD64 Debian/Ubuntu Warty Warthog gcc-g95 netcdf-3.6.0
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf.tar.gz
mv -f netcdf.tar.gz netcdf-3.6.0.tar.gz
gunzip -f netcdf-3.6.0.tar.gz
tar xvf netcdf-3.6.0.tar
cd ${DATA}/tmp/netcdf-3.6.0/src
bash # New shell level keeps environment variables sandboxed
make distclean
export GNU_TRP=`~/nco/autobld/config.guess`
export CC='gcc'
export CXX='g++'
export CPPFLAGS='-DNDEBUG -DpgiFortran'
export CFLAGS='-O -fPIC -m64'
export FC='g95'
export F90='g95'
export FFLAGS='-O -g -fno-second-underscore'
export F90FLAGS='-O -g -fno-second-underscore'
./configure --prefix=/usr/local > netcdf.configure.foo 2>&1
make
make test
sudo make install
exit # Return to previous shell level
# NB: Fortran symbols netcdf.o and typeSizes.o are munged into libnetcdf.a 
sudo cp ${DATA}/tmp/netcdf-3.6.0/src/libsrc/libnetcdf.a /usr/local/lib/libnetcdf.a.gcc-g95
sudo cp ${DATA}/tmp/netcdf-3.6.0/src/f90/typesizes.mod /usr/local/include/typesizes.mod.g95
sudo cp ${DATA}/tmp/netcdf-3.6.0/src/f90/netcdf.mod /usr/local/include/netcdf.mod.g95
make clean

20041218:
# elnino.ess.uci.edu Debian Libranet gcc/g95 netcdf-3.6.0
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf.tar.gz
mv -f netcdf.tar.gz netcdf-3.6.0.tar.gz
gunzip -f netcdf-3.6.0.tar.gz
tar xvf netcdf-3.6.0.tar
cd ${DATA}/tmp/netcdf-3.6.0/src
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
export CC='/usr/bin/gcc-3.4'
export CXX='g++-3.4'
#export CPPFLAGS='-DNDEBUG -Df2cFortran'
export CPPFLAGS='-DNDEBUG -DpgiFortran'
export CFLAGS='-O -g'
export FC='g95'
export F90='g95'
export FFLAGS='-O -g -fno-second-underscore'
export F90FLAGS='-O -g -fno-second-underscore'
./configure --prefix=/usr/local > netcdf.configure.foo 2>&1
make
make test
sudo make install
exit # Return to previous shell level
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-3.6.0/src/libsrc/libnetcdf.a /usr/local/lib/libnetcdf.a.gcc-g95
sudo cp ${DATA}/tmp/netcdf-3.6.0/src/f90/typesizes.mod /usr/local/include/typesizes.mod.g95
sudo cp ${DATA}/tmp/netcdf-3.6.0/src/f90/netcdf.mod /usr/local/include/netcdf.mod.g95
make clean

esmf.ess.uci.edu, AIX 5.1 20050105
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf.tar.gz
mv -f netcdf.tar.gz netcdf-3.6.0.tar.gz
gunzip -f netcdf-3.6.0.tar.gz
tar xvf netcdf-3.6.0.tar
cd ${DATA}/tmp/netcdf-3.6.0/src
make distclean
export GNU_TRP=`~/nco/autobld/config.guess`
export OBJECT_MODE='64' # AIX-specific hack
export CC='xlc_r'
export CFLAGS='-O -qmaxmem=-1 -qarch=auto'
export CPPFLAGS='-D_LARGE_FILES -DNDEBUG -I/usr/vacpp/include'
export CXX='xlC_r'
export FC='xlf_r'
export F90='xlf90_r'
export F90FLAGS='-O -qsuffix=f=f90 -qmaxmem=-1 -qarch=auto'
export FFLAGS='-O -qarch=auto'
make distclean
./configure --prefix=/usr/local > netcdf.configure.foo 2>&1
make
make test
sudo make install
sudo cp ${DATA}/tmp/netcdf-3.6.0/src/f90/typesizes.mod /usr/local/include/typesizes.mod.xlf90
sudo cp ${DATA}/tmp/netcdf-3.6.0/src/f90/netcdf.mod /usr/local/include/netcdf.mod.xlf90
sudo ln -f -s /usr/local/include/netcdf.mod.xlf90 /usr/local/include/netcdf.mod
sudo ln -f -s /usr/local/include/typesizes.mod.xlf90 /usr/local/include/typesizes.mod
make clean

20050217:
# soot.ess.uci.edu Fedora Core 3 gcc/g95 netcdf-3.6.0-p1
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf.tar.gz
mv -f netcdf.tar.gz netcdf-3.6.0-p1.tar.gz
gunzip -f netcdf-3.6.0-p1.tar.gz
tar xvf netcdf-3.6.0-p1.tar
cd ${DATA}/tmp/netcdf-3.6.0-p1/src
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
export CC='gcc'
export CXX='g++'
#export CPPFLAGS='-DNDEBUG -Df2cFortran'
export CPPFLAGS='-DNDEBUG -DpgiFortran'
export CFLAGS='-O -g'
export FC='g95'
export F90='g95'
export FFLAGS='-O -g -fno-second-underscore'
export F90FLAGS='-O -g -fno-second-underscore'
./configure --prefix=/usr/local > netcdf.configure.foo 2>&1
make
make test
sudo make install
exit # Return to previous shell level
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-3.6.0-p1/src/libsrc/libnetcdf.a /usr/local/lib/libnetcdf.a.gcc-g95
sudo cp ${DATA}/tmp/netcdf-3.6.0-p1/src/f90/typesizes.mod /usr/local/include/typesizes.mod.g95
sudo cp ${DATA}/tmp/netcdf-3.6.0-p1/src/f90/netcdf.mod /usr/local/include/netcdf.mod.g95
make clean

# 20050413: ashes.ess.uci.edu Debian Ubuntu Hoary Hedgehog gcc/g95 netcdf-3.6.1-beta3
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-beta.tar.gz
mv -f netcdf-beta.tar.gz netcdf-3.6.1-beta3.tar.gz
gunzip -f netcdf-3.6.1-beta3.tar.gz
tar xvf netcdf-3.6.1-beta3.tar
cd ${DATA}/tmp/netcdf-3.6.1-beta3/src
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
export CC='/usr/bin/gcc'
export CXX='g++'
#export CPPFLAGS='-DNDEBUG -Df2cFortran'
export CPPFLAGS='-DNDEBUG -DpgiFortran'
export CFLAGS='-O -g'
export FC='g95'
export F90='g95'
export FFLAGS='-O -g -fno-second-underscore'
export F90FLAGS='-O -g -fno-second-underscore'
./configure --prefix=/usr/local > netcdf.configure.foo 2>&1
make
make test
sudo make install
exit # Return to previous shell level
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-3.6.1-beta3/src/libsrc/libnetcdf.a /usr/local/lib/libnetcdf.a.gcc-g95
sudo cp ${DATA}/tmp/netcdf-3.6.1-beta3/src/f90/typesizes.mod /usr/local/include/typesizes.mod.g95
sudo cp ${DATA}/tmp/netcdf-3.6.1-beta3/src/f90/netcdf.mod /usr/local/include/netcdf.mod.g95
make clean

#***********************************************************************
# 20050706: ashes.ess.uci.edu LINUX Debian/Ubuntu Hoary Hedgehog gcc-lf95 netcdf-3.6.1-beta3
#***********************************************************************
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-beta.tar.gz
cp -f netcdf-beta.tar.gz netcdf-3.6.1-beta3.tar.gz
tar xzvf netcdf-3.6.1-beta3.tar.gz
cd ${DATA}/tmp/netcdf-3.6.1-beta3/src
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
export CC='gcc'
export CFLAGS='-O'
export CPPFLAGS='-DNDEBUG -DpgiFortran'
export CXX='g++'
export FC='lf95'
export F90='lf95'
export FFLAGS="-O --mod .:${NETCDF_INC}"
export F90FLAGS="-O --mod .:${NETCDF_INC}"
# Do not add --staticlink to any environment variables or things die
./configure --prefix=/usr/local > netcdf.configure.foo 2>&1
make
make test
sudo make install
exit # Return to previous shell level
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-3.6.1-beta3/src/libsrc/libnetcdf.a /usr/local/lib/libnetcdf.a.gcc-lf95
sudo cp ${DATA}/tmp/netcdf-3.6.1-beta3/src/f90/typesizes.mod /usr/local/include/typesizes.mod.lf95
sudo cp ${DATA}/tmp/netcdf-3.6.1-beta3/src/f90/netcdf.mod /usr/local/include/netcdf.mod.lf95
make clean
#***********************************************************************
# 20050706: ashes.ess.uci.edu LINUX Debian/Ubuntu Hoary Hedgehog gcc-lf95 netcdf-3.6.1-beta3
#***********************************************************************

#***********************************************************************
# 20050706: sand.ess.uci.edu LINUXAMD64 Debian/Ubuntu Hoary Hedgehog gcc-gfortran netcdf-3.6.1-beta3
#***********************************************************************
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-beta.tar.gz
mv -f netcdf-beta.tar.gz netcdf-3.6.1-beta3.tar.gz
gunzip -f netcdf-3.6.1-beta3.tar.gz
tar xvf netcdf-3.6.1-beta3.tar
cd ${DATA}/tmp/netcdf-3.6.1-beta3/src
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
export CC='gcc'
export CXX='g++'
export CPPFLAGS='-DNDEBUG -DpgiFortran'
export CFLAGS='-O -g -fPIC -m64'
export FC='gfortran'
export F90='gfortran'
export FFLAGS='-O -g -fno-second-underscore'
export F90FLAGS='-O -g -fno-second-underscore'
./configure --prefix=/usr/local > netcdf.configure.foo 2>&1
make
make test
sudo make install
exit # Return to previous shell level
# NB: Fortran symbols netcdf.o and typeSizes.o are munged into libnetcdf.a 
sudo cp ${DATA}/tmp/netcdf-3.6.1-beta3/src/libsrc/libnetcdf.a /usr/local/lib/libnetcdf.a.gcc-gfortran
sudo cp ${DATA}/tmp/netcdf-3.6.1-beta3/src/f90/typesizes.mod /usr/local/include/typesizes.mod.gfortran
sudo cp ${DATA}/tmp/netcdf-3.6.1-beta3/src/f90/netcdf.mod /usr/local/include/netcdf.mod.gfortran
make clean
#***********************************************************************
# 20050706: sand.ess.uci.edu LINUXAMD64 Debian/Ubuntu Hoary Hedgehog gcc-gfortran netcdf-3.6.1-beta3
#***********************************************************************

#***********************************************************************
# 20050413: elnino.ess.uci.edu Debian Libranet icc/ifort netcdf-3.6.1-beta3
#***********************************************************************
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-beta.tar.gz
mv -f netcdf-beta.tar.gz netcdf-3.6.1-beta3.tar.gz
scp dust.ess.uci.edu:/data/zender/tmp/netcdf-3.6.1-beta3.tar.gz .
gunzip -f netcdf-3.6.1-beta3.tar.gz
tar xvf netcdf-3.6.1-beta3.tar
cd ${DATA}/tmp/netcdf-3.6.1-beta3/src
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
export CC='icc -std=c99'
export CFLAGS='-O3 -g -mp -w1'
export CPPFLAGS='-DNDEBUG -DpgiFortran'
export CXX='icpc'
export CXXFLAGS='-O3 -g -mp -w1'
export FC='ifort'
export F90='ifort'
export FFLAGS='-O3 -g -axW -mp -vec_report1'
export F90FLAGS='-O3 -g -axW -mp -vec_report1'
./configure --prefix=/usr/local > netcdf.configure.foo 2>&1
make
make test
sudo make install
exit # Return to previous shell level
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-3.6.1-beta3/src/libsrc/libnetcdf.a /usr/local/lib/libnetcdf.a.icc-ifort
sudo cp ${DATA}/tmp/netcdf-3.6.1-beta3/src/f90/typesizes.mod /usr/local/include/typesizes.mod.ifort
sudo cp ${DATA}/tmp/netcdf-3.6.1-beta3/src/f90/netcdf.mod /usr/local/include/netcdf.mod.ifort
make clean
#***********************************************************************
# 20050413: elnino.ess.uci.edu Debian Libranet icc/ifort netcdf-3.6.1-beta3
#***********************************************************************

#***********************************************************************
# 20050701: silt.ess.uci.edu LINUXAMD64 Debian/Ubuntu Warty Warthog gcc-g95 netcdf-3.6.1-beta3
#***********************************************************************
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf.tar.gz
mv -f netcdf.tar.gz netcdf-3.6.1-beta3.tar.gz
scp dust.ess.uci.edu:/data/zender/tmp/netcdf-3.6.1-beta3.tar.gz .
gunzip -f netcdf-3.6.1-beta3.tar.gz
tar xvf netcdf-3.6.1-beta3.tar
cd ${DATA}/tmp/netcdf-3.6.1-beta3/src
bash # New shell level keeps environment variables sandboxed
make distclean
export GNU_TRP=`~/nco/autobld/config.guess`
export CC='gcc'
export CXX='g++'
export CPPFLAGS='-DNDEBUG -DpgiFortran'
export CFLAGS='-O -fPIC -m64 -march=opteron -mmmx -msse -msse2 -m3dnow -pipe -fexpensive-optimizations -mfpmath=sse,387'
export FC='g95'
export F90='g95'
export FFLAGS='-O -g -fno-second-underscore'
export F90FLAGS='-O -g -fno-second-underscore'
./configure --prefix=/usr/local > netcdf.configure.foo 2>&1
make
make test
sudo make install
exit # Return to previous shell level
# NB: Fortran symbols netcdf.o and typeSizes.o are munged into libnetcdf.a 
sudo cp ${DATA}/tmp/netcdf-3.6.1-beta3/src/libsrc/libnetcdf.a /usr/local/lib/libnetcdf.a.gcc-g95
sudo cp ${DATA}/tmp/netcdf-3.6.1-beta3/src/f90/typesizes.mod /usr/local/include/typesizes.mod.g95
sudo cp ${DATA}/tmp/netcdf-3.6.1-beta3/src/f90/netcdf.mod /usr/local/include/netcdf.mod.g95
make clean
#***********************************************************************
# 20050701: silt.ess.uci.edu LINUXAMD64 Debian/Ubuntu Warty Warthog gcc-g95 netcdf-3.6.1-beta3
#***********************************************************************

#***********************************************************************
# 20050814: elnino.ess.uci.edu Debian Libranet gcc/g95 netcdf-4.0a
#***********************************************************************
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4.0a.tar.gz
mv -f netcdf-4.0a.tar.gz netcdf-4.0a.tar.gz
tar xvzf netcdf-4.0a.tar.gz
cd ${DATA}/tmp/netcdf-4.0a
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
export CC='/usr/bin/gcc'
export CXX='g++'
#export CPPFLAGS='-DNDEBUG -Df2cFortran'
export CPPFLAGS='-DNDEBUG -DpgiFortran'
export CFLAGS='-O -g'
export FC='g95'
export F90='g95'
export FFLAGS='-O -g -fno-second-underscore'
export F90FLAGS='-O -g -fno-second-underscore'
./configure --prefix=/usr/local > netcdf.configure.foo 2>&1
make
make check
sudo make install
exit # Return to previous shell level
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-4.0a/libsrc/libnetcdf.a /usr/local/lib/libnetcdf.a.gcc-g95
sudo cp ${DATA}/tmp/netcdf-4.0a/f90/typesizes.mod /usr/local/include/typesizes.mod.g95
sudo cp ${DATA}/tmp/netcdf-4.0a/f90/netcdf.mod /usr/local/include/netcdf.mod.g95
make clean
#***********************************************************************
# 20050814: elnino.ess.uci.edu Debian Libranet gcc/g95 netcdf-4.0a
#***********************************************************************

#***********************************************************************
# 20050819: flyash.ess.uci.edu Debian Ubuntu Hoary Hedgehog gcc/g95 netcdf-3.6.1-beta3
#***********************************************************************
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-beta.tar.gz
mv -f netcdf-beta.tar.gz netcdf-3.6.1-beta3.tar.gz
gunzip -f netcdf-3.6.1-beta3.tar.gz
tar xvf netcdf-3.6.1-beta3.tar
cd ${DATA}/tmp/netcdf-3.6.1-beta3/src
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
export CC='gcc'
export CXX='g++'
export CPPFLAGS='-DNDEBUG -DpgiFortran'
export CFLAGS='-O -g'
export FC='g95'
export F90='g95'
export FFLAGS='-O -g -fno-second-underscore'
export F90FLAGS='-O -g -fno-second-underscore'
./configure --prefix=/usr/local > netcdf.configure.foo 2>&1
make
make test
sudo make install
exit # Return to previous shell level
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-3.6.1-beta3/src/libsrc/libnetcdf.a /usr/local/lib/libnetcdf.a.gcc-g95
sudo cp ${DATA}/tmp/netcdf-3.6.1-beta3/src/f90/typesizes.mod /usr/local/include/typesizes.mod.g95
sudo cp ${DATA}/tmp/netcdf-3.6.1-beta3/src/f90/netcdf.mod /usr/local/include/netcdf.mod.g95
make clean
#***********************************************************************
# 20050819: flyash.ess.uci.edu Debian Ubuntu Hoary Hedgehog gcc/g95 netcdf-3.6.1-beta3
#***********************************************************************

#***********************************************************************
# 20051007: ashes.ess.uci.edu Debian Ubuntu 5.4 Hoary Hedgehog gcc/g95 netcdf-4.0-alpha9
#***********************************************************************
cd ${DATA}/tmp
wget -c ftp://ftp.ncsa.uiuc.edu/HDF/pub/outgoing/hdf5/snapshots/hdf5-1.7.51.tar.bz2
wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4.0-alpha9.tar.gz
sudo /bin/rm -r ${DATA}/tmp/hdf5-1.7.51
tar xvjf hdf5-1.7.51.tar.bz2
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.7.51
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
export CC='gcc'
export CXX='g++'
export CPPFLAGS='-DNDEBUG -DpgiFortran'
export CFLAGS='-O -g'
export FC='g95'
export F90='g95'
export FFLAGS='-O -g -fno-second-underscore'
export F90FLAGS='-O -g -fno-second-underscore'
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local/netcdf4
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.7.51/hdf5
# Do not attempt to build Fortran interface because g95 not understood
./configure --prefix=${HDF5_ROOT} --disable-fortran
make
make check
sudo make install
# Do same for netcdf4
cd ${DATA}/tmp
/bin/rm -r ${DATA}/tmp/netcdf-4.0-alpha9
sudo /bin/rm -r ${NETCDF4_ROOT}/include/netcdf.* ${NETCDF4_ROOT}/lib/libnetcdf.* 
tar -xzvf netcdf-4.0-alpha9.tar.gz
cd ${DATA}/tmp/netcdf-4.0-alpha9
make distclean
# Build parallel netCDF with LAM MPI
CPPFLAGS='-I/usr/include/lam' ./configure --prefix=${NETCDF4_ROOT} --enable-netcdf-4 --enable-parallel --disable-shared --with-hdf5=${HDF5_ROOT} --disable-cxx --enable-f90 --enable-f77 > netcdf.configure.foo 2>&1
# Build parallel netCDF with MPICH2 MPI
./configure --prefix=${NETCDF4_ROOT} --enable-netcdf-4 --enable-parallel --disable-shared --with-hdf5=${HDF5_ROOT} --disable-cxx --enable-f90 --enable-f77 > netcdf.configure.foo 2>&1
make
make check
sudo make install
exit # Return to previous shell level
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-4.0-alpha9/libsrc/libnetcdf.a /usr/local/netcdf4/lib/libnetcdf.a.gcc-g95
# netCDF4 Fortran90 interfaces not yet available
#sudo cp ${DATA}/tmp/netcdf-4.0-alpha9/f90/typesizes.mod /usr/local/netcdf4/include/typesizes.mod.g95
#sudo cp ${DATA}/tmp/netcdf-4.0-alpha9/f90/netcdf.mod /usr/local/netcdf4/include/netcdf.mod.g95
make clean
#***********************************************************************
# 20051007: ashes.ess.uci.edu Debian Ubuntu 5.4 Hoary Hedgehog gcc/g95 netcdf-4.0-alpha9
#***********************************************************************

#***********************************************************************
# 20051022: cg1.calit2.uci.edu Mac OS X Darwin 8.2 gcc-4.0.0 netcdf-3.6.1-beta3
#***********************************************************************
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-beta.tar.gz
mv -f netcdf-beta.tar.gz netcdf-3.6.1-beta3.tar.gz
gunzip -f netcdf-3.6.1-beta3.tar.gz
tar xvf netcdf-3.6.1-beta3.tar
cd ${DATA}/tmp/netcdf-3.6.1-beta3/src
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
export CC='gcc'
export CXX='g++'
export CPPFLAGS='-DNDEBUG'
export CFLAGS='-O -g -fno-common'
export FC='g95'
export F90='g95'
export FFLAGS='-O -g -fno-second-underscore'
export F90FLAGS='-O -g -fno-second-underscore'
./configure --prefix=${HOME} --bindir=${HOME}/bin/${PVM_ARCH} --libdir=${HOME}/lib/${PVM_ARCH} --mandir=${HOME}/man > netcdf.configure.foo 2>&1
make
make test
sudo make install
exit # Return to previous shell level
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-3.6.1-beta3/src/libsrc/libnetcdf.a /usr/local/lib/libnetcdf.a.gcc-g95
sudo cp ${DATA}/tmp/netcdf-3.6.1-beta3/src/f90/typesizes.mod /usr/local/include/typesizes.mod.g95
sudo cp ${DATA}/tmp/netcdf-3.6.1-beta3/src/f90/netcdf.mod /usr/local/include/netcdf.mod.g95
make clean
#***********************************************************************
# 20051022: cg1.calit2.uci.edu  Mac OS X Darwin 8.2 gcc-4.0.0 netcdf-3.6.1-beta3
#***********************************************************************

#***********************************************************************
# 20051024: elnino.ess.uci.edu Debian Ubuntu 5.10 Breezy Badger gcc/g95 pnetcdf-1.0.0
#***********************************************************************
# http://www-unix.mcs.anl.gov/parallel-netcdf/
cd ${DATA}/tmp
wget -c http://www-unix.mcs.anl.gov/parallel-netcdf/parallel-netcdf-1.0.0.tar.bz2
tar xvjf parallel-netcdf-1.0.0.tar.bz2
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/parallel-netcdf-1.0.0
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
export CC='gcc'
hexport CXX='g++'
export CPPFLAGS='-DNDEBUG -DpgiFortran'
export CFLAGS='-O -g'
export FC='g95'
export F77='g95'
export F90='g95'
export FFLAGS='-O -g -fno-second-underscore'
export F90FLAGS='-O -g -fno-second-underscore'
export PNETCDF_ROOT=/usr/local
# Do not attempt to build Fortran interface because g95 not understood
# MPI-IO test succeeds using LAM and MPICH2 
./configure --with-mpi=/usr --prefix=${PNETCDF_ROOT} --enable-mpi-io-test --disable-fortran
make
#make check
sudo make install
exit # Return to previous shell level
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/pnetcdf-1.0.0/libsrc/libpnetcdf.a /usr/local/netcdf4/lib/libpnetcdf.a.gcc-g95
# netCDF4 Fortran90 interfaces not yet available
#sudo cp ${DATA}/tmp/pnetcdf-1.0.0/f90/typesizes.mod /usr/local/netcdf4/include/ptypesizes.mod.g95
#sudo cp ${DATA}/tmp/pnetcdf-1.0.0/f90/netcdf.mod /usr/local/netcdf4/include/pnetcdf.mod.g95
make clean
#***********************************************************************
# 20051024: elnino.ess.uci.edu Debian Ubuntu 5.10 Breezy Badger gcc/g95 pnetcdf-1.0.0
#***********************************************************************

#***********************************************************************
# 20051205: elnino.ess.uci.edu Debian Ubuntu 5.10 Breezy Badger gcc/g95 netcdf-4.0-alpha10
#***********************************************************************
cd ${DATA}/tmp
wget -c ftp://ftp.ncsa.uiuc.edu/HDF/pub/outgoing/hdf5/snapshots/hdf5-1.7.51.tar.bz2
wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4.0-alpha10.tar.gz
sudo /bin/rm -r ${DATA}/tmp/hdf5-1.7.51
tar xvjf hdf5-1.7.51.tar.bz2
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.7.51
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
export CC='gcc'
export CXX='g++'
export CPPFLAGS='-DNDEBUG -DpgiFortran'
export CFLAGS='-O -g'
export FC='g95'
export F90='g95'
export FFLAGS='-O -g -fno-second-underscore'
export F90FLAGS='-O -g -fno-second-underscore'
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local/netcdf4
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.7.51/hdf5
# Do not attempt to build Fortran interface because g95 not understood
./configure --prefix=${HDF5_ROOT} --disable-fortran
make
make check
sudo make install
# Do same for netcdf4
cd ${DATA}/tmp
/bin/rm -r ${DATA}/tmp/netcdf-4.0-alpha10
sudo /bin/rm -r ${NETCDF4_ROOT}/include/netcdf.* ${NETCDF4_ROOT}/lib/libnetcdf.* 
tar -xzvf netcdf-4.0-alpha10.tar.gz
cd ${DATA}/tmp/netcdf-4.0-alpha10
make distclean
# Build parallel netCDF with LAM MPI
CPPFLAGS='-I/usr/include/lam' ./configure --prefix=${NETCDF4_ROOT} --enable-netcdf-4 --disable-parallel --disable-shared --with-hdf5=${HDF5_ROOT} --disable-cxx --disable-f90 --disable-f77 > netcdf.configure.foo 2>&1
# Build parallel netCDF with MPICH2 MPI
./configure --prefix=${NETCDF4_ROOT} --enable-netcdf-4 --disable-parallel --disable-shared --with-hdf5=${HDF5_ROOT} --disable-cxx --disable-f90 --disable-f77 > netcdf.configure.foo 2>&1
make
make check
sudo make install
exit # Return to previous shell level
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-4.0-alpha10/libsrc/libnetcdf.a /usr/local/netcdf4/lib/libnetcdf.a.gcc-g95
# netCDF4 Fortran90 interfaces not yet available
#sudo cp ${DATA}/tmp/netcdf-4.0-alpha10/f90/typesizes.mod /usr/local/netcdf4/include/typesizes.mod.g95
#sudo cp ${DATA}/tmp/netcdf-4.0-alpha10/f90/netcdf.mod /usr/local/netcdf4/include/netcdf.mod.g95
make clean
#***********************************************************************
# 20051205: elnino.ess.uci.edu Debian Ubuntu 5.10 Breezy Badger gcc/g95 netcdf-4.0-alpha10
#***********************************************************************          

#***********************************************************************
# 20060120: elnino.ess.uci.edu Debian Ubuntu 5.10 Breezy Badger gcc/g95 netcdf-4.0-alpha11
#***********************************************************************
cd ${DATA}/tmp
wget -c ftp://ftp.ncsa.uiuc.edu/HDF/pub/outgoing/hdf5/snapshots/hdf5-1.7.51.tar.bz2
wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4.0-alpha11.tar.gz
sudo /bin/rm -r ${DATA}/tmp/hdf5-1.7.51
tar xvjf hdf5-1.7.51.tar.bz2
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.7.51
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
export CC='gcc'
export CXX='g++'
export CPPFLAGS='-DNDEBUG -DpgiFortran'
export CFLAGS='-O -g'
export FC='g95'
export F90='g95'
export FFLAGS='-O -g -fno-second-underscore'
export F90FLAGS='-O -g -fno-second-underscore'
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local/netcdf4
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.7.51/hdf5
# Do not attempt to build Fortran interface because g95 not understood
./configure --prefix=${HDF5_ROOT} --disable-fortran
make
make check
sudo make install
# Do same for netcdf4
cd ${DATA}/tmp
/bin/rm -r ${DATA}/tmp/netcdf-4.0-alpha11
sudo /bin/rm -r ${NETCDF4_ROOT}/include/netcdf.* ${NETCDF4_ROOT}/lib/libnetcdf.* 
tar -xzvf netcdf-4.0-alpha11.tar.gz
cd ${DATA}/tmp/netcdf-4.0-alpha11
make distclean
# Build parallel netCDF with LAM MPI
CPPFLAGS='-I/usr/include/lam' ./configure --prefix=${NETCDF4_ROOT} --enable-netcdf-4 --disable-parallel --disable-shared --with-hdf5=${HDF5_ROOT} --disable-cxx --disable-f90 --disable-f77 > netcdf.configure.foo 2>&1
# Build parallel netCDF with MPICH2 MPI
./configure --prefix=${NETCDF4_ROOT} --enable-netcdf-4 --disable-parallel --disable-shared --with-hdf5=${HDF5_ROOT} --disable-cxx --disable-f90 --disable-f77 > netcdf.configure.foo 2>&1
make
make check
sudo make install
exit # Return to previous shell level
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-4.0-alpha11/libsrc/libnetcdf.a /usr/local/netcdf4/lib/libnetcdf.a.gcc-g95
# netCDF4 Fortran90 interfaces not yet available
#sudo cp ${DATA}/tmp/netcdf-4.0-alpha11/f90/typesizes.mod /usr/local/netcdf4/include/typesizes.mod.g95
#sudo cp ${DATA}/tmp/netcdf-4.0-alpha11/f90/netcdf.mod /usr/local/netcdf4/include/netcdf.mod.g95
make clean
#***********************************************************************
# 20060120: elnino.ess.uci.edu Debian Ubuntu 5.10 Breezy Badger gcc/g95 netcdf-4.0-alpha10
#***********************************************************************          

#***********************************************************************
# 20060202: elnino.ess.uci.edu Debian Ubuntu Breezy Badger gcc/g95 netcdf-3.6.1
#***********************************************************************
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-3.6.1.tar.gz
gunzip -f netcdf-3.6.1.tar.gz
tar xvf netcdf-3.6.1.tar
cd ${DATA}/tmp/netcdf-3.6.1/src
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
export CC='gcc'
export CXX='g++'
export CPPFLAGS='-DNDEBUG -DpgiFortran'
export CFLAGS='-O -g'
export FC='g95'
export F90='g95'
export FFLAGS='-O -g -fno-second-underscore'
export F90FLAGS='-O -g -fno-second-underscore'
./configure --prefix=/usr/local --disable-flag-setting > netcdf.configure.foo 2>&1
make
make test
sudo make install
exit # Return to previous shell level
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-3.6.1/src/libsrc/libnetcdf.a /usr/local/lib/libnetcdf.a.gcc-g95
sudo cp ${DATA}/tmp/netcdf-3.6.1/src/f90/typesizes.mod /usr/local/include/typesizes.mod.g95
sudo cp ${DATA}/tmp/netcdf-3.6.1/src/f90/netcdf.mod /usr/local/include/netcdf.mod.g95
make clean
#***********************************************************************
# 20060202: elnino.ess.uci.edu Debian Ubuntu Breezy Badger gcc/g95 netcdf-3.6.1
#***********************************************************************

#***********************************************************************
# 20060225: virga.ess.uci.edu Debian Ubuntu Dapper Drake icc/ifort netcdf-3.6.1
#***********************************************************************
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-3.6.1.tar.gz
scp dust.ess.uci.edu:/data/zender/tmp/netcdf-3.6.1.tar.gz .
gunzip -f netcdf-3.6.1.tar.gz
/bin/rm -r -f netcdf-3.6.1
tar xvf netcdf-3.6.1.tar
cd ${DATA}/tmp/netcdf-3.6.1/src
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
export CC='icc -std=c99'
export CFLAGS='-O3 -g -mp -w1'
export CPPFLAGS='-DNDEBUG -DpgiFortran'
export CXX='icpc'
export CXXFLAGS='-O3 -g -mp -w1'
export FC='ifort'
export F90='ifort'
export FFLAGS='-O3 -g -axW -mp -vec_report1'
export F90FLAGS='-O3 -g -axW -mp -vec_report1'
./configure --prefix=/usr/local > netcdf.configure.foo 2>&1
make
make test
sudo make install
exit # Return to previous shell level
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-3.6.1/src/libsrc/libnetcdf.a /usr/local/lib/libnetcdf.a.icc-ifort
sudo cp ${DATA}/tmp/netcdf-3.6.1/src/f90/typesizes.mod /usr/local/include/typesizes.mod.ifort
sudo cp ${DATA}/tmp/netcdf-3.6.1/src/f90/netcdf.mod /usr/local/include/netcdf.mod.ifort
make clean
#***********************************************************************
# 20060225: virga.ess.uci.edu Debian Ubuntu Dapper Drake icc/ifort netcdf-3.6.1
#***********************************************************************

#***********************************************************************
# 20060505: tephra.ess.uci.edu LINUXAMD64 Fedora Core 4 gcc-g95 netcdf-3.6.1
#***********************************************************************
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf.tar.gz
mv -f netcdf.tar.gz netcdf-3.6.1.tar.gz
scp dust.ess.uci.edu:/data/zender/tmp/netcdf-3.6.1.tar.gz .
gunzip -f netcdf-3.6.1.tar.gz
tar xvf netcdf-3.6.1.tar
cd ${DATA}/tmp/netcdf-3.6.1/src
bash # New shell level keeps environment variables sandboxed
make distclean
export GNU_TRP=`~/nco/autobld/config.guess`
export CC='gcc'
export CXX='g++'
export CPPFLAGS='-DNDEBUG -DpgiFortran'
export CFLAGS='-O -fPIC -m64 -march=opteron -mmmx -msse -msse2 -m3dnow -pipe -fexpensive-optimizations -mfpmath=sse,387'
export FC='g95'
export F90='g95'
export FFLAGS='-O -g -fno-second-underscore'
export F90FLAGS='-O -g -fno-second-underscore'
./configure --prefix=/usr/local > netcdf.configure.foo 2>&1
make
make test
sudo make install
exit # Return to previous shell level
# NB: Fortran symbols netcdf.o and typeSizes.o are munged into libnetcdf.a 
sudo cp ${DATA}/tmp/netcdf-3.6.1/src/libsrc/libnetcdf.a /usr/local/lib/libnetcdf.a.gcc-g95
sudo cp ${DATA}/tmp/netcdf-3.6.1/src/f90/typesizes.mod /usr/local/include/typesizes.mod.g95
sudo cp ${DATA}/tmp/netcdf-3.6.1/src/f90/netcdf.mod /usr/local/include/netcdf.mod.g95
make clean
#***********************************************************************
# 20060505: tephra.ess.uci.edu LINUXAMD64 Fedora Core 4 gcc-g95 netcdf-3.6.1
#***********************************************************************

#***********************************************************************
# 20060609: ipcc.ess.uci.edu LINUXAMD64 Rocks/CentOS pathcc-pathf95 netcdf-3.6.1
#***********************************************************************
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf.tar.gz
mv -f netcdf.tar.gz netcdf-3.6.1.tar.gz
scp dust.ess.uci.edu:/data/zender/tmp/netcdf-3.6.1.tar.gz .
gunzip -f netcdf-3.6.1.tar.gz
tar xvf netcdf-3.6.1.tar
cd ${DATA}/tmp/netcdf-3.6.1/src
bash # New shell level keeps environment variables sandboxed
make distclean
export GNU_TRP=`~/nco/autobld/config.guess`
export CC='pathcc'
export CXX='pathCC'
export CPPFLAGS='-DNDEBUG -DpgiFortran -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE -fno-second-underscore'
export CFLAGS='-O2 -m64'
export FC='pathf95'
export F90='pathf95'
export FFLAGS='-O2 -fno-second-underscore'
export F90FLAGS='-O2 -fno-second-underscore'
./configure --prefix=/usr/local > netcdf.configure.foo 2>&1
make
make test
sudo make install
exit # Return to previous shell level
# NB: Fortran symbols netcdf.o and typeSizes.o are munged into libnetcdf.a 
sudo cp ${DATA}/tmp/netcdf-3.6.1/src/libsrc/libnetcdf.a /usr/local/lib/libnetcdf.a.pathcc-pathf95
sudo cp ${DATA}/tmp/netcdf-3.6.1/src/f90/TYPESIZES.mod /usr/local/include/TYPESIZES.mod.pathf95
sudo cp ${DATA}/tmp/netcdf-3.6.1/src/f90/NETCDF.mod /usr/local/include/NETCDF.mod.pathf95
sudo ln -f -s /usr/local/include/TYPESIZES.mod.pathf95 /usr/local/include/typesizes.mod
sudo ln -f -s /usr/local/include/NETCDF.mod.pathf95 /usr/local/include/netcdf.mod
make clean
#***********************************************************************
# 20060609: ipcc.ess.uci.edu LINUXAMD64 Rocks/CentOS pathcc-pathf95 netcdf-3.6.1
#***********************************************************************

#***********************************************************************          
# 20060924: ashes.ess.uci.edu Debian Ubuntu 6.05 Dapper Drake gcc/g95 netcdf-4.0-alpha16
#***********************************************************************
cd ${DATA}/tmp
wget -c ftp://ftp.ncsa.uiuc.edu/HDF/pub/outgoing/hdf5/snapshots/hdf5-1.7.51.tar.bz2
wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/netcdf-4.0-alpha16.tar.gz
sudo /bin/rm -r ${DATA}/tmp/hdf5-1.7.51
tar xvjf hdf5-1.7.51.tar.bz2
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.7.51
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
export CC='gcc'
export CXX='g++'
export CPPFLAGS='-DNDEBUG -DpgiFortran'
export CFLAGS='-O -g'
export FC='g95'
export F90='g95'
export FFLAGS='-O -g -fno-second-underscore'
export F90FLAGS='-O -g -fno-second-underscore'
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local/netcdf4
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.7.51/hdf5
# Do not attempt to build Fortran interface because g95 not understood
./configure --prefix=${HDF5_ROOT} --disable-fortran
make
make check
sudo make install
# Do same for netcdf4
cd ${DATA}/tmp
/bin/rm -r ${DATA}/tmp/netcdf-4.0-alpha16
sudo /bin/rm -r ${NETCDF4_ROOT}/include/netcdf.* ${NETCDF4_ROOT}/lib/libnetcdf.* 
tar -xzvf netcdf-4.0-alpha16.tar.gz
cd ${DATA}/tmp/netcdf-4.0-alpha16
make distclean
# Build parallel netCDF with LAM MPI
CPPFLAGS='-I/usr/include/lam' ./configure --prefix=${NETCDF4_ROOT} --enable-netcdf-4 --disable-parallel --disable-shared --with-hdf5=${HDF5_ROOT} --disable-cxx --disable-f90 --disable-f77 > netcdf.configure.foo 2>&1
# Build parallel netCDF with MPICH2 MPI
./configure --prefix=${NETCDF4_ROOT} --enable-netcdf-4 --disable-parallel --disable-shared --with-hdf5=${HDF5_ROOT} --disable-cxx --disable-f90 --disable-f77 > netcdf.configure.foo 2>&1
make
make check
sudo make install
exit # Return to previous shell level
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-4.0-alpha16/libsrc4/.libs/libnetcdf.a /usr/local/netcdf4/lib/libnetcdf.a.gcc-g95
# netCDF4 Fortran90 interfaces not yet available
#sudo cp ${DATA}/tmp/netcdf-4.0-alpha16/f90/typesizes.mod /usr/local/netcdf4/include/typesizes.mod.g95
#sudo cp ${DATA}/tmp/netcdf-4.0-alpha16/f90/netcdf.mod /usr/local/netcdf4/include/netcdf.mod.g95
make clean
#***********************************************************************
# 20060924: ashes.ess.uci.edu Debian Ubuntu 6.05 Dapper Drake gcc/g95 netcdf-4.0-alpha16
#***********************************************************************

#***********************************************************************
# 20061104: sand.ess.uci.edu LINUXAMD64 Ubuntu 6.10 Edgy Eft gcc-pgf95 netcdf-3.6.1
#***********************************************************************
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf.tar.gz
mv -f netcdf.tar.gz netcdf-3.6.1.tar.gz
scp dust.ess.uci.edu:/data/zender/tmp/netcdf-3.6.1.tar.gz .
gunzip -f netcdf-3.6.1.tar.gz
tar xvf netcdf-3.6.1.tar
cd ${DATA}/tmp/netcdf-3.6.1/src
bash # New shell level keeps environment variables sandboxed
make distclean
export GNU_TRP=`~/nco/autobld/config.guess`
export CC='gcc'
export CXX='g++'
export CPPFLAGS='-DNDEBUG -DpgiFortran'
export CFLAGS='-O -fPIC -m64 -march=opteron -mmmx -msse -msse2 -m3dnow -pipe -fexpensive-optimizations -mfpmath=sse,387'
export FC='pgf95'
export F90='pgf95'
export FFLAGS='-Mextend -Mnosecond_underscore -Mrecursive -Mdalign -Ktrap=fp -Mlfs'
export F90FLAGS='-Mextend -Mnosecond_underscore -Mrecursive -Mdalign -Ktrap=fp -Mlfs'
./configure --prefix=/usr/local > netcdf.configure.foo 2>&1
make
make test
sudo make install
exit # Return to previous shell level
# NB: Fortran symbols netcdf.o and typeSizes.o are munged into libnetcdf.a 
sudo cp ${DATA}/tmp/netcdf-3.6.1/src/libsrc/libnetcdf.a /usr/local/lib/libnetcdf.a.gcc-pgf95
sudo cp ${DATA}/tmp/netcdf-3.6.1/src/f90/typesizes.mod /usr/local/include/typesizes.mod.pgf95
sudo cp ${DATA}/tmp/netcdf-3.6.1/src/f90/netcdf.mod /usr/local/include/netcdf.mod.pgf95
make clean
#***********************************************************************
# 20061104: sand.ess.uci.edu LINUXAMD64 Ubuntu 6.10 Edgy Eft gcc-pgf95 netcdf-3.6.1
#***********************************************************************

#***********************************************************************
# 20061124: sand.ess.uci.edu LINUXAMD64 Debian/Ubuntu 6.10 Edgy Eft gcc-gfortran netcdf-3.6.2-beta4
#***********************************************************************
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-beta.tar.gz
mv -f netcdf-beta.tar.gz netcdf-3.6.2-beta4.tar.gz
gunzip -f netcdf-3.6.2-beta4.tar.gz
tar xvf netcdf-3.6.2-beta4.tar
cd ${DATA}/tmp/netcdf-3.6.2-beta4
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
export CC='gcc'
export CXX='g++'
export CPPFLAGS='-DNDEBUG'
export CFLAGS='-O -g -fPIC -m64'
export FC='gfortran'
export F90='gfortran'
export FFLAGS='-O -g -fno-second-underscore'
export F90FLAGS='-O -g -fno-second-underscore'
./configure --prefix=/usr/local --disable-shared > netcdf.configure.foo 2>&1
make
make test
sudo make install
exit # Return to previous shell level
# NB: Fortran symbols netcdf.o and typeSizes.o are munged into libnetcdf.a 
sudo cp ${DATA}/tmp/netcdf-3.6.2-beta4/libsrc/.libs/libnetcdf.a /usr/local/lib/libnetcdf.a.gcc-gfortran
sudo cp ${DATA}/tmp/netcdf-3.6.2-beta4/f90/typesizes.mod /usr/local/include/typesizes.mod.gfortran
sudo cp ${DATA}/tmp/netcdf-3.6.2-beta4/f90/netcdf.mod /usr/local/include/netcdf.mod.gfortran
make clean
#***********************************************************************
# 20061124: sand.ess.uci.edu LINUXAMD64 Debian/Ubuntu 6.10 Edgy Eft gcc-gfortran netcdf-3.6.2-beta4
#***********************************************************************

#***********************************************************************
# 20061126: tephra.ess.uci.edu LINUXAMD64 Debian/Ubuntu 6.05 Dapper Drake pgcc-pgf95 netcdf-3.6.2-beta4
# NB: Could not get this to pass make test for C
#***********************************************************************
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-beta.tar.gz
mv -f netcdf-beta.tar.gz netcdf-3.6.2-beta4.tar.gz
gunzip -f netcdf-3.6.2-beta4.tar.gz
tar xvf netcdf-3.6.2-beta4.tar
cd ${DATA}/tmp/netcdf-3.6.2-beta4
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
export CC='pgcc' # NB: Could not get this to pass make test for C
export CXX='pgCC'
export CPPFLAGS='-DNDEBUG -DpgiFortran'
export CFLAGS='-O -Minfo=all -Mlfs -tp=amd64'
export FC='pgf95'
export F90='pgf95'
export FFLAGS='-O -Mextend -Mnosecond_underscore -Mrecursive -Mdalign -Ktrap=fp -Mlfs'
export F90FLAGS='-O -Mextend -Mnosecond_underscore -Mrecursive -Mdalign -Ktrap=fp -Mlfs'
./configure --prefix=/usr/local --disable-shared > netcdf.configure.foo 2>&1
make
make test
sudo make install
exit # Return to previous shell level
# NB: Fortran symbols netcdf.o and typeSizes.o are munged into libnetcdf.a 
sudo cp ${DATA}/tmp/netcdf-3.6.2-beta4/libsrc/.libs/libnetcdf.a /usr/local/lib/libnetcdf.a.pgcc-pgf95
sudo cp ${DATA}/tmp/netcdf-3.6.2-beta4/f90/typesizes.mod /usr/local/include/typesizes.mod.pgf95
sudo cp ${DATA}/tmp/netcdf-3.6.2-beta4/f90/netcdf.mod /usr/local/include/netcdf.mod.pgf95
make clean
#***********************************************************************
# 20061126: tephra.ess.uci.edu LINUXAMD64 Debian/Ubuntu 6.05 Dapper Drake pgcc-pgf95 netcdf-3.6.2-beta4
#***********************************************************************

#***********************************************************************
# 20061126: tephra.ess.uci.edu LINUXAMD64 Debian/Ubuntu 6.05 Dapper Drake gcc-pgf95 netcdf-3.6.2-beta4
#***********************************************************************
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-beta.tar.gz
mv -f netcdf-beta.tar.gz netcdf-3.6.2-beta4.tar.gz
gunzip -f netcdf-3.6.2-beta4.tar.gz
tar xvf netcdf-3.6.2-beta4.tar
cd ${DATA}/tmp/netcdf-3.6.2-beta4
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
export CC='gcc'
export CXX='g++'
export CPPFLAGS='-DNDEBUG -DpgiFortran'
export CFLAGS='-O -fPIC -m64 -march=opteron -mmmx -msse -msse2 -m3dnow -pipe -fexpensive-optimizations -mfpmath=sse,387'
export FC='pgf95'
export F90='pgf95'
export FFLAGS='-O -Mextend -Mnosecond_underscore -Mrecursive -Mdalign -Ktrap=fp -Mlfs'
export F90FLAGS='-O -Mextend -Mnosecond_underscore -Mrecursive -Mdalign -Ktrap=fp -Mlfs'
./configure --prefix=/usr/local --disable-shared > netcdf.configure.foo 2>&1
make
make test
sudo make install
exit # Return to previous shell level
# NB: Fortran symbols netcdf.o and typeSizes.o are munged into libnetcdf.a 
sudo cp ${DATA}/tmp/netcdf-3.6.2-beta4/libsrc/.libs/libnetcdf.a /usr/local/lib/libnetcdf.a.gcc-pgf95
sudo cp ${DATA}/tmp/netcdf-3.6.2-beta4/f90/typesizes.mod /usr/local/include/typesizes.mod.pgf95
sudo cp ${DATA}/tmp/netcdf-3.6.2-beta4/f90/netcdf.mod /usr/local/include/netcdf.mod.pgf95
make clean
#***********************************************************************
# 20061126: tephra.ess.uci.edu LINUXAMD64 Debian/Ubuntu 6.05 Dapper Drake gcc-pgf95 netcdf-3.6.2-beta4
#***********************************************************************

#***********************************************************************
# 20061130: virga.ess.uci.edu Debian Ubuntu Edgy Eft gcc/g95 netcdf-3.6.2-beta4
#***********************************************************************
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-beta.tar.gz
mv -f netcdf-beta.tar.gz netcdf-3.6.2-beta4.tar.gz
gunzip -f netcdf-3.6.2-beta4.tar.gz
tar xvf netcdf-3.6.2-beta4.tar
cd ${DATA}/tmp/netcdf-3.6.2-beta4
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
export CC='gcc'
export CXX='g++'
export CPPFLAGS='-DNDEBUG -DpgiFortran'
export CFLAGS='-O -g'
export FC='g95'
export F90='g95'
export FCLAGS='-O -g -fno-second-underscore'
export FFLAGS='-O -g -fno-second-underscore'
export F90FLAGS='-O -g -fno-second-underscore'
./configure --prefix=/usr/local --disable-shared > netcdf.configure.foo 2>&1
make
make test
sudo make install
exit # Return to previous shell level
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-3.6.2-beta4/libsrc/.libs/libnetcdf.a /usr/local/lib/libnetcdf.a.gcc-g95
sudo cp ${DATA}/tmp/netcdf-3.6.2-beta4/f90/typesizes.mod /usr/local/include/typesizes.mod.g95
sudo cp ${DATA}/tmp/netcdf-3.6.2-beta4/f90/netcdf.mod /usr/local/include/netcdf.mod.g95
make clean
#***********************************************************************
# 20061130: virga.ess.uci.edu Debian Ubuntu Edgy Eft gcc/g95 netcdf-3.6.2-beta4
#***********************************************************************

#***********************************************************************
# 20061228: pbs.ess.uci.edu LINUXAMD64 CentOS 4.2 gcc-g95 netcdf-3.6.2-beta4
#***********************************************************************
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-beta.tar.gz
mv -f netcdf-beta.tar.gz netcdf-3.6.2-beta4.tar.gz
gunzip -f netcdf-3.6.2-beta4.tar.gz
tar xvf netcdf-3.6.2-beta4.tar
cd ${DATA}/tmp/netcdf-3.6.2-beta4
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
export CC='gcc'
export CXX='g++'
export CPPFLAGS='-DNDEBUG -DpgiFortran'
export CFLAGS='-O -fPIC -m64 -march=opteron -mmmx -msse -msse2 -m3dnow -pipe -fexpensive-optimizations -mfpmath=sse,387'
export FC='g95'
export F90='g95'
export FFLAGS='-O -g -fno-second-underscore'
export F90FLAGS='-O -g -fno-second-underscore'
./configure --prefix=/usr/local --disable-flag-setting --disable-shared > netcdf.configure.foo 2>&1
make > netcdf.make.foo 2>&1
make test
sudo make install
exit # Return to previous shell level
# NB: Fortran symbols netcdf.o and typeSizes.o are munged into libnetcdf.a 
sudo cp ${DATA}/tmp/netcdf-3.6.2-beta4/libsrc/.libs/libnetcdf.a /usr/local/lib/libnetcdf.a.gcc-g95
sudo cp ${DATA}/tmp/netcdf-3.6.2-beta4/f90/typesizes.mod /usr/local/include/typesizes.mod.g95
sudo cp ${DATA}/tmp/netcdf-3.6.2-beta4/f90/netcdf.mod /usr/local/include/netcdf.mod.g95
make clean
#***********************************************************************
# 20061228: pbs.ess.uci.edu LINUXAMD64 CentOS 4.2 gcc-g95 netcdf-3.6.2-beta4
#***********************************************************************

#***********************************************************************
# 20070120: ashes.ess.uci.edu LINUX Debian/Ubuntu 6.10 Edgy Eft gcc-gfortran netcdf-3.6.2-beta6
#***********************************************************************
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-beta.tar.gz
mv -f netcdf-beta.tar.gz netcdf-3.6.2-beta6.tar.gz
gunzip -f netcdf-3.6.2-beta6.tar.gz
tar xvf netcdf-3.6.2-beta6.tar
cd ${DATA}/tmp/netcdf-3.6.2-beta6
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
export CC='gcc'
export CXX='g++'
export CPPFLAGS='-DNDEBUG'
export CFLAGS='-O -g'
export FC='gfortran'
export F90='gfortran'
export FFLAGS='-O -g -fno-second-underscore'
export F90FLAGS='-O -g -fno-second-underscore'
./configure --prefix=/usr/local --disable-shared > netcdf.configure.foo 2>&1
make
make test
sudo make install
exit # Return to previous shell level
# NB: Fortran symbols netcdf.o and typeSizes.o are munged into libnetcdf.a 
sudo cp ${DATA}/tmp/netcdf-3.6.2-beta6/libsrc/.libs/libnetcdf.a /usr/local/lib/libnetcdf.a.gcc-gfortran
sudo cp ${DATA}/tmp/netcdf-3.6.2-beta6/f90/typesizes.mod /usr/local/include/typesizes.mod.gfortran
sudo cp ${DATA}/tmp/netcdf-3.6.2-beta6/f90/netcdf.mod /usr/local/include/netcdf.mod.gfortran
make clean
#***********************************************************************
# 20070120: ashes.ess.uci.edu LINUX Debian/Ubuntu 6.10 Edgy Eft gcc-gfortran netcdf-3.6.2-beta6
#***********************************************************************

#***********************************************************************
# 20070308: soot.ess.uci.edu LINUX Fedora Core 6 fc6 gcc-gfortran netcdf-3.6.2
#***********************************************************************
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf.tar.gz
mv -f netcdf.tar.gz netcdf-3.6.2.tar.gz
gunzip -f netcdf-3.6.2.tar.gz
tar xvf netcdf-3.6.2.tar
cd ${DATA}/tmp/netcdf-3.6.2
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
export CC='gcc'
export CXX='g++'
export CPPFLAGS='-DNDEBUG'
export CFLAGS='-O -g'
export FC='gfortran'
export F90='gfortran'
export FFLAGS='-O -g -fno-second-underscore'
export F90FLAGS='-O -g -fno-second-underscore'
./configure --prefix=/usr/local --disable-shared > netcdf.configure.foo 2>&1
make
make test
sudo make install
exit # Return to previous shell level
# NB: Fortran symbols netcdf.o and typeSizes.o are munged into libnetcdf.a 
sudo cp ${DATA}/tmp/netcdf-3.6.2/libsrc/.libs/libnetcdf.a /usr/local/lib/libnetcdf.a.gcc-gfortran
sudo cp ${DATA}/tmp/netcdf-3.6.2/f90/typesizes.mod /usr/local/include/typesizes.mod.gfortran
sudo cp ${DATA}/tmp/netcdf-3.6.2/f90/netcdf.mod /usr/local/include/netcdf.mod.gfortran
make clean
#***********************************************************************
# 20070308: soot.ess.uci.edu LINUX Fedora Core 6 fc6 gcc-gfortran netcdf-3.6.2
#***********************************************************************

#***********************************************************************          
# 20070424: virga.ess.uci.edu Debian Ubuntu 7.04 Feisty Fawn gcc/g95 netcdf-4.0-beta1
#***********************************************************************
cd ${DATA}/tmp
wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/hdf5-1.8.0-beta1.tar.gz
wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/netcdf-beta.tar.gz
/bin/rm -r ${DATA}/tmp/hdf5-1.8.0-beta1
tar xvzf hdf5-1.8.0-beta1.tar.gz
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.8.0-beta1
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
export CC='gcc'
export CXX='g++'
export FC='g95'
export F77='g95'
export F90='g95'
# export CPPFLAGS='-DNDEBUG' # 20070507: '-O -g' causes HDF5 'make check' to fail
# export CFLAGS='-O -g' # 20070507: '-O -g' causes HDF5 'make check' to fail
# export FFLAGS='-O -g' # 20070507: '-O -g' causes HDF5 'make check' to fail
# export F90FLAGS='-O -g' # 20070507: '-O -g' causes HDF5 'make check' to fail
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local/netcdf4
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.8.0-beta1/hdf5
./configure --prefix=${HDF5_ROOT} --enable-cxx --enable-fortran
# 20070507 HDF5 --enable-cxx conflicts with --enable-parallel
# 20070507 HDF5 --enable-parallel requires parallel filesystem
# ./configure --prefix=${HDF5_ROOT} --enable-fortran --enable-parallel
make
make check
sudo make install
# Do same for netcdf4
cd ${DATA}/tmp
/bin/rm -r ${DATA}/tmp/netcdf-4.0-beta1
sudo /bin/rm -r ${NETCDF4_ROOT}/include/netcdf.* ${NETCDF4_ROOT}/lib/libnetcdf.* 
tar xzvf netcdf-beta.tar.gz
cd ${DATA}/tmp/netcdf-4.0-beta1
make distclean
# Build parallel netCDF with LAM MPI
CPPFLAGS='-I/usr/include/lam' ./configure --prefix=${NETCDF4_ROOT} --enable-netcdf-4 --enable-f77 --disable-parallel --disable-shared --with-hdf5=${HDF5_ROOT} > netcdf.configure.foo 2>&1
make
make check
sudo make install
exit # Return to previous shell level
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-4.0-beta1/libsrc4/.libs/libnetcdf.a /usr/local/netcdf4/lib/libnetcdf.a.gcc-g95
sudo cp ${DATA}/tmp/netcdf-4.0-beta1/f90/typesizes.mod /usr/local/netcdf4/include/typesizes.mod.g95
sudo cp ${DATA}/tmp/netcdf-4.0-beta1/f90/netcdf.mod /usr/local/netcdf4/include/netcdf.mod.g95
make clean
#***********************************************************************
# 20070424: virga.ess.uci.edu Debian Ubuntu 7.04 Feisty Fawn gcc/g95 netcdf-4.0-beta1
#***********************************************************************

#***********************************************************************
# 20070425: virga.ess.uci.edu Debian Ubuntu Feisty Fawn gcc/g95 netcdf-3.6.2
#***********************************************************************
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf.tar.gz
mv -f netcdf.tar.gz netcdf-3.6.2.tar.gz
gunzip -f netcdf-3.6.2.tar.gz
tar xvf netcdf-3.6.2.tar
cd ${DATA}/tmp/netcdf-3.6.2
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
export CC='gcc'
export CXX='g++'
export CPPFLAGS='-DNDEBUG'
export CFLAGS='-O -g'
export FC='g95'
export F90='g95'
export FCLAGS='-O -g'
export FFLAGS='-O -g'
export F90FLAGS='-O -g'
./configure --prefix=/usr/local --disable-shared > netcdf.configure.foo 2>&1
make
make test
sudo make install
exit # Return to previous shell level
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-3.6.2/libsrc/.libs/libnetcdf.a /usr/local/lib/libnetcdf.a.gcc-g95
sudo cp ${DATA}/tmp/netcdf-3.6.2/f90/typesizes.mod /usr/local/include/typesizes.mod.g95
sudo cp ${DATA}/tmp/netcdf-3.6.2/f90/netcdf.mod /usr/local/include/netcdf.mod.g95
make clean
#***********************************************************************
# 20070425: virga.ess.uci.edu Debian Ubuntu Feisty Fawn gcc/g95 netcdf-3.6.2
#***********************************************************************

#***********************************************************************
# 20070425: sand.ess.uci.edu LINUXAMD64 Debian Ubuntu Feisty Fawn gcc-g95 netcdf-3.6.2
#***********************************************************************
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf.tar.gz
mv -f netcdf.tar.gz netcdf-3.6.2.tar.gz
gunzip -f netcdf-3.6.2.tar.gz
tar xvf netcdf-3.6.2.tar
cd ${DATA}/tmp/netcdf-3.6.2
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
export CC='gcc'
export CXX='g++'
export CPPFLAGS='-DNDEBUG'
export CFLAGS='-O -fPIC -m64 -march=opteron -mmmx -msse -msse2 -m3dnow -pipe -fexpensive-optimizations -mfpmath=sse,387'
export FC='g95'
export F90='g95'
export FFLAGS='-O -g'
export F90FLAGS='-O -g'
./configure --prefix=/usr/local --disable-shared > netcdf.configure.foo 2>&1
make > netcdf.make.foo 2>&1
make test
sudo make install
exit # Return to previous shell level
# NB: Fortran symbols netcdf.o and typeSizes.o are munged into libnetcdf.a 
sudo cp ${DATA}/tmp/netcdf-3.6.2/libsrc/.libs/libnetcdf.a /usr/local/lib/libnetcdf.a.gcc-g95
sudo cp ${DATA}/tmp/netcdf-3.6.2/f90/typesizes.mod /usr/local/include/typesizes.mod.g95
sudo cp ${DATA}/tmp/netcdf-3.6.2/f90/netcdf.mod /usr/local/include/netcdf.mod.g95
make clean
#***********************************************************************
# 20070425: sand.ess.uci.edu LINUXAMD64 Debian Ubuntu Feisty Fawn gcc-g95 netcdf-3.6.2
#***********************************************************************

#***********************************************************************          
# 20070515: virga.ess.uci.edu Debian Ubuntu 7.04 Feisty Fawn gcc/g95 netcdf-4-daily
#***********************************************************************
cd ${DATA}/tmp
wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/hdf5-1.8.0-beta1.tar.gz
/bin/rm netcdf-4-daily.tar.gz
wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/snapshot/netcdf-4-daily.tar.gz
/bin/rm -r ${DATA}/tmp/hdf5-1.8.0-beta1
tar xvzf hdf5-1.8.0-beta1.tar.gz
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.8.0-beta1
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
export CC='gcc'
export CXX='g++'
export FC='g95'
export F77='g95'
export F90='g95'
# export CPPFLAGS='-DNDEBUG' # 20070507: '-O -g' causes HDF5 'make check' to fail
# export CFLAGS='-O -g' # 20070507: '-O -g' causes HDF5 'make check' to fail
# export FFLAGS='-O -g' # 20070507: '-O -g' causes HDF5 'make check' to fail
# export F90FLAGS='-O -g' # 20070507: '-O -g' causes HDF5 'make check' to fail
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local/netcdf4
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.8.0-beta1/hdf5
./configure --prefix=${HDF5_ROOT} --enable-cxx --enable-fortran
# 20070507 HDF5 --enable-cxx conflicts with --enable-parallel
# 20070507 HDF5 --enable-parallel requires parallel filesystem
# ./configure --prefix=${HDF5_ROOT} --enable-fortran --enable-parallel
make
make check
sudo make install
# Do same for netcdf4
cd ${DATA}/tmp
/bin/rm -r ${DATA}/tmp/netcdf-4.0-snapshot*
sudo /bin/rm -r ${NETCDF4_ROOT}/include/netcdf.* ${NETCDF4_ROOT}/lib/libnetcdf.* 
tar xzvf netcdf-4-daily.tar.gz
cd ${DATA}/tmp/netcdf-4.0-snapshot2007060701
make distclean
# Build parallel netCDF with LAM MPI
CPPFLAGS='-I/usr/include/lam' ./configure --prefix=${NETCDF4_ROOT} --enable-netcdf-4 --enable-f77 --disable-parallel --disable-shared --with-hdf5=${HDF5_ROOT} > netcdf.configure.foo 2>&1
make
make check
sudo make install
exit # Return to previous shell level
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-4.0-snapshot2007060701/libsrc4/.libs/libnetcdf.a /usr/local/netcdf4/lib/libnetcdf.a.gcc-g95
sudo cp ${DATA}/tmp/netcdf-4.0-snapshot2007060701/f90/typesizes.mod /usr/local/netcdf4/include/typesizes.mod.g95
sudo cp ${DATA}/tmp/netcdf-4.0-snapshot2007060701/f90/netcdf.mod /usr/local/netcdf4/include/netcdf.mod.g95
make clean
#***********************************************************************
# 20070515: virga.ess.uci.edu Debian Ubuntu 7.04 Feisty Fawn gcc/g95 netcdf-4-daily
#***********************************************************************

#***********************************************************************
# 20070515: esmf.ess.uci.edu AIX 5.1 xlc/xlf netcdf-3.6.2
#***********************************************************************
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf.tar.gz
mv -f netcdf.tar.gz netcdf-3.6.2.tar.gz
gunzip -f netcdf-3.6.2.tar.gz
tar xvf netcdf-3.6.2.tar
cd ${DATA}/tmp/netcdf-3.6.2
make distclean
export GNU_TRP=`~/nco/autobld/config.guess`
export OBJECT_MODE='64' # AIX-specific hack
export CC='xlc_r'
export CFLAGS='-O -qmaxmem=-1 -qarch=auto'
export CPPFLAGS='-DNDEBUG -I/usr/vacpp/include'
export CXX='xlC_r'
export F77='xlf_r'
export F90='xlf90_r'
export F90FLAGS='-O -qsuffix=f=f90 -qmaxmem=-1 -qarch=auto'
export FFLAGS='-O -qarch=auto'
make distclean
./configure --prefix=/usr/local --disable-shared > netcdf.configure.foo 2>&1
make
make test
sudo make install
sudo cp ${DATA}/tmp/netcdf-3.6.2/src/f90/typesizes.mod /usr/local/include/typesizes.mod.xlf90
sudo cp ${DATA}/tmp/netcdf-3.6.2/src/f90/netcdf.mod /usr/local/include/netcdf.mod.xlf90
sudo ln -f -s /usr/local/include/netcdf.mod.xlf90 /usr/local/include/netcdf.mod
sudo ln -f -s /usr/local/include/typesizes.mod.xlf90 /usr/local/include/typesizes.mod
make clean
#***********************************************************************
# 20070515: esmf.ess.uci.edu AIX 5.1 xlc/xlf netcdf-3.6.2
#***********************************************************************

#***********************************************************************          
# 20070605: sand.ess.uci.edu Debian Ubuntu 7.04 Feisty Fawn gcc/g95 netcdf-4.0-beta1
#***********************************************************************
cd ${DATA}/tmp
wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/hdf5-1.8.0-beta1.tar.gz
wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/netcdf-beta.tar.gz
/bin/rm -r ${DATA}/tmp/hdf5-1.8.0-beta1
tar xvzf hdf5-1.8.0-beta1.tar.gz
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.8.0-beta1
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
export CC='gcc'
export CXX='g++'
export FC='g95'
export F77='g95'
export F90='g95'
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local/netcdf4
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.8.0-beta1/hdf5
./configure --prefix=${HDF5_ROOT} --enable-cxx --enable-fortran
# 20070507 HDF5 --enable-cxx conflicts with --enable-parallel
# 20070507 HDF5 --enable-parallel requires parallel filesystem
# ./configure --prefix=${HDF5_ROOT} --enable-fortran --enable-parallel
make
make check
sudo make install
# Do same for netcdf4
cd ${DATA}/tmp
/bin/rm -r ${DATA}/tmp/netcdf-4.0-beta1
sudo /bin/rm -r ${NETCDF4_ROOT}/include/netcdf.* ${NETCDF4_ROOT}/lib/libnetcdf.* 
tar xzvf netcdf-beta.tar.gz
cd ${DATA}/tmp/netcdf-4.0-beta1
make distclean
# Build parallel netCDF with LAM MPI
CPPFLAGS='-I/usr/include/lam' ./configure --prefix=${NETCDF4_ROOT} --enable-netcdf-4 --enable-f77 --disable-parallel --disable-shared --with-hdf5=${HDF5_ROOT} > netcdf.configure.foo 2>&1
make
make check
sudo make install
exit # Return to previous shell level
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-4.0-beta1/libsrc4/.libs/libnetcdf.a /usr/local/netcdf4/lib/libnetcdf.a.gcc-g95
sudo cp ${DATA}/tmp/netcdf-4.0-beta1/f90/typesizes.mod /usr/local/netcdf4/include/typesizes.mod.g95
sudo cp ${DATA}/tmp/netcdf-4.0-beta1/f90/netcdf.mod /usr/local/netcdf4/include/netcdf.mod.g95
make clean
#***********************************************************************
# 20070605: sand.ess.uci.edu Debian Ubuntu 7.04 Feisty Fawn gcc/g95 netcdf-4.0-beta1
#***********************************************************************

#***********************************************************************
# 20070618: ipcc.ess.uci.edu LINUXAMD64 Debian/Ubuntu 6.05 Dapper Drake pgcc-pgf95 netcdf-3.6.2
# NB: Could not get this to pass make test for C
#***********************************************************************
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf.tar.gz
mv -f netcdf.tar.gz netcdf-3.6.2.tar.gz
gunzip -f netcdf-3.6.2.tar.gz
tar xvf netcdf-3.6.2.tar
cd ${DATA}/tmp/netcdf-3.6.2
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
export CC='pgcc' # NB: Could not get this to pass make test for C
export CXX='pgCC'
export CPPFLAGS='-DNDEBUG -DpgiFortran'
export CFLAGS='-O -Minfo=all -Mlfs -tp=amd64'
export FC='pgf95'
export F90='pgf95'
export FFLAGS='-O -Mextend -Mnosecond_underscore -Mrecursive -Mdalign -Ktrap=fp -Mlfs'
export F90FLAGS='-O -Mextend -Mnosecond_underscore -Mrecursive -Mdalign -Ktrap=fp -Mlfs'
./configure --prefix=/usr/local --disable-shared > netcdf.configure.foo 2>&1
make
make test
sudo make install
exit # Return to previous shell level
# NB: Fortran symbols netcdf.o and typeSizes.o are munged into libnetcdf.a 
sudo cp ${DATA}/tmp/netcdf-3.6.2/libsrc/.libs/libnetcdf.a /usr/local/lib/libnetcdf.a.pgcc-pgf95
sudo cp ${DATA}/tmp/netcdf-3.6.2/f90/typesizes.mod /usr/local/include/typesizes.mod.pgf95
sudo cp ${DATA}/tmp/netcdf-3.6.2/f90/netcdf.mod /usr/local/include/netcdf.mod.pgf95
make clean
#***********************************************************************
# 20070618: ipcc.ess.uci.edu LINUXAMD64 Debian/Ubuntu 6.05 Dapper Drake pgcc-pgf95 netcdf-3.6.2
#***********************************************************************

#***********************************************************************          
# 20070822: virga.ess.uci.edu Debian Ubuntu 7.04 Feisty Fawn gcc/g95 netcdf-4-daily
#***********************************************************************
cd ${DATA}/tmp
/bin/rm -r ${DATA}/tmp/hdf5-1.8.0-of20070814
wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/hdf5-1.8.0-of20070814.tar.gz
/bin/rm netcdf-4-daily.tar.gz
wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/snapshot/netcdf-4-daily.tar.gz
tar xvzf hdf5-1.8.0-of20070814.tar.gz
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.8.0-of20070814
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
export CC='gcc'
export CXX='g++'
export FC='g95'
export F77='g95'
export F90='g95'
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local/netcdf4
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.8.0-of20070814/hdf5
./configure --prefix=${HDF5_ROOT} --enable-cxx --enable-fortran
# 20070507 HDF5 --enable-cxx conflicts with --enable-parallel
# 20070507 HDF5 --enable-parallel requires parallel filesystem
# ./configure --prefix=${HDF5_ROOT} --enable-fortran --enable-parallel
make
make check
sudo make install
# Do same for netcdf4
cd ${DATA}/tmp
/bin/rm -r ${DATA}/tmp/netcdf-4.0-snapshot*
sudo /bin/rm -r ${NETCDF4_ROOT}/include/netcdf.* ${NETCDF4_ROOT}/lib/libnetcdf.* 
tar xzvf netcdf-4-daily.tar.gz
cd ${DATA}/tmp/netcdf-4.0-snapshot2007092713
make distclean
# Build parallel netCDF with LAM MPI
CPPFLAGS='-I/usr/include/lam' ./configure --prefix=${NETCDF4_ROOT} --enable-netcdf-4 --enable-f77 --enable-cxx4 --disable-parallel --disable-shared --with-hdf5=${HDF5_ROOT} > netcdf.configure.foo 2>&1
make
make check
sudo make install
exit # Return to previous shell level
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-4.0-snapshot2007092713/libsrc4/.libs/libnetcdf.a /usr/local/netcdf4/lib/libnetcdf.a.gcc-g95
sudo cp ${DATA}/tmp/netcdf-4.0-snapshot2007092713/f90/typesizes.mod /usr/local/netcdf4/include/typesizes.mod.g95
sudo cp ${DATA}/tmp/netcdf-4.0-snapshot2007092713/f90/netcdf.mod /usr/local/netcdf4/include/netcdf.mod.g95
make clean
#***********************************************************************
# 20070822: virga.ess.uci.edu Debian Ubuntu 7.04 Feisty Fawn gcc/g95 netcdf-4-daily
#***********************************************************************

#***********************************************************************          
# 20071218: ashes.ess.uci.edu Debian Ubuntu 7.04 Feisty Fawn gcc/g95 netcdf-4-daily
#***********************************************************************
cd ${DATA}/tmp
/bin/rm -r ${DATA}/tmp/hdf5-1.8.0-of2007*
wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/hdf5-1.8.0-of20071107.tar.gz
/bin/rm netcdf-4-daily.tar.gz
wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/snapshot/netcdf-4-daily.tar.gz
tar xvzf hdf5-1.8.0-of20071107.tar.gz
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.8.0-of20071107
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
export CC='gcc'
export CXX='g++'
export FC='g95'
export F77='g95'
export F90='g95'
# export CPPFLAGS='-DNDEBUG' # 20070507: '-O -g' causes HDF5 'make check' to fail
# export CFLAGS='-O -g' # 20070507: '-O -g' causes HDF5 'make check' to fail
# export FFLAGS='-O -g' # 20070507: '-O -g' causes HDF5 'make check' to fail
# export F90FLAGS='-O -g' # 20070507: '-O -g' causes HDF5 'make check' to fail
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local/netcdf4
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.8.0-of20071107/hdf5
./configure --prefix=${HDF5_ROOT} --enable-cxx --enable-fortran
# 20070507 HDF5 --enable-cxx conflicts with --enable-parallel
# 20070507 HDF5 --enable-parallel requires parallel filesystem
# ./configure --prefix=${HDF5_ROOT} --enable-fortran --enable-parallel
make
make check
sudo make install
# Do same for netcdf4
cd ${DATA}/tmp
/bin/rm -r ${DATA}/tmp/netcdf-4.0-snapshot*
sudo /bin/rm -r ${NETCDF4_ROOT}/include/netcdf.* ${NETCDF4_ROOT}/lib/libnetcdf.* 
tar xzvf netcdf-4-daily.tar.gz
cd ${DATA}/tmp/netcdf-4.0-snapshot2007121802
make distclean
# Build parallel netCDF with LAM MPI
CPPFLAGS='-I/usr/include/lam' ./configure --prefix=${NETCDF4_ROOT} --enable-netcdf-4 --enable-f77 --enable-cxx4 --disable-parallel --disable-shared --with-hdf5=${HDF5_ROOT} > netcdf.configure.foo 2>&1
make
make check
sudo make install
exit # Return to previous shell level
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-4.0-snapshot2007121802/libsrc4/.libs/libnetcdf.a /usr/local/netcdf4/lib/libnetcdf.a.gcc-g95
sudo cp ${DATA}/tmp/netcdf-4.0-snapshot2007121802/f90/typesizes.mod /usr/local/netcdf4/include/typesizes.mod.g95
sudo cp ${DATA}/tmp/netcdf-4.0-snapshot2007121802/f90/netcdf.mod /usr/local/netcdf4/include/netcdf.mod.g95
make clean
#***********************************************************************
# 20071218: ashes.ess.uci.edu Debian Ubuntu 7.04 Feisty Fawn gcc/g95 netcdf-4-daily
#***********************************************************************

#***********************************************************************
# 20071228: neige.ess.uci.edu Windows Vista cygwin gcc/g95 netcdf-3.6.2
#***********************************************************************
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf.tar.gz
mv -f netcdf.tar.gz netcdf-3.6.2.tar.gz
gunzip -f netcdf-3.6.2.tar.gz
tar xvf netcdf-3.6.2.tar
cd ${DATA}/tmp/netcdf-3.6.2
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
export CC='gcc'
export CXX='g++'
export CPPFLAGS='-DNDEBUG'
export CFLAGS='-O -g'
export FC='g95'
export F90='g95'
export FCLAGS='-O -g'
export FFLAGS='-O -g'
export F90FLAGS='-O -g'
./configure --prefix=/usr/local --enable-shared > netcdf.configure.foo 2>&1
make
make test
sudo make install
exit # Return to previous shell level
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-3.6.2/libsrc/.libs/libnetcdf.a /usr/local/lib/libnetcdf.a.gcc-g95
sudo cp ${DATA}/tmp/netcdf-3.6.2/f90/typesizes.mod /usr/local/include/typesizes.mod.g95
sudo cp ${DATA}/tmp/netcdf-3.6.2/f90/netcdf.mod /usr/local/include/netcdf.mod.g95
make clean
#***********************************************************************
# 20071228: neige.ess.uci.edu Windows Vista cygwin gcc/g95 netcdf-3.6.2
#***********************************************************************

#***********************************************************************          
# 20080103: neige.ess.uci.edu Debian Ubuntu Gutsy Gibbon gcc/g95 netcdf-4-daily
#***********************************************************************
cd ${DATA}/tmp
/bin/rm -r ${DATA}/tmp/hdf5-1.8.0-of2007*
wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/hdf5-1.8.0-of20071107.tar.gz
/bin/rm netcdf-4-daily.tar.gz
wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/snapshot/netcdf-4-daily.tar.gz
tar xvzf hdf5-1.8.0-of20071107.tar.gz
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.8.0-of20071107
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
export CC='gcc'
export CFLAGS='-fPIC -m64'
export CXX='g++'
export CXXFLAGS='-fPIC -m64'
export FC='g95'
export F77='g95'
export F90='g95'
export FFLAGS='-fno-second-underscore'
export F90FLAGS='-fno-second-underscore'
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local/netcdf4
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.8.0-of20071107/hdf5
./configure --prefix=${HDF5_ROOT} --enable-cxx --enable-fortran
# 20070507 HDF5 --enable-cxx conflicts with --enable-parallel
# 20070507 HDF5 --enable-parallel requires parallel filesystem
# ./configure --prefix=${HDF5_ROOT} --enable-fortran --enable-parallel
make
make check
sudo make install
# Do same for netcdf4
cd ${DATA}/tmp
/bin/rm -r ${DATA}/tmp/netcdf-4.0-snapshot*
sudo /bin/rm -r ${NETCDF4_ROOT}/include/netcdf.* ${NETCDF4_ROOT}/lib/libnetcdf.* 
tar xzvf netcdf-4-daily.tar.gz
cd ${DATA}/tmp/netcdf-4.0-snapshot2008010302
make distclean
# Build parallel netCDF with LAM MPI
CPPFLAGS='-I/usr/include/lam' ./configure --prefix=${NETCDF4_ROOT} --enable-netcdf-4 --enable-f77 --enable-cxx4 --disable-parallel --disable-shared --with-hdf5=${HDF5_ROOT} > netcdf.configure.foo 2>&1
make
make check
sudo make install
exit # Return to previous shell level
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-4.0-snapshot2008010302/libsrc4/.libs/libnetcdf.a /usr/local/netcdf4/lib/libnetcdf.a.gcc-g95
sudo cp ${DATA}/tmp/netcdf-4.0-snapshot2008010302/f90/typesizes.mod /usr/local/netcdf4/include/typesizes.mod.g95
sudo cp ${DATA}/tmp/netcdf-4.0-snapshot2008010302/f90/netcdf.mod /usr/local/netcdf4/include/netcdf.mod.g95
make clean
#***********************************************************************
# 20080103: neige.ess.uci.edu Debian Ubuntu Gutsy Gibbon gcc/g95 netcdf-4-daily
#***********************************************************************

#***********************************************************************
# 20080103: neige.ess.uci.edu LINUXAMD64 Debian Ubuntu Gutsy Gibbon gcc-g95 netcdf-3.6.2
#***********************************************************************
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf.tar.gz
mv -f netcdf.tar.gz netcdf-3.6.2.tar.gz
gunzip -f netcdf-3.6.2.tar.gz
tar xvf netcdf-3.6.2.tar
cd ${DATA}/tmp/netcdf-3.6.2
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
export CC='gcc'
export CXX='g++'
export CPPFLAGS='-DNDEBUG'
export CFLAGS='-fPIC -m64'
export CXXFLAGS='-fPIC -m64'
export FC='g95'
export F77='g95'
export F90='g95'
export FFLAGS=''
export F77FLAGS=''
export F90FLAGS=''
#export F77FLAGS='-fno-second-underscore'
#export FFLAGS='-fno-second-underscore'
#export F90FLAGS='-fno-second-underscore'
./configure --prefix=/usr/local --disable-shared > netcdf.configure.foo 2>&1
make > netcdf.make.foo 2>&1
make test
sudo make install
exit # Return to previous shell level
# NB: Fortran symbols netcdf.o and typeSizes.o are munged into libnetcdf.a 
sudo cp ${DATA}/tmp/netcdf-3.6.2/libsrc/.libs/libnetcdf.a /usr/local/lib/libnetcdf.a.gcc-g95
sudo cp ${DATA}/tmp/netcdf-3.6.2/f90/typesizes.mod /usr/local/include/typesizes.mod.g95
sudo cp ${DATA}/tmp/netcdf-3.6.2/f90/netcdf.mod /usr/local/include/netcdf.mod.g95
make clean
#***********************************************************************
# 20080103: neige.ess.uci.edu LINUXAMD64 Debian Ubuntu Gutsy Gibbon gcc-g95 netcdf-3.6.2
#***********************************************************************

#***********************************************************************          
# 20080220: neige.ess.uci.edu Debian Ubuntu Gutsy Gibbon gcc/g95 netcdf-4-daily
#***********************************************************************
cd ${DATA}/tmp
/bin/rm -r ${DATA}/tmp/hdf5-1.8.0*
wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/hdf5-1.8.0.tar.gz
/bin/rm netcdf-4-daily.tar.gz
wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/snapshot/netcdf-4-daily.tar.gz
tar xvzf hdf5-1.8.0.tar.gz
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.8.0
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
export CC='gcc'
export CFLAGS='-fPIC -m64'
export CXX='g++'
export CXXFLAGS='-fPIC -m64'
export FC='g95'
export F77='g95'
export F90='g95'
export FFLAGS='-fno-second-underscore'
export F90FLAGS='-fno-second-underscore'
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local/netcdf4
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.8.0/hdf5
./configure --prefix=${HDF5_ROOT} --enable-cxx --enable-fortran
# 20070507 HDF5 --enable-cxx conflicts with --enable-parallel
# 20070507 HDF5 --enable-parallel requires parallel filesystem
# ./configure --prefix=${HDF5_ROOT} --enable-fortran --enable-parallel
make
make check
sudo make install
# Do same for netcdf4
cd ${DATA}/tmp
/bin/rm -r ${DATA}/tmp/netcdf-4.0-snapshot*
sudo /bin/rm -r ${NETCDF4_ROOT}/include/netcdf.* ${NETCDF4_ROOT}/lib/libnetcdf.* 
tar xzvf netcdf-4-daily.tar.gz
cd ${DATA}/tmp/netcdf-4.0-snapshot2008022009
make distclean
# Build parallel netCDF with LAM MPI
# --enable-oldident allows variables with funny first letters
CPPFLAGS='-I/usr/include/lam' ./configure --prefix=${NETCDF4_ROOT} --enable-oldident --enable-netcdf-4 --enable-f77 --enable-cxx4 --disable-parallel --disable-shared --with-hdf5=${HDF5_ROOT} > netcdf.configure.foo 2>&1
make
make check
sudo make install
exit # Return to previous shell level
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-4.0-snapshot2008022009/libsrc4/.libs/libnetcdf.a /usr/local/netcdf4/lib/libnetcdf.a.gcc-g95
sudo cp ${DATA}/tmp/netcdf-4.0-snapshot2008022009/f90/typesizes.mod /usr/local/netcdf4/include/typesizes.mod.g95
sudo cp ${DATA}/tmp/netcdf-4.0-snapshot2008022009/f90/netcdf.mod /usr/local/netcdf4/include/netcdf.mod.g95
make clean
#***********************************************************************
# 20080220: neige.ess.uci.edu Debian Ubuntu Gutsy Gibbon gcc/g95 netcdf-4-daily
#***********************************************************************

#***********************************************************************          
# 20080504: virga.ess.uci.edu Debian Ubuntu Hardy Heron gcc/g95 netcdf-4-daily
#***********************************************************************
cd ${DATA}/tmp
/bin/rm -r ${DATA}/tmp/hdf5-1.8.0*
wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/hdf5-1.8.0-of20080313.tar.gz
/bin/rm netcdf-4-daily.tar.gz
wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/snapshot/netcdf-4-daily.tar.gz
tar xvzf hdf5-1.8.0-of20080313.tar.gz
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.8.0-of20080313
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
export CC='gcc'
#export CFLAGS=''
export CXX='g++'
#export CXXFLAGS=''
export FC='g95'
export F77='g95'
export F90='g95'
export FFLAGS='-fno-second-underscore'
export F90FLAGS='-fno-second-underscore'
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local/netcdf4
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.8.0-of20080313/hdf5
./configure --prefix=${HDF5_ROOT} --enable-cxx --enable-fortran
# 20070507 HDF5 --enable-cxx conflicts with --enable-parallel
# 20070507 HDF5 --enable-parallel requires parallel filesystem
# ./configure --prefix=${HDF5_ROOT} --enable-fortran --enable-parallel
make
make check
sudo make install
# Do same for netcdf4
cd ${DATA}/tmp
/bin/rm -r ${DATA}/tmp/netcdf-4.0-snapshot*
sudo /bin/rm -r ${NETCDF4_ROOT}/include/netcdf.* ${NETCDF4_ROOT}/lib/libnetcdf.* 
tar xzvf netcdf-4-daily.tar.gz
cd ${DATA}/tmp/netcdf-4.0-snapshot2008050320
make distclean
# Build parallel netCDF with LAM MPI
# --enable-oldident allows variables with funny first letters
CPPFLAGS='-I/usr/include/lam' ./configure --prefix=${NETCDF4_ROOT} --enable-oldident --enable-netcdf-4 --enable-f77 --enable-cxx4 --disable-parallel --disable-shared --with-hdf5=${HDF5_ROOT} > netcdf.configure.foo 2>&1
make
make check
sudo make install
exit # Return to previous shell level
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-4.0-snapshot2008050320/libsrc4/.libs/libnetcdf.a /usr/local/netcdf4/lib/libnetcdf.a.gcc-g95
sudo cp ${DATA}/tmp/netcdf-4.0-snapshot2008050320/f90/typesizes.mod /usr/local/netcdf4/include/typesizes.mod.g95
sudo cp ${DATA}/tmp/netcdf-4.0-snapshot2008050320/f90/netcdf.mod /usr/local/netcdf4/include/netcdf.mod.g95
make clean
#***********************************************************************
# 20080504: virga.ess.uci.edu Debian Ubuntu Hardy Heron gcc/g95 netcdf-4-daily
#***********************************************************************

#***********************************************************************
# 20080504: virga.ess.uci.edu i386 Debian Ubuntu Hardy Heron gcc-g95 netcdf-3.6.2
#***********************************************************************
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf.tar.gz
mv -f netcdf.tar.gz netcdf-3.6.2.tar.gz
gunzip -f netcdf-3.6.2.tar.gz
tar xvf netcdf-3.6.2.tar
cd ${DATA}/tmp/netcdf-3.6.2
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
export CC='gcc'
export CXX='g++'
export CPPFLAGS='-DNDEBUG'
#export CFLAGS=''
#export CXXFLAGS=''
export FC='g95'
export F77='g95'
export F90='g95'
export FFLAGS=''
export F77FLAGS=''
export F90FLAGS=''
#export F77FLAGS='-fno-second-underscore'
#export FFLAGS='-fno-second-underscore'
#export F90FLAGS='-fno-second-underscore'
./configure --prefix=/usr/local --disable-shared > netcdf.configure.foo 2>&1
make > netcdf.make.foo 2>&1
make test
sudo make install
exit # Return to previous shell level
# NB: Fortran symbols netcdf.o and typeSizes.o are munged into libnetcdf.a 
sudo cp ${DATA}/tmp/netcdf-3.6.2/libsrc/.libs/libnetcdf.a /usr/local/lib/libnetcdf.a.gcc-g95
sudo cp ${DATA}/tmp/netcdf-3.6.2/f90/typesizes.mod /usr/local/include/typesizes.mod.g95
sudo cp ${DATA}/tmp/netcdf-3.6.2/f90/netcdf.mod /usr/local/include/netcdf.mod.g95
make clean
#***********************************************************************
# 20080504: virga.ess.uci.edu i386 Debian Ubuntu Hardy Heron gcc-g95 netcdf-3.6.2
#***********************************************************************

#***********************************************************************          
# 20080504: neige.ess.uci.edu Debian Ubuntu Hardy Heron gcc/g95 netcdf-4-daily
#***********************************************************************
cd ${DATA}/tmp
/bin/rm -r ${DATA}/tmp/hdf5-1.8.0*
wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/hdf5-1.8.0-of20080313.tar.gz
/bin/rm netcdf-4-daily.tar.gz
wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/snapshot/netcdf-4-daily.tar.gz
tar xvzf hdf5-1.8.0-of20080313.tar.gz
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.8.0-of20080313
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
export CC='gcc'
#export CFLAGS=''
export CXX='g++'
#export CXXFLAGS=''
export FC='g95'
export F77='g95'
export F90='g95'
export FFLAGS='-fno-second-underscore'
export F90FLAGS='-fno-second-underscore'
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local/netcdf4
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.8.0-of20080313/hdf5
# 20080522: --enable-threadsafe _necessary_ for NCO
configure --with-pic --enable-static --enable-shared --with-zlib=/usr/lib --prefix=/usr/local/netcdf4 --with-pthread=/usr/lib --enable-threadsafe --enable-fortran --enable-cxx
./configure --prefix=${HDF5_ROOT} --enable-cxx --enable-fortran
# 20070507 HDF5 --enable-cxx conflicts with --enable-parallel
# 20070507 HDF5 --enable-parallel requires parallel filesystem
# ./configure --prefix=${HDF5_ROOT} --enable-fortran --enable-parallel
make
make check
sudo make install
# Do same for netcdf4
cd ${DATA}/tmp
/bin/rm -r ${DATA}/tmp/netcdf-4.0-snapshot*
sudo /bin/rm -r ${NETCDF4_ROOT}/include/netcdf.* ${NETCDF4_ROOT}/lib/libnetcdf.* 
tar xzvf netcdf-4-daily.tar.gz
cd ${DATA}/tmp/netcdf-4.0-snapshot2008050320
make distclean
# Build parallel netCDF with LAM MPI
# --enable-oldident allows variables with funny first letters
CPPFLAGS='-I/usr/include/lam' ./configure --prefix=${NETCDF4_ROOT} --enable-oldident --enable-netcdf-4 --enable-f77 --enable-cxx4 --disable-parallel --disable-shared --with-hdf5=${HDF5_ROOT} > netcdf.configure.foo 2>&1
make
make check
sudo make install
exit # Return to previous shell level
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-4.0-snapshot2008050320/libsrc4/.libs/libnetcdf.a /usr/local/netcdf4/lib/libnetcdf.a.gcc-g95
sudo cp ${DATA}/tmp/netcdf-4.0-snapshot2008050320/f90/typesizes.mod /usr/local/netcdf4/include/typesizes.mod.g95
sudo cp ${DATA}/tmp/netcdf-4.0-snapshot2008050320/f90/netcdf.mod /usr/local/netcdf4/include/netcdf.mod.g95
make clean
#***********************************************************************
# 20080504: neige.ess.uci.edu Debian Ubuntu Hardy Heron gcc/g95 netcdf-4-daily
#***********************************************************************

#***********************************************************************
# 20080616: virga.ess.uci.edu i386 Debian Ubuntu Hardy Heron gcc-g95 netcdf-4.0
#***********************************************************************
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf.tar.gz
mv -f netcdf.tar.gz netcdf-4.0.tar.gz
gunzip -f netcdf-4.0.tar.gz
tar xvf netcdf-4.0.tar
cd ${DATA}/tmp/netcdf-4.0
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
export CC='gcc'
export CXX='g++'
export CPPFLAGS='-DNDEBUG'
#export CFLAGS=''
#export CXXFLAGS=''
export FC='g95'
export F77='g95'
export F90='g95'
export FFLAGS=''
export F77FLAGS=''
export F90FLAGS=''
#export F77FLAGS='-fno-second-underscore'
#export FFLAGS='-fno-second-underscore'
#export F90FLAGS='-fno-second-underscore'
./configure --prefix=/usr/local --disable-shared > netcdf.configure.foo 2>&1
make > netcdf.make.foo 2>&1
make test
sudo make install
exit # Return to previous shell level
# NB: Fortran symbols netcdf.o and typeSizes.o are munged into libnetcdf.a 
sudo cp ${DATA}/tmp/netcdf-4.0/libsrc/.libs/libnetcdf.a /usr/local/lib/libnetcdf.a.gcc-g95
sudo cp ${DATA}/tmp/netcdf-4.0/f90/typesizes.mod /usr/local/include/typesizes.mod.g95
sudo cp ${DATA}/tmp/netcdf-4.0/f90/netcdf.mod /usr/local/include/netcdf.mod.g95
make clean
#***********************************************************************
# 20080616: virga.ess.uci.edu i386 Debian Ubuntu Hardy Heron gcc-g95 netcdf-4.0
#***********************************************************************

#***********************************************************************          
# 20080616: virga.ess.uci.edu Debian Ubuntu Hardy Heron gcc/g95 netcdf-4.0
#***********************************************************************
cd ${DATA}/tmp
/bin/rm -r ${DATA}/tmp/hdf5-1.8.1*
wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/hdf5-1.8.1.tar.gz
/bin/rm netcdf-4.0.tar.gz
wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4.0.tar.gz
tar xvzf hdf5-1.8.1.tar.gz
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.8.1
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
export CC='gcc'
#export CFLAGS=''
export CXX='g++'
#export CXXFLAGS=''
export FC='g95'
export F77='g95'
export F90='g95'
export FFLAGS='-fno-second-underscore'
export F90FLAGS='-fno-second-underscore'
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local/netcdf4
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.8.1/hdf5
./configure --prefix=${HDF5_ROOT} --enable-cxx --enable-fortran
# 20070507 HDF5 --enable-cxx conflicts with --enable-parallel
# 20070507 HDF5 --enable-parallel requires parallel filesystem
# ./configure --prefix=${HDF5_ROOT} --enable-fortran --enable-parallel
make
make check
sudo make install
# Same for netCDF4:
cd ${DATA}/tmp
/bin/rm -r ${DATA}/tmp/netcdf-4.0*
sudo /bin/rm -r ${NETCDF4_ROOT}/include/netcdf.* ${NETCDF4_ROOT}/lib/libnetcdf.* 
tar xzvf netcdf-4.0.tar.gz
cd ${DATA}/tmp/netcdf-4.0
make distclean
# Build parallel netCDF with LAM MPI
# --enable-oldident allows variables with funny first letters
CPPFLAGS='-I/usr/include/lam' ./configure --prefix=${NETCDF4_ROOT} --enable-netcdf-4 --enable-f77 --disable-shared --with-hdf5=${HDF5_ROOT} > netcdf.configure.foo 2>&1
make
make check
sudo make install
exit # Return to previous shell level
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-4.0/libsrc4/.libs/libnetcdf.a /usr/local/netcdf4/lib/libnetcdf.a.gcc-g95
sudo cp ${DATA}/tmp/netcdf-4.0/f90/typesizes.mod /usr/local/netcdf4/include/typesizes.mod.g95
sudo cp ${DATA}/tmp/netcdf-4.0/f90/netcdf.mod /usr/local/netcdf4/include/netcdf.mod.g95
make clean
#***********************************************************************
# 20080616: virga.ess.uci.edu Debian Ubuntu Hardy Heron gcc/g95 netcdf-4.0
#***********************************************************************

#***********************************************************************
# 20090202: virga.ess.uci.edu i386 Debian Ubuntu Intrepid Ibex gcc-gfortran netcdf-3.6.3
#***********************************************************************
cd ${DATA}/tmp
/bin/rm netcdf-3.6.3.tar.gz
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-3.6.3.tar.gz
gunzip -f netcdf-3.6.3.tar.gz
tar xvf netcdf-3.6.3.tar
cd ${DATA}/tmp/netcdf-3.6.3
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
export CC='gcc'
export CXX='g++'
export CPPFLAGS='-DNDEBUG'
export FC='gfortran'
export F77='gfortran'
export F90='gfortran'
export FFLAGS=''
export F77FLAGS=''
export F90FLAGS=''
./configure --prefix=/usr/local --disable-shared > netcdf.configure.foo 2>&1
make > netcdf.make.foo 2>&1
make check > netcdf.check.foo 2>&1
scp netcdf.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install
exit # Return to previous shell level
# NB: Fortran symbols netcdf.o and typeSizes.o are munged into libnetcdf.a 
sudo cp ${DATA}/tmp/netcdf-3.6.3/libsrc/.libs/libnetcdf.a /usr/local/lib/libnetcdf.a.gcc-gfortran
sudo cp ${DATA}/tmp/netcdf-3.6.3/f90/typesizes.mod /usr/local/include/typesizes.mod.gfortran
sudo cp ${DATA}/tmp/netcdf-3.6.3/f90/netcdf.mod /usr/local/include/netcdf.mod.gfortran
make clean
#***********************************************************************
# 20090202: virga.ess.uci.edu i386 Debian Ubuntu Intrepid Ibex gcc-gfortran netcdf-3.6.3
#***********************************************************************

#***********************************************************************
# 20090302: givre.ess.uci.edu i386 Debian Ubuntu Intrepid Ibex gcc-gfortran netcdf-3.6.3
#***********************************************************************
cd ${DATA}/tmp
/bin/rm netcdf-3.6.3.tar.gz
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-3.6.3.tar.gz
gunzip -f netcdf-3.6.3.tar.gz
tar xvf netcdf-3.6.3.tar
cd ${DATA}/tmp/netcdf-3.6.3
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
export CC='gcc'
export CXX='g++'
export CPPFLAGS='-DNDEBUG'
export FC='gfortran'
export F77='gfortran'
export F90='gfortran'
export FFLAGS=''
export F77FLAGS=''
export F90FLAGS=''
./configure --prefix=/usr/local --disable-shared > netcdf.configure.foo 2>&1
make > netcdf.make.foo 2>&1
make check > netcdf.check.foo 2>&1
scp netcdf.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install
exit # Return to previous shell level
# NB: Fortran symbols netcdf.o and typeSizes.o are munged into libnetcdf.a 
sudo cp ${DATA}/tmp/netcdf-3.6.3/libsrc/.libs/libnetcdf.a /usr/local/lib/libnetcdf.a.gcc-gfortran
sudo cp ${DATA}/tmp/netcdf-3.6.3/f90/typesizes.mod /usr/local/include/typesizes.mod.gfortran
sudo cp ${DATA}/tmp/netcdf-3.6.3/f90/netcdf.mod /usr/local/include/netcdf.mod.gfortran
make clean
#***********************************************************************
# 20090302: givre.ess.uci.edu i386 Debian Ubuntu Intrepid Ibex gcc-gfortran netcdf-3.6.3
#***********************************************************************

#***********************************************************************
# 20090503: neige.ess.uci.edu x86_64 Debian Ubuntu Intrepid Ibex gcc/gfortran netcdf-4-daily
# NB: netCDF3 interface only. Works but 'make install' does not.
#***********************************************************************
cd ${DATA}/tmp
/bin/rm netcdf-4-daily.tar.gz
wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/snapshot/netcdf-4-daily.tar.gz
/bin/rm -r ${DATA}/tmp/netcdf-4.0.1-beta2-snapshot*
tar xzvf netcdf-4-daily.tar.gz
cd ${DATA}/tmp/netcdf-4.0.1-beta3-snapshot2009050309
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
export CC='gcc'
export CFLAGS=''
export CPPFLAGS=''
#export CPPFLAGS='-Df2cFortran'
#export CPPFLAGS='-DpgiFortran'
export CXX='g++'
export CXXFLAGS=''
export FC='gfortran'
export F77='gfortran'
export F90='gfortran'
export FCFLAGS=''
export FFLAGS=''
export F90FLAGS=''
export NETCDF_ROOT=/usr/local
./configure --prefix=${NETCDF_ROOT}  --disable-netcdf-4 --disable-v2 --disable-shared --enable-dap --enable-f77 --enable-f90 > netcdf.configure.foo 2>&1
mv -f config.log netcdf.config.log.foo
make > netcdf.make.foo 2>&1
make check > netcdf.check.foo 2>&1
scp netcdf.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install
exit # Return to previous shell level
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-4.0.1-beta3-snapshot2009050309/libsrc/.libs/libnetcdf3.a ${NETCDF_ROOT}/lib/libnetcdf.a.gcc-gfortran
sudo cp ${DATA}/tmp/netcdf-4.0.1-beta3-snapshot2009050309/f90/typesizes.mod ${NETCDF_ROOT}/include/typesizes.mod.gfortran
sudo cp ${DATA}/tmp/netcdf-4.0.1-beta3-snapshot2009050309/f90/netcdf.mod ${NETCDF_ROOT}/include/netcdf.mod.gfortran
make clean
# Output saved to:
http://dust.ess.uci.edu/tmp/netcdf.check.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.configure.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.make.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.config.log.x86_64-unknown-linux-gnu.foo
#***********************************************************************
# 20090503: neige.ess.uci.edu x86_64 Debian Ubuntu Intrepid Ibex gcc/gfortran netcdf-4-daily
#***********************************************************************

#***********************************************************************      
# 20090503: neige.ess.uci.edu x86_64/EMT64 Debian Ubuntu Jaunty Jackalope gcc/gfortran netcdf-4-daily
#***********************************************************************
sudo aptitude install antlr bison flex gcc g++ gsl-bin libgsl0-dev libnetcdf4 libnetcdf-dev netcdf-bin # Install netCDF prequisites
cd ${DATA}/tmp
/bin/rm -r ${DATA}/tmp/hdf5-1.8.2*
wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/hdf5-1.8.2-post6.tar.gz
/bin/rm netcdf-4-daily.tar.gz
# Instead of getting latest version get fixed, known-to-work version
# wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/snapshot/netcdf-4-daily.tar.gz
rsync dust.ess.uci.edu:/data/zender/tmp/netcdf-4-daily.tar.gz .
tar xvzf hdf5-1.8.2-post6.tar.gz
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.8.2-post6
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
# NB: -fPIC -m64 flags are necessary on x86_64 compilations to avoid errors on shared libraries that link to libnetcdf, e.g., libnetcdf-perl: "/usr/bin/ld: /usr/local/lib/libnetcdf.a(putget.o): relocation R_X86_64_32S against `a local symbol' can not be used when making a shared object; recompile with -fPIC"
export CC='gcc'
export CFLAGS='-fPIC -m64'
export CPPFLAGS=''
export CXX='g++'
export CXXFLAGS='-fPIC -m64'
export FC='gfortran'
export F77='gfortran'
export F90='gfortran'
export FCFLAGS=''
export FFLAGS=''
export F90FLAGS=''
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.8.2-post6/hdf5
./configure --prefix=${HDF5_ROOT} --enable-cxx --enable-fortran
# 20070507 HDF5 --enable-cxx conflicts with --enable-parallel
# 20070507 HDF5 --enable-parallel requires parallel filesystem
# ./configure --prefix=${HDF5_ROOT} --enable-fortran --enable-parallel
make
# make check
sudo make install
# Do same for netCDF4
cd ${DATA}/tmp
/bin/rm -r ${DATA}/tmp/netcdf-4.1-beta1-snapshot*
sudo /bin/rm -r ${NETCDF4_ROOT}/include/netcdf.* ${NETCDF4_ROOT}/lib/libnetcdf.* 
tar xzvf netcdf-4-daily.tar.gz
cd ${DATA}/tmp/netcdf-4.1-beta1-snapshot2009050200
make distclean
# NB: --disable-v2 disables the version 2 interface used by netcdf-perl
# NB: --enable-logging allows HDF error message to print
./configure --prefix=/usr/local --enable-netcdf-4 --with-hdf5=${HDF5_ROOT} --enable-f90 --enable-f77 --enable-dap --enable-logging --disable-shared > netcdf.configure.foo 2>&1
make > netcdf.make.foo 2>&1
mv -f config.log netcdf.config.log.foo
make check > netcdf.check.foo 2>&1
scp netcdf.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install
exit # Return to previous shell level
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-4.1-beta1-snapshot2009050200/libsrc4/.libs/libnetcdf.a ${NETCDF4_ROOT}/lib/libnetcdf.a.gcc-gfortran
sudo cp ${DATA}/tmp/netcdf-4.1-beta1-snapshot2009050200/f90/typesizes.mod ${NETCDF4_ROOT}/include/typesizes.mod.gfortran
sudo cp ${DATA}/tmp/netcdf-4.1-beta1-snapshot2009050200/f90/netcdf.mod ${NETCDF4_ROOT}/include/netcdf.mod.gfortran
make clean
# Output saved to:
http://dust.ess.uci.edu/tmp/netcdf.check.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.configure.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.make.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.config.log.x86_64-unknown-linux-gnu.foo
#***********************************************************************
# 20090503: neige.ess.uci.edu x86_64/EMT64 Debian Ubuntu Jaunty Jackalope gcc/gfortran netcdf-4-daily
#***********************************************************************

#***********************************************************************      
# 20090617: neige.ess.uci.edu x86_64/EMT64 Debian Ubuntu Jaunty Jackalope gcc/gfortran netcdf-4-daily
#***********************************************************************
sudo aptitude install antlr bison flex gcc g++ gsl-bin libgsl0-dev libnetcdf4 libnetcdf-dev netcdf-bin # Install netCDF prequisites
cd ${DATA}/tmp
/bin/rm -r ${DATA}/tmp/hdf5-1.8.3*
wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/hdf5-1.8.3.tar.gz
/bin/rm netcdf-4-daily.tar.gz
# Instead of getting latest version get fixed, known-to-work version
# wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/snapshot/netcdf-4-daily.tar.gz
rsync dust.ess.uci.edu:/data/zender/tmp/netcdf-4-daily.tar.gz .
tar xvzf hdf5-1.8.3.tar.gz
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.8.3
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
# NB: -fPIC -m64 flags are necessary on x86_64 compilations to avoid errors on shared libraries that link to libnetcdf, e.g., libnetcdf-perl: "/usr/bin/ld: /usr/local/lib/libnetcdf.a(putget.o): relocation R_X86_64_32S against `a local symbol' can not be used when making a shared object; recompile with -fPIC"
export CC='gcc'
export CFLAGS='-fPIC -m64'
export CPPFLAGS=''
export CXX='g++'
export CXXFLAGS='-fPIC -m64'
export FC='gfortran'
export F77='gfortran'
export F90='gfortran'
export FCFLAGS=''
export FFLAGS=''
export F90FLAGS=''
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.8.3/hdf5
./configure --prefix=${HDF5_ROOT} --enable-cxx --enable-fortran
# 20070507 HDF5 --enable-cxx conflicts with --enable-parallel
# 20070507 HDF5 --enable-parallel requires parallel filesystem
# ./configure --prefix=${HDF5_ROOT} --enable-fortran --enable-parallel
make
# make check
sudo make install
# Do same for netCDF4
cd ${DATA}/tmp
/bin/rm -r ${DATA}/tmp/netcdf-4.1-beta1-snapshot*
sudo /bin/rm -r ${NETCDF4_ROOT}/include/netcdf.* ${NETCDF4_ROOT}/lib/libnetcdf.* 
tar xzvf netcdf-4-daily.tar.gz
cd ${DATA}/tmp/netcdf-4.1-beta1-snapshot2009061712
make distclean
# NB: --disable-v2 disables the version 2 interface used by netcdf-perl
# NB: --enable-logging allows HDF error message to print
./configure --prefix=/usr/local --enable-netcdf-4 --with-hdf5=${HDF5_ROOT} --enable-f90 --enable-f77 --enable-dap --enable-logging --disable-shared > netcdf.configure.foo 2>&1
make > netcdf.make.foo 2>&1
mv -f config.log netcdf.config.log.foo
make check > netcdf.check.foo 2>&1
scp netcdf.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install
exit # Return to previous shell level
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-4.1-beta1-snapshot2009061712/libsrc4/.libs/libnetcdf.a ${NETCDF4_ROOT}/lib/libnetcdf.a.gcc-gfortran
sudo cp ${DATA}/tmp/netcdf-4.1-beta1-snapshot2009061712/f90/typesizes.mod ${NETCDF4_ROOT}/include/typesizes.mod.gfortran
sudo cp ${DATA}/tmp/netcdf-4.1-beta1-snapshot2009061712/f90/netcdf.mod ${NETCDF4_ROOT}/include/netcdf.mod.gfortran
make clean
# Output saved to:
http://dust.ess.uci.edu/tmp/netcdf.check.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.configure.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.make.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.config.log.x86_64-unknown-linux-gnu.foo
#***********************************************************************
# 20090617: neige.ess.uci.edu x86_64/EMT64 Debian Ubuntu Jaunty Jackalope gcc/gfortran netcdf-4-daily
#***********************************************************************

#***********************************************************************      
# 20090712: neige.ess.uci.edu x86_64/EMT64 Debian Ubuntu Jaunty Jackalope gcc/gfortran netcdf-4-daily
#***********************************************************************
sudo aptitude install antlr bison flex gcc g++ gsl-bin libgsl0-dev libnetcdf4 libnetcdf-dev netcdf-bin # Install netCDF prequisites
cd ${DATA}/tmp
/bin/rm -r ${DATA}/tmp/hdf5-1.8.3*
wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/hdf5-1.8.3-snap2.tar.gz
/bin/rm netcdf-4-daily.tar.gz
# Instead of getting latest version get fixed, known-to-work version
# wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/snapshot/netcdf-4-daily.tar.gz
rsync dust.ess.uci.edu:/data/zender/tmp/netcdf-4-daily.tar.gz .
tar xvzf hdf5-1.8.3-snap2.tar.gz
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.8.3-snap2
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
# NB: x86_64 compilations require -fPIC -m64 flags to avoid errors on shared libraries that link to libnetcdf, e.g., libnetcdf-perl: "/usr/bin/ld: /usr/local/lib/libnetcdf.a(putget.o): relocation R_X86_64_32S against `a local symbol' can not be used when making a shared object; recompile with -fPIC"
export CC='gcc'
export CFLAGS='-fPIC -m64'
export CPPFLAGS=''
export CXX='g++'
export CXXFLAGS='-fPIC -m64'
export FC='gfortran'
export F77='gfortran'
export F90='gfortran'
export FCFLAGS=''
export FFLAGS=''
export F90FLAGS=''
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.8.3-snap2/hdf5
./configure --prefix=${HDF5_ROOT} --enable-cxx --enable-fortran
# 20070507 HDF5 --enable-cxx conflicts with --enable-parallel
# 20070507 HDF5 --enable-parallel requires parallel filesystem
# ./configure --prefix=${HDF5_ROOT} --enable-fortran --enable-parallel
make
# make check
sudo make install
# Do same for netCDF4
cd ${DATA}/tmp
/bin/rm -r ${DATA}/tmp/netcdf-4.1-beta1-snapshot*
sudo /bin/rm -r ${NETCDF4_ROOT}/include/netcdf.* ${NETCDF4_ROOT}/lib/libnetcdf.* 
tar xzvf netcdf-4-daily.tar.gz
cd ${DATA}/tmp/netcdf-4.1-beta1-snapshot2009071200
make distclean
# NB: --disable-v2 disables the version 2 interface used by netcdf-perl
# NB: --enable-logging allows HDF error message to print
# NB: --with-libcf builds libcf.a
# NB: --with-udunits2 builds libudunits2.a
./configure --prefix=/usr/local --enable-netcdf-4 --with-hdf5=${HDF5_ROOT} --enable-f90 --enable-f77 --enable-dap --enable-logging --disable-shared > netcdf.configure.foo 2>&1
make > netcdf.make.foo 2>&1
mv -f config.log netcdf.config.log.foo
make check > netcdf.check.foo 2>&1
scp netcdf.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-4.1-beta1-snapshot2009071200/libsrc4/.libs/libnetcdf.a ${NETCDF4_ROOT}/lib/libnetcdf.a.gcc-gfortran
sudo cp ${DATA}/tmp/netcdf-4.1-beta1-snapshot2009071200/f90/typesizes.mod ${NETCDF4_ROOT}/include/typesizes.mod.gfortran
sudo cp ${DATA}/tmp/netcdf-4.1-beta1-snapshot2009071200/f90/netcdf.mod ${NETCDF4_ROOT}/include/netcdf.mod.gfortran
make clean
exit # Return to previous shell level
# Output saved to:
http://dust.ess.uci.edu/tmp/netcdf.check.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.configure.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.make.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.config.log.x86_64-unknown-linux-gnu.foo
#***********************************************************************
# 20090712: neige.ess.uci.edu x86_64/EMT64 Debian Ubuntu Jaunty Jackalope gcc/gfortran netcdf-4-daily
#***********************************************************************

#***********************************************************************      
# 20091030: givre.ess.uci.edu x86_64/EMT64 Debian Ubuntu Karmic Koala gcc/gfortran netcdf-4-daily
#***********************************************************************
sudo aptitude install antlr bison flex gcc g++ gsl-bin libgsl0-dev libnetcdf4 libnetcdf-dev netcdf-bin # Install netCDF prequisites
cd ${DATA}/tmp
/bin/rm -r ${DATA}/tmp/hdf5-1.8.3*
wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/hdf5-1.8.3-snap2.tar.gz
/bin/rm netcdf-4-daily.tar.gz
# Instead of getting latest version get fixed, known-to-work version
# wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/snapshot/netcdf-4-daily.tar.gz
# scp netcdf-4-daily.tar.gz dust.ess.uci.edu:/data/zender/tmp
rsync dust.ess.uci.edu:/data/zender/tmp/netcdf-4-daily.tar.gz .
tar xvzf hdf5-1.8.3-snap2.tar.gz
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.8.3-snap2
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
# NB: x86_64 compilations require -fPIC -m64 flags to avoid errors on shared libraries that link to libnetcdf, e.g., libnetcdf-perl: "/usr/bin/ld: /usr/local/lib/libnetcdf.a(putget.o): relocation R_X86_64_32S against `a local symbol' can not be used when making a shared object; recompile with -fPIC"
export CC='gcc'
export CFLAGS='-fPIC -m64'
export CPPFLAGS=''
export CXX='g++'
export CXXFLAGS='-fPIC -m64'
export FC='gfortran'
export F77='gfortran'
export F90='gfortran'
export FCFLAGS=''
export FFLAGS=''
export F90FLAGS=''
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.8.3-snap2/hdf5
./configure --prefix=${HDF5_ROOT} --enable-cxx --enable-fortran
# 20070507 HDF5 --enable-cxx conflicts with --enable-parallel
# 20070507 HDF5 --enable-parallel requires parallel filesystem
# ./configure --prefix=${HDF5_ROOT} --enable-fortran --enable-parallel
make
# make check
sudo make install
# Do same for netCDF4
cd ${DATA}/tmp
/bin/rm -r ${DATA}/tmp/netcdf-4.1-*snapshot*
sudo /bin/rm -r ${NETCDF4_ROOT}/include/netcdf.* ${NETCDF4_ROOT}/lib/libnetcdf.* 
tar xzvf netcdf-4-daily.tar.gz
cd ${DATA}/tmp/netcdf-4.1-snapshot2009102800
make distclean
# NB: --disable-v2 disables the version 2 interface used by netcdf-perl
# NB: --enable-logging allows HDF error message to print
# NB: --enable-cxx-4 enables new netCDF4 C++ API
# NB: --with-libcf builds libcf.a
# NB: --with-udunits builds libudunits2.a
./configure --prefix=/usr/local --disable-shared --enable-cxx-4 --enable-dap --enable-f77 --enable-f90 --enable-logging --enable-netcdf-4 --with-hdf5=${HDF5_ROOT} --with-libcf --with-udunits > netcdf.configure.foo 2>&1
make > netcdf.make.foo 2>&1
mv -f config.log netcdf.config.log.foo
make check > netcdf.check.foo 2>&1
scp netcdf.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-4.1-snapshot2009102800/libsrc4/.libs/libnetcdf.a ${NETCDF4_ROOT}/lib/libnetcdf.a.gcc-gfortran
sudo cp ${DATA}/tmp/netcdf-4.1-snapshot2009102800/f90/typesizes.mod ${NETCDF4_ROOT}/include/typesizes.mod.gfortran
sudo cp ${DATA}/tmp/netcdf-4.1-snapshot2009102800/f90/netcdf.mod ${NETCDF4_ROOT}/include/netcdf.mod.gfortran
make clean
exit # Return to previous shell level
# Output saved to:
http://dust.ess.uci.edu/tmp/netcdf.check.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.configure.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.make.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.config.log.x86_64-unknown-linux-gnu.foo
#***********************************************************************
# 20091030: givre.ess.uci.edu x86_64/EMT64 Debian Ubuntu Karmic Koala gcc/gfortran netcdf-4-daily
#***********************************************************************

#***********************************************************************      
# 20091114: neige.ess.uci.edu x86_64/EMT64 Debian Ubuntu Karmic Koala gcc/gfortran netcdf-4-daily
#***********************************************************************
sudo aptitude install antlr bison flex gcc g++ gsl-bin libgsl0-dev libnetcdf4 libnetcdf-dev netcdf-bin # Install netCDF prequisites
cd ${DATA}/tmp
/bin/rm -r ${DATA}/tmp/hdf5-1.8.4*
wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/hdf5-1.8.4.tar.gz
/bin/rm netcdf-4-daily.tar.gz
# Instead of getting latest version get fixed, known-to-work version
# wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/snapshot/netcdf-4-daily.tar.gz
# scp netcdf-4-daily.tar.gz dust.ess.uci.edu:/data/zender/tmp
rsync dust.ess.uci.edu:/data/zender/tmp/netcdf-4-daily.tar.gz .
tar xvzf hdf5-1.8.4.tar.gz
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.8.4
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
# NB: x86_64 compilations require -fPIC -m64 flags to avoid errors on shared libraries that link to libnetcdf, e.g., libnetcdf-perl: "/usr/bin/ld: /usr/local/lib/libnetcdf.a(putget.o): relocation R_X86_64_32S against `a local symbol' can not be used when making a shared object; recompile with -fPIC"
export CC='gcc'
export CFLAGS='-fPIC -m64'
export CPPFLAGS=''
export CXX='g++'
export CXXFLAGS='-fPIC -m64'
export FC='gfortran'
export F77='gfortran'
export F90='gfortran'
export FCFLAGS=''
export FFLAGS=''
export F90FLAGS=''
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.8.4/hdf5
./configure --prefix=${HDF5_ROOT} --enable-cxx --enable-fortran
# 20070507 HDF5 --enable-cxx conflicts with --enable-parallel
# 20070507 HDF5 --enable-parallel requires parallel filesystem
# ./configure --prefix=${HDF5_ROOT} --enable-fortran --enable-parallel
make
# make check
sudo make install
# Do same for netCDF4
cd ${DATA}/tmp
/bin/rm -r ${DATA}/tmp/netcdf-4.1-*snapshot*
sudo /bin/rm -r ${NETCDF4_ROOT}/include/netcdf.* ${NETCDF4_ROOT}/lib/libnetcdf.* 
tar xzvf netcdf-4-daily.tar.gz
cd ${DATA}/tmp/netcdf-4.1-snapshot2009111500
make distclean
# NB: --disable-v2 disables the version 2 interface used by netcdf-perl
# NB: --enable-logging allows HDF error message to print
# NB: --enable-cxx-4 enables new netCDF4 C++ API
# NB: --with-libcf builds libcf.a
# NB: --with-udunits builds libudunits2.a
./configure --prefix=/usr/local --disable-shared --enable-cxx-4 --enable-dap --enable-f77 --enable-f90 --enable-logging --enable-netcdf-4 --with-hdf5=${HDF5_ROOT} --with-libcf --with-udunits > netcdf.configure.foo 2>&1
make > netcdf.make.foo 2>&1
mv -f config.log netcdf.config.log.foo
make check > netcdf.check.foo 2>&1
scp netcdf.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-4.1-snapshot2009111500/libsrc4/.libs/libnetcdf.a ${NETCDF4_ROOT}/lib/libnetcdf.a.gcc-gfortran
sudo cp ${DATA}/tmp/netcdf-4.1-snapshot2009111500/f90/typesizes.mod ${NETCDF4_ROOT}/include/typesizes.mod.gfortran
sudo cp ${DATA}/tmp/netcdf-4.1-snapshot2009111500/f90/netcdf.mod ${NETCDF4_ROOT}/include/netcdf.mod.gfortran
make clean
exit # Return to previous shell level
# Output saved to:
http://dust.ess.uci.edu/tmp/netcdf.check.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.configure.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.make.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.config.log.x86_64-unknown-linux-gnu.foo
#***********************************************************************
# 20091114: neige.ess.uci.edu x86_64/EMT64 Debian Ubuntu Karmic Koala gcc/gfortran netcdf-4-daily
#***********************************************************************

#***********************************************************************      
# 20100108: givre.ess.uci.edu x86_64/EMT64 Debian Ubuntu Karmic Koala gcc/gfortran netcdf-4-daily
# NB: Works! New default
#***********************************************************************
sudo aptitude install antlr bison flex gcc g++ gsl-bin libgsl0-dev libnetcdf4 libnetcdf-dev netcdf-bin # Install netCDF prequisites
cd ${DATA}/tmp
/bin/rm -r ${DATA}/tmp/hdf5-1.8.4*
wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/hdf5-1.8.4.tar.gz
/bin/rm netcdf-4-daily.tar.gz
# Instead of getting latest version get fixed, known-to-work version
# wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/snapshot/netcdf-4-daily.tar.gz
# scp netcdf-4-daily.tar.gz dust.ess.uci.edu:/data/zender/tmp
rsync dust.ess.uci.edu:/data/zender/tmp/netcdf-4-daily.tar.gz .
tar xvzf hdf5-1.8.4.tar.gz
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.8.4
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
# NB: x86_64 compilations require -fPIC -m64 flags to avoid errors on shared libraries that link to libnetcdf, e.g., libnetcdf-perl: "/usr/bin/ld: /usr/local/lib/libnetcdf.a(putget.o): relocation R_X86_64_32S against `a local symbol' can not be used when making a shared object; recompile with -fPIC"
export CC='gcc'
export CFLAGS='-fPIC -m64'
export CPPFLAGS=''
export CXX='g++'
export CXXFLAGS='-fPIC -m64'
export FC='gfortran'
export F77='gfortran'
export F90='gfortran'
export FCFLAGS=''
export FFLAGS=''
export F90FLAGS=''
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.8.4/hdf5
./configure --prefix=${HDF5_ROOT} --enable-cxx --enable-fortran
# 20070507 HDF5 --enable-cxx conflicts with --enable-parallel
# 20070507 HDF5 --enable-parallel requires parallel filesystem
# ./configure --prefix=${HDF5_ROOT} --enable-fortran --enable-parallel
make > hdf5.make.foo 2>&1
# make check > hdf5.check.foo 2>&1
scp hdf5.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install
# Do same for netCDF4
cd ${DATA}/tmp
/bin/rm -r ${DATA}/tmp/netcdf-4.1-*snapshot*
sudo /bin/rm -r ${NETCDF4_ROOT}/include/netcdf.* ${NETCDF4_ROOT}/lib/libnetcdf.* 
tar xzvf netcdf-4-daily.tar.gz
cd ${DATA}/tmp/netcdf-4.1-snapshot2010010800
make distclean
# NB: --disable-v2 disables the version 2 interface used by netcdf-perl
# NB: --enable-logging allows HDF error message to print
# NB: --enable-cxx-4 enables new netCDF4 C++ API
# NB: --with-libcf builds libcf.a
# NB: --with-udunits builds libudunits2.a
./configure --prefix=/usr/local --disable-shared --enable-cxx-4 --enable-dap --enable-f77 --enable-f90 --enable-logging --enable-netcdf-4 --with-hdf5=${HDF5_ROOT} --with-libcf --with-udunits > netcdf.configure.foo 2>&1
make > netcdf.make.foo 2>&1
mv -f config.log netcdf.config.log.foo
make check > netcdf.check.foo 2>&1
scp netcdf.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-4.1-snapshot2010010800/libsrc4/.libs/libnetcdf.a ${NETCDF4_ROOT}/lib/libnetcdf.a.gcc-gfortran
sudo cp ${DATA}/tmp/netcdf-4.1-snapshot2010010800/f90/typesizes.mod ${NETCDF4_ROOT}/include/typesizes.mod.gfortran
sudo cp ${DATA}/tmp/netcdf-4.1-snapshot2010010800/f90/netcdf.mod ${NETCDF4_ROOT}/include/netcdf.mod.gfortran
make clean
exit # Return to previous shell level
# Output saved to:
http://dust.ess.uci.edu/tmp/netcdf.check.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.configure.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.make.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.config.log.x86_64-unknown-linux-gnu.foo
#***********************************************************************
# 20100108: givre.ess.uci.edu x86_64/EMT64 Debian Ubuntu Karmic Koala gcc/gfortran netcdf-4-daily
#***********************************************************************

#***********************************************************************      
# 20100206: givre.ess.uci.edu x86_64/EMT64 Debian Ubuntu Karmic Koala gcc/gfortran netcdf-4-daily
# NB: This snapshot is approximately the same as netCDF version 4.1 (also released today) 
#***********************************************************************
sudo aptitude install antlr bison flex gcc g++ gsl-bin libgsl0-dev libnetcdf4 libnetcdf-dev netcdf-bin # Install netCDF prequisites
cd ${DATA}/tmp
/bin/rm -r ${DATA}/tmp/hdf5-1.8.4*
wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/hdf5-1.8.4.tar.gz
/bin/rm netcdf-4-daily.tar.gz
# Instead of getting latest version get fixed, known-to-work version
# wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/snapshot/netcdf-4-daily.tar.gz
# scp netcdf-4-daily.tar.gz dust.ess.uci.edu:/data/zender/tmp
rsync dust.ess.uci.edu:/data/zender/tmp/netcdf-4-daily.tar.gz .
tar xvzf hdf5-1.8.4.tar.gz
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.8.4
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
# NB: x86_64 compilations require -fPIC -m64 flags to avoid errors on shared libraries that link to libnetcdf, e.g., libnetcdf-perl: "/usr/bin/ld: /usr/local/lib/libnetcdf.a(putget.o): relocation R_X86_64_32S against `a local symbol' can not be used when making a shared object; recompile with -fPIC"
export CC='gcc'
export CFLAGS='-fPIC -m64'
export CPPFLAGS=''
export CXX='g++'
export CXXFLAGS='-fPIC -m64'
export FC='gfortran'
export F77='gfortran'
export F90='gfortran'
export FCFLAGS=''
export FFLAGS=''
export F90FLAGS=''
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.8.4/hdf5
./configure --prefix=${HDF5_ROOT} --enable-cxx --enable-fortran > hdf5.configure.foo 2>&1
# 20070507 HDF5 --enable-cxx conflicts with --enable-parallel
# 20070507 HDF5 --enable-parallel requires parallel filesystem
# ./configure --prefix=${HDF5_ROOT} --enable-fortran --enable-parallel
make > hdf5.make.foo 2>&1
# make check > hdf5.check.foo 2>&1
scp hdf5.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install
# Do same for netCDF4
cd ${DATA}/tmp
/bin/rm -r ${DATA}/tmp/netcdf-4.1-*snapshot*
sudo /bin/rm -r ${NETCDF4_ROOT}/include/netcdf.* ${NETCDF4_ROOT}/lib/libnetcdf.* 
tar xzvf netcdf-4-daily.tar.gz
cd ${DATA}/tmp/netcdf-4.1-snapshot2010020600
make distclean
# NB: --disable-v2 disables the version 2 interface used by netcdf-perl
# NB: --enable-logging allows HDF error message to print
# NB: --enable-cxx-4 enables new netCDF4 C++ API
# NB: --with-libcf builds libcf.a
# NB: --with-udunits builds libudunits2.a
./configure --prefix=/usr/local --disable-shared --enable-cxx-4 --enable-dap --enable-f77 --enable-f90 --enable-logging --enable-netcdf-4 --with-hdf5=${HDF5_ROOT} --with-libcf --with-udunits > netcdf.configure.foo 2>&1
make > netcdf.make.foo 2>&1
mv -f config.log netcdf.config.log.foo
make check > netcdf.check.foo 2>&1
scp netcdf.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-4.1-snapshot2010020600/libsrc4/.libs/libnetcdf.a ${NETCDF4_ROOT}/lib/libnetcdf.a.gcc-gfortran
sudo cp ${DATA}/tmp/netcdf-4.1-snapshot2010020600/f90/typesizes.mod ${NETCDF4_ROOT}/include/typesizes.mod.gfortran
sudo cp ${DATA}/tmp/netcdf-4.1-snapshot2010020600/f90/netcdf.mod ${NETCDF4_ROOT}/include/netcdf.mod.gfortran
make clean
exit # Return to previous shell level
# Output saved to:
http://dust.ess.uci.edu/tmp/netcdf.check.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.configure.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.make.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.config.log.x86_64-unknown-linux-gnu.foo
#***********************************************************************
# 20100206: givre.ess.uci.edu x86_64/EMT64 Debian Ubuntu Karmic Koala gcc/gfortran netcdf-4-daily
#***********************************************************************

#***********************************************************************      
# 20100409: givre.ess.uci.edu x86_64/EMT64 Debian Ubuntu Karmic Koala gcc/gfortran netcdf-4-daily
# NB: This snapshot is approximately the same as netCDF version 4.1.1 (also released today) 
#***********************************************************************
sudo aptitude install antlr bison flex gcc g++ gsl-bin libgsl0-dev libnetcdf4 libnetcdf-dev netcdf-bin # Install netCDF prequisites
cd ${DATA}/tmp
/bin/rm -r ${DATA}/tmp/hdf5-1.8.4*
wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/hdf5-1.8.4-patch1.tar.gz
/bin/rm netcdf-4-daily.tar.gz
# Instead of getting latest version get fixed, known-to-work version
# wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/snapshot/netcdf-4-daily.tar.gz
# scp netcdf-4-daily.tar.gz dust.ess.uci.edu:/data/zender/tmp
rsync dust.ess.uci.edu:/data/zender/tmp/netcdf-4-daily.tar.gz .
tar xvzf hdf5-1.8.4-patch1.tar.gz
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.8.4-patch1
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
# NB: x86_64 compilations require -fPIC -m64 flags to avoid errors on shared libraries that link to libnetcdf, e.g., libnetcdf-perl: "/usr/bin/ld: /usr/local/lib/libnetcdf.a(putget.o): relocation R_X86_64_32S against `a local symbol' can not be used when making a shared object; recompile with -fPIC"
export CC='gcc'
export CFLAGS='-fPIC -m64'
export CPPFLAGS=''
export CXX='g++'
export CXXFLAGS='-fPIC -m64'
export FC='gfortran'
export F77='gfortran'
export F90='gfortran'
export FCFLAGS=''
export FFLAGS=''
export F90FLAGS=''
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.8.4-patch1/hdf5
./configure --prefix=${HDF5_ROOT} --enable-cxx --enable-fortran > hdf5.configure.foo 2>&1
# 20070507 HDF5 --enable-cxx conflicts with --enable-parallel
# 20070507 HDF5 --enable-parallel requires parallel filesystem
# ./configure --prefix=${HDF5_ROOT} --enable-fortran --enable-parallel
make > hdf5.make.foo 2>&1
# make check > hdf5.check.foo 2>&1
scp hdf5.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install
# Do same for netCDF4
cd ${DATA}/tmp
/bin/rm -r ${DATA}/tmp/netcdf-4.1.1-*snapshot*
sudo /bin/rm -r ${NETCDF4_ROOT}/include/netcdf.* ${NETCDF4_ROOT}/lib/libnetcdf.* 
tar xzvf netcdf-4-daily.tar.gz
cd ${DATA}/tmp/netcdf-4.1.1-snapshot2010040900
make distclean
# NB: --disable-v2 disables the version 2 interface used by netcdf-perl
# NB: --enable-logging allows HDF error message to print
# NB: --enable-cxx-4 enables new netCDF4 C++ API
# NB: --enable-hdf4 enables reading HDF4 files (created with SD (Scientific Data) API) through netCDF4 API
# NB: --with-libcf builds libcf.a
# NB: --with-udunits builds libudunits2.a
./configure --prefix=/usr/local --disable-shared --enable-cxx-4 --enable-dap --enable-f77 --enable-f90 --enable-logging --enable-netcdf-4 --with-hdf5=${HDF5_ROOT} --with-libcf --with-udunits > netcdf.configure.foo 2>&1
make > netcdf.make.foo 2>&1
mv -f config.log netcdf.config.log.foo
make check > netcdf.check.foo 2>&1
scp netcdf.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-4.1.1-snapshot2010040900/libsrc4/.libs/libnetcdf.a ${NETCDF4_ROOT}/lib/libnetcdf.a.gcc-gfortran
sudo cp ${DATA}/tmp/netcdf-4.1.1-snapshot2010040900/f90/typesizes.mod ${NETCDF4_ROOT}/include/typesizes.mod.gfortran
sudo cp ${DATA}/tmp/netcdf-4.1.1-snapshot2010040900/f90/netcdf.mod ${NETCDF4_ROOT}/include/netcdf.mod.gfortran
make clean
exit # Return to previous shell level
# Output saved to:
http://dust.ess.uci.edu/tmp/netcdf.check.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.configure.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.make.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.config.log.x86_64-unknown-linux-gnu.foo
#***********************************************************************
# 20100409: givre.ess.uci.edu x86_64/EMT64 Debian Ubuntu Karmic Koala gcc/gfortran netcdf-4-daily
#***********************************************************************

#***********************************************************************      
# 20100503: givre.ess.uci.edu x86_64/EMT64 Windows Cygwin 1.7.5-1 gcc/gfortran netcdf-4-daily
# NB: AFAICT, Cygwin does not have 'sudo'
# NB: This snapshot is approximately the same as netCDF version 4.1.1 (also released today) 
#***********************************************************************
cd ${DATA}/tmp
/bin/rm -r ${DATA}/tmp/hdf5-1.8.4*
wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/hdf5-1.8.4-patch1.tar.gz
/bin/rm netcdf-4-daily.tar.gz
# Instead of getting latest version get fixed, known-to-work version
# wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/snapshot/netcdf-4-daily.tar.gz
# scp netcdf-4-daily.tar.gz dust.ess.uci.edu:/data/zender/tmp
rsync dust.ess.uci.edu:/data/zender/tmp/netcdf-4-daily.tar.gz .
tar xvzf hdf5-1.8.4-patch1.tar.gz
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.8.4-patch1
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
export CC='gcc'
export CFLAGS=''
export CPPFLAGS=''
export CXX='g++'
export CXXFLAGS=''
export FC='gfortran'
export F77='gfortran'
export F90='gfortran'
export FCFLAGS=''
export FFLAGS=''
export F90FLAGS=''
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.8.4-patch1/hdf5
./configure --prefix=${HDF5_ROOT} --enable-cxx --enable-fortran > hdf5.configure.foo 2>&1
# 20070507 HDF5 --enable-cxx conflicts with --enable-parallel
# 20070507 HDF5 --enable-parallel requires parallel filesystem
# ./configure --prefix=${HDF5_ROOT} --enable-fortran --enable-parallel
make > hdf5.make.foo 2>&1
# make check > hdf5.check.foo 2>&1
scp hdf5.*.foo dust.ess.uci.edu:/var/www/html/tmp
make install
# Do same for netCDF4
cd ${DATA}/tmp
/bin/rm -r ${DATA}/tmp/netcdf-4.1.1-*snapshot*
/bin/rm -r ${NETCDF4_ROOT}/include/netcdf.* ${NETCDF4_ROOT}/lib/libnetcdf.* 
tar xzvf netcdf-4-daily.tar.gz
cd ${DATA}/tmp/netcdf-4.1.1-snapshot2010040900
make distclean
# NB: --disable-v2 disables the version 2 interface used by netcdf-perl
# NB: --enable-logging allows HDF error message to print
# NB: --enable-cxx-4 enables new netCDF4 C++ API
# NB: --enable-hdf4 enables reading HDF4 files (created with SD (Scientific Data) API) through netCDF4 API
# NB: --with-libcf builds libcf.a
# NB: --with-udunits builds libudunits2.a
./configure --prefix=/usr/local --disable-shared --enable-cxx-4 --enable-dap --enable-f77 --enable-f90 --enable-logging --enable-netcdf-4 --with-hdf5=${HDF5_ROOT} --with-libcf --with-udunits > netcdf.configure.foo 2>&1
make > netcdf.make.foo 2>&1
mv -f config.log netcdf.config.log.foo
make check > netcdf.check.foo 2>&1
scp netcdf.*.foo dust.ess.uci.edu:/var/www/html/tmp
make install
# NB: Fortran symbols do get munged into libnetcdf.a somehow
cp ${DATA}/tmp/netcdf-4.1.1-snapshot2010040900/libsrc4/.libs/libnetcdf.a ${NETCDF4_ROOT}/lib/libnetcdf.a.gcc-gfortran
cp ${DATA}/tmp/netcdf-4.1.1-snapshot2010040900/f90/typesizes.mod ${NETCDF4_ROOT}/include/typesizes.mod.gfortran
cp ${DATA}/tmp/netcdf-4.1.1-snapshot2010040900/f90/netcdf.mod ${NETCDF4_ROOT}/include/netcdf.mod.gfortran
make clean
exit # Return to previous shell level
# Output saved to:
http://dust.ess.uci.edu/tmp/netcdf.check.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.configure.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.make.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.config.log.x86_64-unknown-linux-gnu.foo
#***********************************************************************
# 20100503: givre.ess.uci.edu x86_64/EMT64 Windows Cygwin 1.7.5-1 gcc/gfortran netcdf-4-daily
#***********************************************************************

#***********************************************************************      
# 20100809: givre.ess.uci.edu x86_64/EMT64 Debian Ubuntu Lucid Lynx gcc/gfortran netcdf-4-daily
#***********************************************************************
sudo aptitude install antlr bison flex gcc g++ gsl-bin libgsl0-dev libnetcdf4 libnetcdf-dev netcdf-bin # Install netCDF prequisites
cd ${DATA}/tmp
/bin/rm -r ${DATA}/tmp/hdf5-1.8.4*
wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/hdf5-1.8.4-patch1.tar.gz
/bin/rm netcdf-4-daily.tar.gz
# Instead of getting latest version get fixed, known-to-work version
# wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/snapshot/netcdf-4-daily.tar.gz
# scp netcdf-4-daily.tar.gz dust.ess.uci.edu:/data/zender/tmp
rsync dust.ess.uci.edu:/data/zender/tmp/netcdf-4-daily.tar.gz .
tar xvzf hdf5-1.8.4-patch1.tar.gz
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.8.4-patch1
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
# NB: x86_64 compilations require -fPIC -m64 flags to avoid errors on shared libraries that link to libnetcdf, e.g., libnetcdf-perl: "/usr/bin/ld: /usr/local/lib/libnetcdf.a(putget.o): relocation R_X86_64_32S against `a local symbol' can not be used when making a shared object; recompile with -fPIC"
export CC='gcc'
export CFLAGS='-fPIC -m64'
export CPPFLAGS=''
export CXX='g++'
export CXXFLAGS='-fPIC -m64'
export FC='gfortran'
export F77='gfortran'
export F90='gfortran'
export FCFLAGS=''
export FFLAGS=''
export F90FLAGS=''
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.8.4-patch1/hdf5
./configure --prefix=${HDF5_ROOT} --enable-cxx --enable-fortran > hdf5.configure.foo 2>&1
# 20070507 HDF5 --enable-cxx conflicts with --enable-parallel
# 20070507 HDF5 --enable-parallel requires parallel filesystem
# ./configure --prefix=${HDF5_ROOT} --enable-fortran --enable-parallel
make > hdf5.make.foo 2>&1
# make check > hdf5.check.foo 2>&1
scp hdf5.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install
# Do same for netCDF4
cd ${DATA}/tmp
/bin/rm -r ${DATA}/tmp/netcdf-4.1.2-beta1-*snapshot*
sudo /bin/rm -r ${NETCDF4_ROOT}/include/netcdf.* ${NETCDF4_ROOT}/lib/libnetcdf.* 
tar xzvf netcdf-4-daily.tar.gz
cd ${DATA}/tmp/netcdf-4.1.2-beta1-snapshot2010080820
make distclean
# NB: --enable-cxx-4 enables new netCDF4 C++ API
# NB: --enable-hdf4 enables reading HDF4 files (created with SD (Scientific Data) API) through netCDF4 API. NB: requires separately building HDF4 and libmfhdf.a
# NB: --enable-logging allows HDF error message to print
# NB: --enable-separate-fortran builds libnetcdff.a (default with shared libraries)
# NB: --enable-shared builds shared libraries
# NB: --enable-v2 enables the version 2 interface used by netcdf-perl
# NB: --with-libcf builds libcf.a
# NB: --with-udunits builds libudunits2.a
./configure --prefix=/usr/local --enable-shared --enable-cxx-4 --enable-dap --enable-f77 --enable-f90 --disable-hdf4 --enable-logging --enable-netcdf-4 --enable-v2 --with-hdf5=${HDF5_ROOT} --with-libcf --with-udunits > netcdf.configure.foo 2>&1
make > netcdf.make.foo 2>&1
mv -f config.log netcdf.config.log.foo
make check > netcdf.check.foo 2>&1
scp netcdf.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-4.1.2-beta1-snapshot2010080820/libsrc4/.libs/libnetcdf.a ${NETCDF4_ROOT}/lib/libnetcdf.a.gcc-gfortran
sudo cp ${DATA}/tmp/netcdf-4.1.2-beta1-snapshot2010080820/f90/typesizes.mod ${NETCDF4_ROOT}/include/typesizes.mod.gfortran
sudo cp ${DATA}/tmp/netcdf-4.1.2-beta1-snapshot2010080820/f90/netcdf.mod ${NETCDF4_ROOT}/include/netcdf.mod.gfortran
make clean
exit # Return to previous shell level
# Output saved to:
http://dust.ess.uci.edu/tmp/netcdf.check.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.configure.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.make.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.config.log.x86_64-unknown-linux-gnu.foo
#***********************************************************************
# 20100809: givre.ess.uci.edu x86_64/EMT64 Debian Ubuntu Lucid Lynx gcc/gfortran netcdf-4-daily
#***********************************************************************

#***********************************************************************      
# 20100929: neige.ess.uci.edu x86_64/EMT64 Windows Cygwin 1.7.7-1 gcc/gfortran netcdf-4-daily
# NB: AFAICT, Cygwin does not have 'sudo'
# NB: This snapshot is approximately the same as netCDF version 4.1.1 (also released today) 
#***********************************************************************
cd ${DATA}/tmp
/bin/rm -r ${DATA}/tmp/hdf5-1.8.4*
wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/hdf5-1.8.4-patch1.tar.gz
/bin/rm netcdf-4-daily.tar.gz
# Instead of getting latest version get fixed, known-to-work version
# wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/snapshot/netcdf-4-daily.tar.gz
# scp netcdf-4-daily.tar.gz dust.ess.uci.edu:/data/zender/tmp
rsync dust.ess.uci.edu:/data/zender/tmp/netcdf-4-daily.tar.gz .
tar xvzf hdf5-1.8.4-patch1.tar.gz
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.8.4-patch1
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
export CC='gcc'
export CFLAGS=''
export CPPFLAGS=''
export CXX='g++'
export CXXFLAGS=''
export FC='gfortran'
export F77='gfortran'
export F90='gfortran'
export FCFLAGS=''
export FFLAGS=''
export F90FLAGS=''
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.8.4-patch1/hdf5
./configure --prefix=${HDF5_ROOT} --enable-cxx --enable-fortran > hdf5.configure.foo 2>&1
# 20070507 HDF5 --enable-cxx conflicts with --enable-parallel
# 20070507 HDF5 --enable-parallel requires parallel filesystem
# ./configure --prefix=${HDF5_ROOT} --enable-fortran --enable-parallel
make > hdf5.make.foo 2>&1
# make check > hdf5.check.foo 2>&1
scp hdf5.*.foo dust.ess.uci.edu:/var/www/html/tmp
make install
# Do same for netCDF4
cd ${DATA}/tmp
/bin/rm -r ${DATA}/tmp/netcdf-4.1.2-beta1-*snapshot*
/bin/rm -r ${NETCDF4_ROOT}/include/netcdf.* ${NETCDF4_ROOT}/lib/libnetcdf.* 
tar xzvf netcdf-4-daily.tar.gz
cd ${DATA}/tmp/netcdf-4.1.2-beta1-snapshot2010080820
make distclean
# NB: --disable-v2 disables the version 2 interface used by netcdf-perl
# NB: --enable-logging allows HDF error message to print
# NB: --enable-cxx-4 enables new netCDF4 C++ API
# NB: --enable-hdf4 enables reading HDF4 files (created with SD (Scientific Data) API) through netCDF4 API
# NB: --with-libcf builds libcf.a
# NB: --with-udunits builds libudunits2.a
./configure --prefix=/usr/local --disable-shared --enable-cxx-4 --enable-dap --enable-f77 --enable-f90 --enable-logging --enable-netcdf-4 --with-hdf5=${HDF5_ROOT} --with-libcf --with-udunits > netcdf.configure.foo 2>&1
make > netcdf.make.foo 2>&1
mv -f config.log netcdf.config.log.foo
make check > netcdf.check.foo 2>&1
scp netcdf.*.foo dust.ess.uci.edu:/var/www/html/tmp
make install
# NB: Fortran symbols do get munged into libnetcdf.a somehow
cp ${DATA}/tmp/netcdf-4.1.2-beta1-snapshot2010080820/libsrc4/.libs/libnetcdf.a ${NETCDF4_ROOT}/lib/libnetcdf.a.gcc-gfortran
cp ${DATA}/tmp/netcdf-4.1.2-beta1-snapshot2010080820/f90/typesizes.mod ${NETCDF4_ROOT}/include/typesizes.mod.gfortran
cp ${DATA}/tmp/netcdf-4.1.2-beta1-snapshot2010080820/f90/netcdf.mod ${NETCDF4_ROOT}/include/netcdf.mod.gfortran
make clean
exit # Return to previous shell level
# Output saved to:
http://dust.ess.uci.edu/tmp/netcdf.check.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.configure.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.make.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.config.log.x86_64-unknown-linux-gnu.foo
#***********************************************************************
# 20100929: neige.ess.uci.edu x86_64/EMT64 Windows Cygwin 1.7.7-1 gcc/gfortran netcdf-4-daily
#***********************************************************************

#***********************************************************************      
# 20101011: givre.ess.uci.edu x86_64/EMT64 Debian Ubuntu Maverick Meerkat gcc/gfortran netcdf-4-daily
#***********************************************************************
sudo aptitude install antlr bison flex gcc g++ gsl-bin libgsl0-dev libnetcdf4 libnetcdf-dev netcdf-bin udunits libudunits2-0 libudunits2-dev # Install netCDF prequisites
cd ${DATA}/tmp
/bin/rm -r ${DATA}/tmp/hdf5-1.8.4*
wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/hdf5-1.8.4-patch1.tar.gz
/bin/rm netcdf-4-daily.tar.gz
# Instead of getting latest version get fixed, known-to-work version
# wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/snapshot/netcdf-4-daily.tar.gz
# scp netcdf-4-daily.tar.gz dust.ess.uci.edu:/data/zender/tmp
rsync dust.ess.uci.edu:/data/zender/tmp/netcdf-4-daily.tar.gz .
tar xvzf hdf5-1.8.4-patch1.tar.gz
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.8.4-patch1
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
# NB: x86_64 compilations require -fPIC -m64 flags to avoid errors on shared libraries that link to libnetcdf, e.g., libnetcdf-perl: "/usr/bin/ld: /usr/local/lib/libnetcdf.a(putget.o): relocation R_X86_64_32S against `a local symbol' can not be used when making a shared object; recompile with -fPIC"
export CC='gcc'
export CFLAGS='-fPIC -m64'
export CPPFLAGS=''
export CXX='g++'
export CXXFLAGS='-fPIC -m64'
export FC='gfortran'
export F77='gfortran'
export F90='gfortran'
export FCFLAGS=''
export FFLAGS=''
export F90FLAGS=''
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.8.4-patch1/hdf5
./configure --prefix=${HDF5_ROOT} --enable-cxx --enable-fortran > hdf5.configure.foo 2>&1
# 20070507 HDF5 --enable-cxx conflicts with --enable-parallel
# 20070507 HDF5 --enable-parallel requires parallel filesystem
# ./configure --prefix=${HDF5_ROOT} --enable-fortran --enable-parallel
make > hdf5.make.foo 2>&1
# make check > hdf5.check.foo 2>&1
scp hdf5.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install
# Do same for netCDF4
cd ${DATA}/tmp
/bin/rm -r ${DATA}/tmp/netcdf-4.1.2-beta1-*snapshot*
sudo /bin/rm -r -f ${NETCDF4_ROOT}/include/netcdf.* ${NETCDF4_ROOT}/lib/libnetcdf.* 
tar xzvf netcdf-4-daily.tar.gz
cd ${DATA}/tmp/netcdf-4.1.2-beta2-snapshot2010101108
make distclean
# NB: --enable-cxx-4 enables new netCDF4 C++ API
# NB: --enable-hdf4 enables reading HDF4 files (created with SD (Scientific Data) API) through netCDF4 API. NB: requires separately building HDF4 and libmfhdf.a
# NB: --enable-logging allows HDF error message to print
# NB: --enable-separate-fortran builds libnetcdff.a (default with shared libraries)
# NB: --enable-shared builds shared libraries
# NB: --enable-v2 enables the version 2 interface used by netcdf-perl
# NB: --with-libcf builds libcf.a
# NB: --with-udunits builds libudunits2.a
./configure --prefix=/usr/local --enable-shared --enable-cxx-4 --enable-dap --enable-f77 --enable-f90 --disable-hdf4 --enable-logging --enable-netcdf-4 --enable-v2 --with-hdf5=${HDF5_ROOT} --with-libcf --with-udunits > netcdf.configure.foo 2>&1
make > netcdf.make.foo 2>&1
mv -f config.log netcdf.config.log.foo
make check > netcdf.check.foo 2>&1
scp netcdf.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-4.1.2-beta2-snapshot2010101108/libsrc4/.libs/libnetcdf.a ${NETCDF4_ROOT}/lib/libnetcdf.a.gcc-gfortran
sudo cp ${DATA}/tmp/netcdf-4.1.2-beta2-snapshot2010101108/f90/typesizes.mod ${NETCDF4_ROOT}/include/typesizes.mod.gfortran
sudo cp ${DATA}/tmp/netcdf-4.1.2-beta2-snapshot2010101108/f90/netcdf.mod ${NETCDF4_ROOT}/include/netcdf.mod.gfortran
make clean
exit # Return to previous shell level
# Output saved to:
http://dust.ess.uci.edu/tmp/netcdf.check.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.configure.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.make.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.config.log.x86_64-unknown-linux-gnu.foo
#***********************************************************************
# 20101011: givre.ess.uci.edu x86_64/EMT64 Debian Ubuntu Maverick Meerkat gcc/gfortran netcdf-4-daily
#***********************************************************************

#***********************************************************************      
# 20110330: neige.ess.uci.edu x86_64/EMT64 Debian Ubuntu Maverick Meerkat gcc/gfortran netcdf-4-daily
#***********************************************************************
sudo aptitude install antlr bison flex gcc g++ gsl-bin libgsl0-dev libnetcdf4 libnetcdf-dev netcdf-bin udunits libudunits2-0 libudunits2-dev # Install netCDF prequisites
cd ${DATA}/tmp
/bin/rm -r ${DATA}/tmp/hdf5-1.8.5*
wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/hdf5-1.8.5-patch1.tar.gz
/bin/rm netcdf-4-daily.tar.gz
# Instead of getting latest version get fixed, known-to-work version
# wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/snapshot/netcdf-4-daily.tar.gz
# scp netcdf-4-daily.tar.gz dust.ess.uci.edu:/data/zender/tmp
rsync dust.ess.uci.edu:/data/zender/tmp/netcdf-4-daily.tar.gz .
tar xvzf hdf5-1.8.5-patch1.tar.gz
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.8.5-patch1
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
# NB: x86_64 compilations require -fPIC -m64 flags to avoid errors on shared libraries that link to libnetcdf, e.g., libnetcdf-perl: "/usr/bin/ld: /usr/local/lib/libnetcdf.a(putget.o): relocation R_X86_64_32S against `a local symbol' can not be used when making a shared object; recompile with -fPIC"
export CC='gcc'
export CFLAGS='-fPIC -m64'
export CPPFLAGS=''
export CXX='g++'
export CXXFLAGS='-fPIC -m64'
export FC='gfortran'
export F77='gfortran'
export F90='gfortran'
export FCFLAGS=''
export FFLAGS=''
export F90FLAGS=''
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.8.5-patch1/hdf5
./configure --prefix=${HDF5_ROOT} --enable-cxx --enable-fortran > hdf5.configure.foo 2>&1
# 20070507 HDF5 --enable-cxx conflicts with --enable-parallel
# 20070507 HDF5 --enable-parallel requires parallel filesystem
# ./configure --prefix=${HDF5_ROOT} --enable-fortran --enable-parallel
make > hdf5.make.foo 2>&1
# make check > hdf5.check.foo 2>&1
scp hdf5.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install
# Do same for netCDF4
cd ${DATA}/tmp
/bin/rm -r -f ${DATA}/tmp/netcdf-4.1.2-*snapshot*
sudo /bin/rm -r -f ${NETCDF4_ROOT}/include/netcdf.* ${NETCDF4_ROOT}/lib/libnetcdf.* 
tar xzvf netcdf-4-daily.tar.gz
cd ${DATA}/tmp/netcdf-4.1.2-snapshot2011041822
make distclean
# NB: --enable-cxx-4 enables new netCDF4 C++ API
# NB: --enable-hdf4 enables reading HDF4 files (created with SD (Scientific Data) API) through netCDF4 API. NB: requires separately building HDF4 and libmfhdf.a
# NB: --enable-logging allows HDF error message to print
# NB: --enable-separate-fortran builds libnetcdff.a (default with shared libraries)
# NB: --enable-shared builds shared libraries
# NB: --enable-v2 enables the version 2 interface used by netcdf-perl
# NB: --with-libcf builds libcf.a
# NB: --with-udunits builds libudunits2.a
./configure --prefix=/usr/local --enable-shared --enable-cxx-4 --enable-dap --enable-f77 --enable-f90 --disable-hdf4 --enable-logging --enable-netcdf-4 --enable-v2 --with-hdf5=${HDF5_ROOT} --with-libcf --with-udunits > netcdf.configure.foo 2>&1
make > netcdf.make.foo 2>&1
mv -f config.log netcdf.config.log.foo
make check > netcdf.check.foo 2>&1
scp netcdf.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-4.1.2-snapshot2011041822/libsrc4/.libs/libnetcdf.a ${NETCDF4_ROOT}/lib/libnetcdf.a.gcc-gfortran
sudo cp ${DATA}/tmp/netcdf-4.1.2-snapshot2011041822/f90/typesizes.mod ${NETCDF4_ROOT}/include/typesizes.mod.gfortran
sudo cp ${DATA}/tmp/netcdf-4.1.2-snapshot2011041822/f90/netcdf.mod ${NETCDF4_ROOT}/include/netcdf.mod.gfortran
make clean
exit # Return to previous shell level
# Output saved to:
http://dust.ess.uci.edu/tmp/netcdf.check.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.configure.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.make.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.config.log.x86_64-unknown-linux-gnu.foo
#***********************************************************************
# 20110330: neige.ess.uci.edu x86_64/EMT64 Debian Ubuntu Maverick Meerkat gcc/gfortran netcdf-4-daily
#***********************************************************************

#***********************************************************************      
# 20110626: neige.ess.uci.edu x86_64/EMT64 Debian Ubuntu Natty Narwhal gcc/gfortran netcdf-4-daily
# NB: Works! New default
#***********************************************************************
sudo aptitude install antlr bison flex gcc g++ gsl-bin libgsl0-dev libnetcdf6 libnetcdf-dev libcurl4-gnutls-dev libexpat1-dev libxml2-dev netcdf-bin udunits-bin libudunits2-0 libudunits2-dev # Install netCDF prequisites
cd ${DATA}/tmp
/bin/rm -r ${DATA}/tmp/hdf5-1.8.7*
wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/hdf5-1.8.7.tar.gz
/bin/rm netcdf-4-daily.tar.gz
# Instead of getting latest version get fixed, known-to-work version
# wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/snapshot/netcdf-4-daily.tar.gz
# scp netcdf-4-daily.tar.gz dust.ess.uci.edu:/data/zender/tmp
rsync dust.ess.uci.edu:/data/zender/tmp/netcdf-4-daily.tar.gz .
tar xvzf hdf5-1.8.7.tar.gz
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.8.7
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
# NB: x86_64 compilations require -fPIC -m64 flags to avoid errors on shared libraries that link to libnetcdf, e.g., libnetcdf-perl: "/usr/bin/ld: /usr/local/lib/libnetcdf.a(putget.o): relocation R_X86_64_32S against `a local symbol' can not be used when making a shared object; recompile with -fPIC"
export CC='gcc'
export CFLAGS='-fPIC -m64'
export CPPFLAGS=''
export CXX='g++'
export CXXFLAGS='-fPIC -m64'
export FC='gfortran'
export F77='gfortran'
export F90='gfortran'
export FCFLAGS=''
export FFLAGS=''
export F90FLAGS=''
export LDFLAGS='-L/usr/local/lib'
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.8.7/hdf5
./configure --prefix=${HDF5_ROOT} --enable-cxx --enable-fortran > hdf5.configure.foo 2>&1
# 20070507 HDF5 --enable-cxx conflicts with --enable-parallel
# 20070507 HDF5 --enable-parallel requires parallel filesystem
# ./configure --prefix=${HDF5_ROOT} --enable-fortran --enable-parallel
make > hdf5.make.foo 2>&1
# make check > hdf5.check.foo 2>&1
scp hdf5.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install

# Do same for netCDF4
cd ${DATA}/tmp
/bin/rm -r -f ${DATA}/tmp/netcdf-4.1.3-*snapshot*
sudo /bin/rm -r -f ${NETCDF4_ROOT}/include/netcdf.* ${NETCDF4_ROOT}/lib/libnetcdf.* 
tar xzvf netcdf-4-daily.tar.gz
cd ${DATA}/tmp/netcdf-4.1.3-snapshot2011062620
make distclean
# NB: --enable-cxx-4 enables new netCDF4 C++ API
# NB: --enable-hdf4 enables reading HDF4 files (created with SD (Scientific Data) API) through netCDF4 API. NB: requires separately building HDF4 and libmfhdf.a
# NB: --enable-logging allows HDF error message to print
# NB: --enable-separate-fortran builds libnetcdff.a (default with shared libraries)
# NB: --enable-shared builds shared libraries
# NB: --enable-v2 enables the version 2 interface used by netcdf-perl
# NB: --with-libcf builds libcf.a
# NB: --with-udunits builds libudunits2.a
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local --enable-shared --enable-cxx-4 --enable-dap --enable-f77 --enable-f90 --disable-hdf4 --enable-logging --enable-netcdf-4 --enable-v2 --with-hdf5=/usr/local --with-libcf=/usr/local --with-udunits=/usr/local > netcdf.configure.foo 2>&1
make > netcdf.make.foo 2>&1
mv -f config.log netcdf.config.log.foo
make check > netcdf.check.foo 2>&1
scp netcdf.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-4.1.3-snapshot2011062620/libsrc4/.libs/libnetcdf.a ${NETCDF4_ROOT}/lib/libnetcdf.a.gcc-gfortran
sudo cp ${DATA}/tmp/netcdf-4.1.3-snapshot2011062620/f90/typesizes.mod ${NETCDF4_ROOT}/include/typesizes.mod.gfortran
sudo cp ${DATA}/tmp/netcdf-4.1.3-snapshot2011062620/f90/netcdf.mod ${NETCDF4_ROOT}/include/netcdf.mod.gfortran
make clean
exit # Return to previous shell level
# Output saved to:
http://dust.ess.uci.edu/tmp/netcdf.check.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.configure.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.make.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.config.log.x86_64-unknown-linux-gnu.foo
#***********************************************************************
# 20110626: neige.ess.uci.edu x86_64/EMT64 Debian Ubuntu Natty Narwhal gcc/gfortran netcdf-4-daily
#***********************************************************************

#***********************************************************************      
# 20120206: givre.ess.uci.edu x86_64/EMT64 Debian Ubuntu Oneiric Ocelot gcc/gfortran 4.6.1 netcdf-4-daily
# NB: Works! New default
#***********************************************************************
sudo aptitude install antlr bison doxygen flex gcc g++ gsl-bin libgsl0-dev libnetcdf6 libnetcdf-dev libcurl4-gnutls-dev libexpat1-dev libxml2-dev netcdf-bin udunits-bin libudunits2-0 libudunits2-dev # Install netCDF prequisites
cd ${DATA}/tmp
/bin/rm -r ${DATA}/tmp/hdf5-1.8.7*
wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/hdf5-1.8.7.tar.gz
/bin/rm netcdf-4-daily.tar.gz
# Instead of getting latest version get fixed, known-to-work version
# wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/snapshot/netcdf-4-daily.tar.gz
# scp netcdf-4-daily.tar.gz dust.ess.uci.edu:/data/zender/tmp
rsync dust.ess.uci.edu:/data/zender/tmp/netcdf-4-daily.tar.gz .
tar xvzf hdf5-1.8.7.tar.gz
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.8.7
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
# NB: x86_64 compilations require -fPIC -m64 flags to avoid errors on shared libraries that link to libnetcdf, e.g., libnetcdf-perl: "/usr/bin/ld: /usr/local/lib/libnetcdf.a(putget.o): relocation R_X86_64_32S against `a local symbol' can not be used when making a shared object; recompile with -fPIC"
export CC='gcc'
export CFLAGS='-fPIC -m64'
export CPPFLAGS=''
export CXX='g++'
export CXXFLAGS='-fPIC -m64'
export FC='gfortran'
export F77='gfortran'
export F90='gfortran'
export FCFLAGS=''
export FFLAGS=''
export F90FLAGS=''
export LDFLAGS='-L/usr/local/lib'
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.8.7/hdf5
./configure --prefix=${HDF5_ROOT} --enable-cxx --enable-fortran > hdf5.configure.foo 2>&1
# 20070507 HDF5 --enable-cxx conflicts with --enable-parallel
# 20070507 HDF5 --enable-parallel requires parallel filesystem
# ./configure --prefix=${HDF5_ROOT} --enable-fortran --enable-parallel
make > hdf5.make.foo 2>&1
# make check > hdf5.check.foo 2>&1
scp hdf5.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install

# Do same for netCDF4
cd ${DATA}/tmp
/bin/rm -r -f ${DATA}/tmp/netcdf-4.2-*snapshot*
sudo /bin/rm -r -f ${NETCDF4_ROOT}/include/netcdf.* ${NETCDF4_ROOT}/lib/libnetcdf.* 
tar xzvf netcdf-4-daily.tar.gz
cd ${DATA}/tmp/netcdf-4.2-snapshot2012020522
make distclean
# NB: --enable-cxx-4 enables new netCDF4 C++ API
# NB: --enable-hdf4 enables reading HDF4 files (created with SD (Scientific Data) API) through netCDF4 API. NB: requires separately building HDF4 and libmfhdf.a
# NB: --enable-logging allows HDF error message to print
# NB: --enable-separate-fortran builds libnetcdff.a (default with shared libraries)
# NB: --enable-shared builds shared libraries
# NB: --enable-v2 enables the version 2 interface used by netcdf-perl
# NB: --with-libcf builds libcf.a
# NB: --with-udunits builds libudunits2.a
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local --enable-shared --enable-dap --disable-hdf4 --enable-logging --enable-netcdf4 --enable-v2 > netcdf.configure.foo 2>&1
make > netcdf.make.foo 2>&1
mv -f config.log netcdf.config.log.foo
make check > netcdf.check.foo 2>&1
scp netcdf.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-4.2-snapshot2012020522/libsrc/.libs/libnetcdf3.a ${NETCDF4_ROOT}/lib/libnetcdf3.a.gcc
sudo cp ${DATA}/tmp/netcdf-4.2-snapshot2012020522/libsrc4/.libs/libnetcdf4.a ${NETCDF4_ROOT}/lib/libnetcdf4.a.gcc
#sudo cp ${DATA}/tmp/netcdf-4.2-snapshot2012020522/f90/typesizes.mod ${NETCDF4_ROOT}/include/typesizes.mod.gfortran
#sudo cp ${DATA}/tmp/netcdf-4.2-snapshot2012020522/f90/netcdf.mod ${NETCDF4_ROOT}/include/netcdf.mod.gfortran
make clean
exit # Return to previous shell level
# Output saved to:
http://dust.ess.uci.edu/tmp/netcdf.check.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.configure.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.make.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.config.log.x86_64-unknown-linux-gnu.foo
#***********************************************************************
# 20120206: givre.ess.uci.edu x86_64/EMT64 Debian Ubuntu Oneiric Ocelot gcc/gfortran 4.6.1 netcdf-4-daily
#***********************************************************************

#***********************************************************************      
# 20120406: roulee.ess.uci.edu x86_64/EMT64 Debian Ubuntu Oneiric Ocelot gcc/gfortran 4.6.1 netcdf-4-daily
# NB: Works with nc-config changes of "type -p foo" to "[ -f foo ]"
#***********************************************************************
sudo aptitude install antlr bison doxygen flex gcc g++ gsl-bin libgsl0-dev libnetcdf6 libnetcdf-dev libcurl4-gnutls-dev libexpat1-dev libxml2-dev netcdf-bin udunits-bin libudunits2-0 libudunits2-dev # Install netCDF prequisites
cd ${DATA}/tmp
/bin/rm -r ${DATA}/tmp/hdf5-1.8.8*
wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/hdf5-1.8.8.tar.gz
/bin/rm netcdf-4-daily.tar.gz
# Instead of getting latest version get fixed, known-to-work version
# wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/snapshot/netcdf-4-daily.tar.gz
# wget -c http://www.unidata.ucar.edu/downloads/netcdf/ftp/netcdf-fortran-4.2.tar.gz
# wget -c http://www.unidata.ucar.edu/downloads/netcdf/ftp/netcdf-cxx4-4.2.tar.gz
# scp netcdf-4-daily.tar.gz dust.ess.uci.edu:/data/zender/tmp
rsync dust.ess.uci.edu:/data/zender/tmp/netcdf-4-daily.tar.gz .
tar xvzf hdf5-1.8.8.tar.gz
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.8.8
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
# NB: x86_64 compilations require -fPIC -m64 flags to avoid errors on shared libraries that link to libnetcdf, e.g., libnetcdf-perl: "/usr/bin/ld: /usr/local/lib/libnetcdf.a(putget.o): relocation R_X86_64_32S against `a local symbol' can not be used when making a shared object; recompile with -fPIC"
export CC='gcc'
export CFLAGS='-fPIC -m64'
export CPPFLAGS=''
export CXX='g++'
export CXXFLAGS='-fPIC -m64'
export FC='gfortran'
export F77='gfortran'
export F90='gfortran'
export FCFLAGS=''
export FFLAGS=''
export F90FLAGS=''
export LDFLAGS='-L/usr/local/lib'
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.8.8/hdf5
./configure --prefix=${HDF5_ROOT} --enable-cxx --enable-fortran > hdf5.configure.foo 2>&1
# 20070507 HDF5 --enable-cxx conflicts with --enable-parallel
# 20070507 HDF5 --enable-parallel requires parallel filesystem
# ./configure --prefix=${HDF5_ROOT} --enable-fortran --enable-parallel
make > hdf5.make.foo 2>&1
# make check > hdf5.check.foo 2>&1
scp hdf5.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install

# Do same for netCDF4
cd ${DATA}/tmp
/bin/rm -r -f ${DATA}/tmp/netcdf-4.2-*snapshot*
sudo /bin/rm -r -f ${NETCDF4_ROOT}/include/netcdf.* ${NETCDF4_ROOT}/lib/libnetcdf.* 
tar xzvf netcdf-4-daily.tar.gz
cd ${DATA}/tmp/netcdf-4.2-snapshot2012040523
make distclean
# NB: --enable-cxx-4 enables new netCDF4 C++ API
# NB: --enable-hdf4 enables reading HDF4 files (created with SD (Scientific Data) API) through netCDF4 API. NB: requires separately building HDF4 and libmfhdf.a
# NB: --enable-logging allows HDF error message to print
# NB: --enable-separate-fortran builds libnetcdff.a (default with shared libraries)
# NB: --enable-shared builds shared libraries
# NB: --enable-v2 enables the version 2 interface used by netcdf-perl
# NB: --with-libcf builds libcf.a
# NB: --with-udunits builds libudunits2.a
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local --enable-shared --enable-dap --disable-hdf4 --enable-logging --enable-netcdf4 --enable-v2 > netcdf.configure.foo 2>&1
make > netcdf.make.foo 2>&1
mv -f config.log netcdf.config.log.foo
make check > netcdf.check.foo 2>&1
scp netcdf.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-4.2-snapshot2012040523/libsrc/.libs/libnetcdf3.a ${NETCDF4_ROOT}/lib/libnetcdf3.a.gcc
sudo cp ${DATA}/tmp/netcdf-4.2-snapshot2012040523/libsrc4/.libs/libnetcdf4.a ${NETCDF4_ROOT}/lib/libnetcdf4.a.gcc
#sudo cp ${DATA}/tmp/netcdf-4.2-snapshot2012040523/f90/typesizes.mod ${NETCDF4_ROOT}/include/typesizes.mod.gfortran
#sudo cp ${DATA}/tmp/netcdf-4.2-snapshot2012040523/f90/netcdf.mod ${NETCDF4_ROOT}/include/netcdf.mod.gfortran
make clean
exit # Return to previous shell level
# Output saved to:
http://dust.ess.uci.edu/tmp/netcdf.check.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.configure.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.make.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.config.log.x86_64-unknown-linux-gnu.foo
#***********************************************************************
# 20120406: roulee.ess.uci.edu x86_64/EMT64 Debian Ubuntu Oneiric Ocelot gcc/gfortran 4.6.1 netcdf-4-daily
#***********************************************************************

#***********************************************************************      
# 20120621: roulee.ess.uci.edu x86_64/EMT64 Debian Ubuntu Precise Pangolin gcc/gfortran 4.6.3 netcdf-4-daily
# NB: Works! New default
#***********************************************************************
sudo aptitude install antlr bison doxygen flex gcc g++ gsl-bin libgsl0-dev libnetcdf6 libnetcdf-dev libcurl4-gnutls-dev libexpat1-dev libxml2-dev netcdf-bin udunits-bin libudunits2-0 libudunits2-dev # Install netCDF prequisites
cd ${DATA}/tmp
/bin/rm -r ${DATA}/tmp/hdf5-1.8.9*
wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/hdf5-1.8.9.tar.gz
/bin/rm netcdf-4-daily.tar.gz
# Instead of getting latest version get fixed, known-to-work version
# wget -c http://www.unidata.ucar.edu/downloads/netcdf/ftp/netcdf-4.2.1-rc1.tar.gz
# wget -c http://www.unidata.ucar.edu/downloads/netcdf/ftp/netcdf-fortran-4.2.tar.gz
# wget -c http://www.unidata.ucar.edu/downloads/netcdf/ftp/netcdf-cxx4-4.2.tar.gz
# scp netcdf-4-daily.tar.gz dust.ess.uci.edu:/data/zender/tmp
rsync dust.ess.uci.edu:/data/zender/tmp/netcdf-4-daily.tar.gz .
tar xvzf hdf5-1.8.9.tar.gz
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.8.9
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
# NB: x86_64 compilations require -fPIC -m64 flags to avoid errors on shared libraries that link to libnetcdf, e.g., libnetcdf-perl: "/usr/bin/ld: /usr/local/lib/libnetcdf.a(putget.o): relocation R_X86_64_32S against `a local symbol' can not be used when making a shared object; recompile with -fPIC"
export CC='gcc'
export CFLAGS='-fPIC -m64'
export CPPFLAGS=''
export CXX='g++'
export CXXFLAGS='-fPIC -m64'
export FC='gfortran'
export F77='gfortran'
export F90='gfortran'
export FCFLAGS=''
export FFLAGS=''
export F90FLAGS=''
export LDFLAGS='-L/usr/local/lib'
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.8.9/hdf5
./configure --prefix=${HDF5_ROOT} --enable-cxx --enable-fortran > hdf5.configure.foo 2>&1
# 20070507 HDF5 --enable-cxx conflicts with --enable-parallel
# 20070507 HDF5 --enable-parallel requires parallel filesystem
# ./configure --prefix=${HDF5_ROOT} --enable-fortran --enable-parallel
make > hdf5.make.foo 2>&1
# make check > hdf5.check.foo 2>&1
scp hdf5.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install

# Do same for netCDF4
cd ${DATA}/tmp
/bin/rm -r -f ${DATA}/tmp/netcdf-4.2-*rc*
sudo /bin/rm -r -f ${NETCDF4_ROOT}/include/netcdf.* ${NETCDF4_ROOT}/lib/libnetcdf.* 
tar xzvf netcdf-4.2.1-rc1.tar.gz
cd ${DATA}/tmp/netcdf-4.2.1-rc1
make distclean
# NB: --enable-cxx-4 enables new netCDF4 C++ API
# NB: --enable-hdf4 enables reading HDF4 files (created with SD (Scientific Data) API) through netCDF4 API. NB: requires separately building HDF4 and libmfhdf.a
# NB: --enable-logging allows HDF error message to print
# NB: --enable-separate-fortran builds libnetcdff.a (default with shared libraries)
# NB: --enable-shared builds shared libraries
# NB: --enable-v2 enables the version 2 interface used by netcdf-perl
# NB: --with-libcf builds libcf.a
# NB: --with-udunits builds libudunits2.a
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local --enable-shared --enable-dap --disable-hdf4 --enable-logging --enable-netcdf4 --enable-v2 > netcdf.configure.foo 2>&1
make > netcdf.make.foo 2>&1
mv -f config.log netcdf.config.log.foo
make check > netcdf.check.foo 2>&1
scp netcdf.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-4.2.1-rc1/libsrc/.libs/libnetcdf3.a ${NETCDF4_ROOT}/lib/libnetcdf3.a.gcc
sudo cp ${DATA}/tmp/netcdf-4.2.1-rc1/libsrc4/.libs/libnetcdf4.a ${NETCDF4_ROOT}/lib/libnetcdf4.a.gcc
#sudo cp ${DATA}/tmp/netcdf-4.2.1-rc1/f90/typesizes.mod ${NETCDF4_ROOT}/include/typesizes.mod.gfortran
#sudo cp ${DATA}/tmp/netcdf-4.2.1-rc1/f90/netcdf.mod ${NETCDF4_ROOT}/include/netcdf.mod.gfortran
make clean
exit # Return to previous shell level
# Output saved to:
http://dust.ess.uci.edu/tmp/netcdf.check.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.configure.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.make.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.config.log.x86_64-unknown-linux-gnu.foo
#***********************************************************************
# 20120621: roulee.ess.uci.edu x86_64/EMT64 Debian Ubuntu Precise Pangolin gcc/gfortran 4.6.3 netcdf-4-daily
#***********************************************************************

#***********************************************************************      
# 20120719: roulee.ess.uci.edu x86_64/EMT64 Debian Ubuntu Precise Pangolin gcc/gfortran 4.6.3 netcdf-4-daily
# NB: Works! New default
#***********************************************************************
sudo aptitude install antlr bison doxygen flex gcc g++ gsl-bin libgsl0-dev libnetcdf6 libnetcdf-dev libcurl4-gnutls-dev libexpat1-dev libxml2-dev netcdf-bin udunits-bin libudunits2-0 libudunits2-dev # Install netCDF prequisites
cd ${DATA}/tmp
/bin/rm -r ${DATA}/tmp/hdf5-1.8.9*
wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/hdf5-1.8.9.tar.gz
/bin/rm netcdf-4-daily.tar.gz
# Instead of getting latest version get fixed, known-to-work version
# wget -c http://www.unidata.ucar.edu/downloads/netcdf/ftp/netcdf-4.2.1.tar.gz
# wget -c http://www.unidata.ucar.edu/downloads/netcdf/ftp/netcdf-fortran-4.2.tar.gz
# wget -c http://www.unidata.ucar.edu/downloads/netcdf/ftp/netcdf-cxx4-4.2.tar.gz
# scp netcdf-4-daily.tar.gz dust.ess.uci.edu:/data/zender/tmp
rsync dust.ess.uci.edu:/data/zender/tmp/netcdf-4-daily.tar.gz .
tar xvzf hdf5-1.8.9.tar.gz
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.8.9
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
# NB: x86_64 compilations require -fPIC -m64 flags to avoid errors on shared libraries that link to libnetcdf, e.g., libnetcdf-perl: "/usr/bin/ld: /usr/local/lib/libnetcdf.a(putget.o): relocation R_X86_64_32S against `a local symbol' can not be used when making a shared object; recompile with -fPIC"
export CC='gcc'
export CFLAGS='-fPIC -m64'
export CPPFLAGS=''
export CXX='g++'
export CXXFLAGS='-fPIC -m64'
export FC='gfortran'
export F77='gfortran'
export F90='gfortran'
export FCFLAGS=''
export FFLAGS=''
export F90FLAGS=''
export LDFLAGS='-L/usr/local/lib'
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.8.9/hdf5
./configure --prefix=${HDF5_ROOT} --enable-cxx --enable-fortran > hdf5.configure.foo 2>&1
# 20070507 HDF5 --enable-cxx conflicts with --enable-parallel
# 20070507 HDF5 --enable-parallel requires parallel filesystem
# ./configure --prefix=${HDF5_ROOT} --enable-fortran --enable-parallel
make > hdf5.make.foo 2>&1
# make check > hdf5.check.foo 2>&1
scp hdf5.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install

# Do same for netCDF4 Fortran
cd ${DATA}/tmp
/bin/rm -r -f ${DATA}/tmp/netcdf-fortran-4.2
sudo /bin/rm -f ${NETCDF4_ROOT}/include/netcdf.mod ${NETCDF4_ROOT}/lib/libnetcdff.* 
tar xvzf netcdf-fortran-4.2.tar.gz
cd ${DATA}/tmp/netcdf-fortran-4.2
make distclean
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdff.configure.foo 2>&1
make > netcdff.make.foo 2>&1
mv -f config.log netcdff.config.log.foo
make check > netcdff.check.foo 2>&1
scp netcdff.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install
sudo cp ${DATA}/tmp/netcdf-fortran-4.2/f90/.libs/libnetcdff90.a ${NETCDF4_ROOT}/lib/libnetcdff90.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran-4.2/fortran/.libs/libnetcdff.a ${NETCDF4_ROOT}/lib/libnetcdff.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran-4.2/f90/typesizes.mod ${NETCDF4_ROOT}/include/typesizes.mod.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran-4.2/f90/netcdf.mod ${NETCDF4_ROOT}/include/netcdf.mod.gfortran
make clean

# Do same for netCDF4 C
cd ${DATA}/tmp
/bin/rm -r -f ${DATA}/tmp/netcdf-4.2.1-*rc*
sudo /bin/rm -r -f ${NETCDF4_ROOT}/include/netcdf.* ${NETCDF4_ROOT}/lib/libnetcdf.* 
tar xzvf netcdf-4.2.1.tar.gz
cd ${DATA}/tmp/netcdf-4.2.1
make distclean
# NB: --enable-cxx-4 enables new netCDF4 C++ API
# NB: --enable-hdf4 enables reading HDF4 files (created with SD (Scientific Data) API) through netCDF4 API. NB: requires separately building HDF4 and libmfhdf.a
# NB: --enable-logging allows HDF error message to print
# NB: --enable-separate-fortran builds libnetcdff.a (default with shared libraries)
# NB: --enable-shared builds shared libraries
# NB: --enable-v2 enables the version 2 interface used by netcdf-perl
# NB: --with-libcf builds libcf.a
# NB: --with-udunits builds libudunits2.a
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local --enable-shared --enable-dap --disable-hdf4 --enable-logging --enable-netcdf4 --enable-v2 > netcdf.configure.foo 2>&1
make > netcdf.make.foo 2>&1
mv -f config.log netcdf.config.log.foo
make check > netcdf.check.foo 2>&1
scp netcdf.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-4.2.1/libsrc/.libs/libnetcdf3.a ${NETCDF4_ROOT}/lib/libnetcdf3.a.gcc
sudo cp ${DATA}/tmp/netcdf-4.2.1/libsrc4/.libs/libnetcdf4.a ${NETCDF4_ROOT}/lib/libnetcdf4.a.gcc
#sudo cp ${DATA}/tmp/netcdf-4.2.1/f90/typesizes.mod ${NETCDF4_ROOT}/include/typesizes.mod.gfortran
#sudo cp ${DATA}/tmp/netcdf-4.2.1/f90/netcdf.mod ${NETCDF4_ROOT}/include/netcdf.mod.gfortran
make clean
exit # Return to previous shell level
# Output saved to:
http://dust.ess.uci.edu/tmp/netcdf.check.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.configure.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.make.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.config.log.x86_64-unknown-linux-gnu.foo
#***********************************************************************
# 20120719: roulee.ess.uci.edu x86_64/EMT64 Debian Ubuntu Precise Pangolin gcc/gfortran 4.6.3 netcdf-4-daily
#***********************************************************************

#***********************************************************************      
# 20130208: roulee.ess.uci.edu x86_64/EMT64 Debian Ubuntu Quantal Quetzal gcc/gfortran 4.7.2 netcdf-4-daily
# NB: Works! New default
#***********************************************************************
sudo aptitude install antlr bison doxygen flex gcc g++ gsl-bin libgsl0-dev libnetcdf6 libnetcdf-dev libcurl4-gnutls-dev libexpat1-dev libxml2-dev netcdf-bin udunits-bin libudunits2-0 libudunits2-dev # Install netCDF prequisites
cd ${DATA}/tmp
/bin/rm -r -f ${DATA}/tmp/hdf5-1.8.9*
# aptitude install libhdf4-alt-dev
wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/hdf5-1.8.9.tar.gz
/bin/rm netcdf-4-daily.tar.gz
# Instead of getting latest version get fixed, known-to-work version
# wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/snapshot/netcdf-4-daily.tar.gz
# wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/snapshot/netcdf-fortran-4.4-daily.tar.gz
# wget -c http://www.unidata.ucar.edu/downloads/netcdf/ftp/netcdf-4.2.1.tar.gz
# wget -c http://www.unidata.ucar.edu/downloads/netcdf/ftp/netcdf-fortran-4.2.tar.gz
# wget -c http://www.unidata.ucar.edu/downloads/netcdf/ftp/netcdf-cxx4-4.2.tar.gz
# scp netcdf-4-daily.tar.gz dust.ess.uci.edu:/data/zender/tmp
rsync dust.ess.uci.edu:/data/zender/tmp/netcdf-4-daily.tar.gz .
tar xvzf hdf5-1.8.9.tar.gz
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.8.9
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
# NB: x86_64 compilations require -fPIC -m64 flags to avoid errors on shared libraries that link to libnetcdf, e.g., libnetcdf-perl: "/usr/bin/ld: /usr/local/lib/libnetcdf.a(putget.o): relocation R_X86_64_32S against `a local symbol' can not be used when making a shared object; recompile with -fPIC"
export CC='gcc'
export CFLAGS='-fPIC -m64'
export CPPFLAGS=''
export CXX='g++'
export CXXFLAGS='-fPIC -m64'
export FC='gfortran'
export F77='gfortran'
export F90='gfortran'
export FCFLAGS=''
export FFLAGS=''
export F90FLAGS=''
export LDFLAGS='-L/usr/local/lib'
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.8.9/hdf5
./configure --prefix=${HDF5_ROOT} --enable-cxx --enable-fortran > hdf5.configure.foo 2>&1
# 20070507 HDF5 --enable-cxx conflicts with --enable-parallel
# 20070507 HDF5 --enable-parallel requires parallel filesystem
# ./configure --prefix=${HDF5_ROOT} --enable-fortran --enable-parallel
make > hdf5.make.foo 2>&1
# make check > hdf5.check.foo 2>&1
scp hdf5.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install

# Do same for netCDF4 Fortran
cd ${DATA}/tmp
/bin/rm -r -f ${DATA}/tmp/netcdf-fortran-4.*
sudo /bin/rm -f ${NETCDF4_ROOT}/include/netcdf.mod ${NETCDF4_ROOT}/lib/libnetcdff.* 
tar xvzf netcdf-fortran-4.4-daily.tar.gz
cd ${DATA}/tmp/netcdf-fortran-4.4-beta3
make distclean
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdff.configure.foo 2>&1
make > netcdff.make.foo 2>&1
mv -f config.log netcdff.config.log.foo
make check > netcdff.check.foo 2>&1
scp netcdff.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install
sudo cp ${DATA}/tmp/netcdf-fortran-4.4-beta3/f90/.libs/libnetcdff90.a ${NETCDF4_ROOT}/lib/libnetcdff90.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran-4.4-beta3/fortran/.libs/libnetcdff.a ${NETCDF4_ROOT}/lib/libnetcdff.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran-4.4-beta3/f90/typesizes.mod ${NETCDF4_ROOT}/include/typesizes.mod.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran-4.4-beta3/f90/netcdf.mod ${NETCDF4_ROOT}/include/netcdf.mod.gfortran
make clean

# Do same for netCDF4 C
cd ${DATA}/tmp
/bin/rm -r -f ${DATA}/tmp/netcdf-4.2.1.*snapshot*
sudo /bin/rm -r -f ${NETCDF4_ROOT}/include/netcdf.* ${NETCDF4_ROOT}/lib/libnetcdf.* 
tar xzvf netcdf-4-daily.tar.gz
cd ${DATA}/tmp/netcdf-4.2.1.1-snapshot2013020723
make distclean
# NB: --enable-cxx-4 enables new netCDF4 C++ API
# NB: --enable-hdf4 enables reading HDF4 files (created with SD (Scientific Data) API) through netCDF4 API. NB: requires separately building HDF4 and libmfhdf.a, and header mfhdf.h must also be installed
# NB: --enable-logging allows HDF error message to print
# NB: --enable-separate-fortran builds libnetcdff.a (default with shared libraries)
# NB: --enable-shared builds shared libraries
# NB: --enable-v2 enables the version 2 interface used by netcdf-perl
# NB: --with-libcf builds libcf.a
# NB: --with-udunits builds libudunits2.a
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local --enable-shared --enable-dap --disable-hdf4 --enable-logging --enable-netcdf4 --enable-v2 > netcdf.configure.foo 2>&1
make > netcdf.make.foo 2>&1
mv -f config.log netcdf.config.log.foo
make check > netcdf.check.foo 2>&1
scp netcdf.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-4.2.1.1-snapshot2013020723/libsrc/.libs/libnetcdf3.a ${NETCDF4_ROOT}/lib/libnetcdf3.a.gcc
sudo cp ${DATA}/tmp/netcdf-4.2.1.1-snapshot2013020723/libsrc4/.libs/libnetcdf4.a ${NETCDF4_ROOT}/lib/libnetcdf4.a.gcc
#sudo cp ${DATA}/tmp/netcdf-4.2.1.1-snapshot2013020723/f90/typesizes.mod ${NETCDF4_ROOT}/include/typesizes.mod.gfortran
#sudo cp ${DATA}/tmp/netcdf-4.2.1.1-snapshot2013020723/f90/netcdf.mod ${NETCDF4_ROOT}/include/netcdf.mod.gfortran
make clean
exit # Return to previous shell level
# Output saved to:
http://dust.ess.uci.edu/tmp/netcdf.check.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.configure.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.make.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.config.log.x86_64-unknown-linux-gnu.foo
#***********************************************************************
# 20130208: roulee.ess.uci.edu x86_64/EMT64 Debian Ubuntu Quantal Quetzal gcc/gfortran 4.7.2 netcdf-4-daily
#***********************************************************************

#***********************************************************************      
# 20130311: roulee.ess.uci.edu x86_64/EMT64 Debian Ubuntu Quantal Quetzal gcc/gfortran 4.7.2 netcdf-4-daily
# NB: Works! New default
#***********************************************************************
sudo aptitude install antlr bison doxygen flex gcc g++ gsl-bin libgsl0-dev libnetcdf6 libnetcdf-dev libcurl4-gnutls-dev libexpat1-dev libxml2-dev netcdf-bin udunits-bin libudunits2-0 libudunits2-dev # Install netCDF prequisites
cd ${DATA}/tmp
/bin/rm -r -f ${DATA}/tmp/hdf5-1.8.9*
# aptitude install libhdf4-alt-dev
wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/hdf5-1.8.9.tar.gz
/bin/rm netcdf-4-daily.tar.gz
# Instead of getting latest version get fixed, known-to-work version
# wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/snapshot/netcdf-4-daily.tar.gz
# wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/snapshot/netcdf-fortran-4.4-daily.tar.gz
# wget -c http://www.unidata.ucar.edu/downloads/netcdf/ftp/netcdf-4.3.0-rc3.tar.gz
# wget -c http://www.unidata.ucar.edu/downloads/netcdf/ftp/netcdf-fortran-4.2.tar.gz
# wget -c http://www.unidata.ucar.edu/downloads/netcdf/ftp/netcdf-cxx4-4.2.tar.gz
# scp netcdf-4-daily.tar.gz dust.ess.uci.edu:/data/zender/tmp
# scp netcdf-4.3.0-rc3.tar.gz dust.ess.uci.edu:/data/zender/tmp
rsync dust.ess.uci.edu:/data/zender/tmp/netcdf-4-daily.tar.gz .
tar xvzf hdf5-1.8.9.tar.gz
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.8.9
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
# NB: x86_64 compilations require -fPIC -m64 flags to avoid errors on shared libraries that link to libnetcdf, e.g., libnetcdf-perl: "/usr/bin/ld: /usr/local/lib/libnetcdf.a(putget.o): relocation R_X86_64_32S against `a local symbol' can not be used when making a shared object; recompile with -fPIC"
export CC='gcc'
export CFLAGS='-fPIC -m64'
export CPPFLAGS=''
export CXX='g++'
export CXXFLAGS='-fPIC -m64'
export FC='gfortran'
export F77='gfortran'
export F90='gfortran'
export FCFLAGS=''
export FFLAGS=''
export F90FLAGS=''
export LDFLAGS='-L/usr/local/lib'
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.8.9/hdf5
./configure --prefix=${HDF5_ROOT} --enable-cxx --enable-fortran > hdf5.configure.foo 2>&1
# 20070507 HDF5 --enable-cxx conflicts with --enable-parallel
# 20070507 HDF5 --enable-parallel requires parallel filesystem
# ./configure --prefix=${HDF5_ROOT} --enable-fortran --enable-parallel
make > hdf5.make.foo 2>&1
# make check > hdf5.check.foo 2>&1
scp hdf5.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install

# Do same for netCDF4 Fortran
cd ${DATA}/tmp
/bin/rm -r -f ${DATA}/tmp/netcdf-fortran-4.*
sudo /bin/rm -f ${NETCDF4_ROOT}/include/netcdf.mod ${NETCDF4_ROOT}/lib/libnetcdff.* 
tar xvzf netcdf-fortran-4.4-daily.tar.gz
cd ${DATA}/tmp/netcdf-fortran-4.4-beta3
make distclean
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdff.configure.foo 2>&1
make > netcdff.make.foo 2>&1
mv -f config.log netcdff.config.log.foo
make check > netcdff.check.foo 2>&1
scp netcdff.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install
sudo cp ${DATA}/tmp/netcdf-fortran-4.4-beta3/f90/.libs/libnetcdff90.a ${NETCDF4_ROOT}/lib/libnetcdff90.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran-4.4-beta3/fortran/.libs/libnetcdff.a ${NETCDF4_ROOT}/lib/libnetcdff.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran-4.4-beta3/f90/typesizes.mod ${NETCDF4_ROOT}/include/typesizes.mod.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran-4.4-beta3/f90/netcdf.mod ${NETCDF4_ROOT}/include/netcdf.mod.gfortran
make clean

# Do same for netCDF4 C
cd ${DATA}/tmp
/bin/rm -r -f ${DATA}/tmp/netcdf-4.3.0-rc3
sudo /bin/rm -r -f ${NETCDF4_ROOT}/include/netcdf.* ${NETCDF4_ROOT}/lib/libnetcdf.* 
tar xzvf netcdf-4.3.0-rc3.tar.gz
cd ${DATA}/tmp/netcdf-4.3.0-rc3
make distclean
# NB: --enable-cxx-4 enables new netCDF4 C++ API
# NB: --enable-hdf4 enables reading HDF4 files (created with SD (Scientific Data) API) through netCDF4 API. NB: requires separately building HDF4 and libmfhdf.a, and header mfhdf.h must also be installed
# NB: --enable-logging allows HDF error message to print
# NB: --enable-separate-fortran builds libnetcdff.a (default with shared libraries)
# NB: --enable-shared builds shared libraries
# NB: --enable-v2 enables the version 2 interface used by netcdf-perl
# NB: --with-libcf builds libcf.a
# NB: --with-udunits builds libudunits2.a
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local --enable-shared --enable-dap --disable-hdf4 --enable-logging --enable-netcdf4 --enable-v2 > netcdf.configure.foo 2>&1
make > netcdf.make.foo 2>&1
mv -f config.log netcdf.config.log.foo
make check > netcdf.check.foo 2>&1
scp netcdf.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-4.3.0-rc3/libsrc/.libs/libnetcdf3.a ${NETCDF4_ROOT}/lib/libnetcdf3.a.gcc
sudo cp ${DATA}/tmp/netcdf-4.3.0-rc3/libsrc4/.libs/libnetcdf4.a ${NETCDF4_ROOT}/lib/libnetcdf4.a.gcc
#sudo cp ${DATA}/tmp/netcdf-4.3.0-rc3/f90/typesizes.mod ${NETCDF4_ROOT}/include/typesizes.mod.gfortran
#sudo cp ${DATA}/tmp/netcdf-4.3.0-rc3/f90/netcdf.mod ${NETCDF4_ROOT}/include/netcdf.mod.gfortran
make clean
exit # Return to previous shell level
# Output saved to:
http://dust.ess.uci.edu/tmp/netcdf.check.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.configure.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.make.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.config.log.x86_64-unknown-linux-gnu.foo
#***********************************************************************
# 20130311: roulee.ess.uci.edu x86_64/EMT64 Debian Ubuntu Quantal Quetzal gcc/gfortran 4.7.2 netcdf-4-daily
#***********************************************************************

#***********************************************************************      
# 20130319: roulee.ess.uci.edu x86_64/EMT64 Debian Ubuntu Quantal Quetzal gcc/gfortran 4.7.2 netcdf-4-daily
# NB: Does not yet work
#***********************************************************************
sudo aptitude install antlr bison doxygen flex gcc g++ gsl-bin libgsl0-dev libnetcdf6 libnetcdf-dev libcurl4-gnutls-dev libexpat1-dev libxml2-dev netcdf-bin udunits-bin libudunits2-0 libudunits2-dev # Install netCDF prequisites
cd ${DATA}/tmp
/bin/rm -r -f ${DATA}/tmp/hdf5-1.8.9*
# aptitude install libhdf4-alt-dev
# http://www.hdfgroup.org/ftp/HDF/HDF_Current/src/
wget -c http://www.hdfgroup.org/ftp/HDF/HDF_Current/src/hdf-4.2.9.tar.gz
# scp hdf-4.2.9.tar.gz dust.ess.uci.edu:/data/zender/tmp
# wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/hdf5-1.8.9.tar.gz
wget -c http://www.hdfgroup.org/ftp/HDF5/current/src/hdf5-1.8.10-patch1.tar.gz
# scp hdf5-1.8.10-patch1.tar.gz dust.ess.uci.edu:/data/zender/tmp
/bin/rm netcdf-4-daily.tar.gz
# Instead of getting latest version get fixed, known-to-work version
# wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/snapshot/netcdf-4-daily.tar.gz
# wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/snapshot/netcdf-fortran-4.4-daily.tar.gz
# wget -c http://www.unidata.ucar.edu/downloads/netcdf/ftp/netcdf-4.3.0-rc3.tar.gz
# wget -c http://www.unidata.ucar.edu/downloads/netcdf/ftp/netcdf-fortran-4.2.tar.gz
# wget -c http://www.unidata.ucar.edu/downloads/netcdf/ftp/netcdf-cxx4-4.2.tar.gz
# scp netcdf-4-daily.tar.gz dust.ess.uci.edu:/data/zender/tmp
# scp netcdf-4.3.0-rc3.tar.gz dust.ess.uci.edu:/data/zender/tmp
rsync dust.ess.uci.edu:/data/zender/tmp/netcdf-4-daily.tar.gz .
tar xvzf hdf5-1.8.10-patch1.tar.gz
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.8.10-patch1
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
# NB: x86_64 compilations require -fPIC -m64 flags to avoid errors on shared libraries that link to libnetcdf, e.g., libnetcdf-perl: "/usr/bin/ld: /usr/local/lib/libnetcdf.a(putget.o): relocation R_X86_64_32S against `a local symbol' can not be used when making a shared object; recompile with -fPIC"
export CC='gcc'
export CFLAGS='-fPIC -m64'
export CPPFLAGS=''
export CXX='g++'
export CXXFLAGS='-fPIC -m64'
export FC='gfortran'
export F77='gfortran'
export F90='gfortran'
export FCFLAGS=''
export FFLAGS=''
export F90FLAGS=''
export LDFLAGS='-L/usr/local/lib'
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local
export HDF5_ROOT=${NETCDF4_ROOT}
#export HDF5_ROOT=${NETCDF4_ROOT}/hdf4
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.8.10-patch1/hdf5
./configure --prefix=${HDF5_ROOT} --enable-cxx --enable-fortran > hdf5.configure.foo 2>&1
# 20070507 HDF5 --enable-cxx conflicts with --enable-parallel
# 20070507 HDF5 --enable-parallel requires parallel filesystem
# ./configure --prefix=${HDF5_ROOT} --enable-fortran --enable-parallel
mv -f config.log hdf5.config.log.foo
make > hdf5.make.foo 2>&1
# make check > hdf5.check.foo 2>&1
scp hdf5.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install

# Do same for HDF4
rsync dust.ess.uci.edu:/data/zender/tmp/hdf-4.2.9.tar.gz .
tar xvzf hdf-4.2.9.tar.gz
cd ${DATA}/tmp/hdf-4.2.9
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
# NB: x86_64 compilations require -fPIC -m64 flags to avoid errors on shared libraries that link to libnetcdf, e.g., libnetcdf-perl: "/usr/bin/ld: /usr/local/lib/libnetcdf.a(putget.o): relocation R_X86_64_32S against `a local symbol' can not be used when making a shared object; recompile with -fPIC"
export CC='gcc'
export CFLAGS='-fPIC -m64'
export CPPFLAGS=''
export CXX='g++'
export CXXFLAGS='-fPIC -m64'
export FC='gfortran'
export F77='gfortran'
export F90='gfortran'
export FCFLAGS=''
export FFLAGS=''
export F90FLAGS=''
export LDFLAGS='-L/usr/local/lib'
# Install HDF4 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local
export HDF4_ROOT=${NETCDF4_ROOT}
# HDF4 builds here unless otherwise specified
# NB: --enable-netcdf enables support for netCDF 2.3.2 API (not needed!)
./configure --prefix=${HDF4_ROOT} --disable-fortran --disable-netcdf > hdf4.configure.foo 2>&1
mv -f config.log hdf4.config.log.foo
make > hdf4.make.foo 2>&1
# make check > hdf4.check.foo 2>&1
scp hdf4.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install

# Do same for netCDF4 Fortran
cd ${DATA}/tmp
/bin/rm -r -f ${DATA}/tmp/netcdf-fortran-4.*
sudo /bin/rm -f ${NETCDF4_ROOT}/include/netcdf.mod ${NETCDF4_ROOT}/lib/libnetcdff.* 
tar xvzf netcdf-fortran-4.4-daily.tar.gz
cd ${DATA}/tmp/netcdf-fortran-4.4-beta3
make distclean
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdff.configure.foo 2>&1
make > netcdff.make.foo 2>&1
mv -f config.log netcdff.config.log.foo
make check > netcdff.check.foo 2>&1
scp netcdff.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install
sudo cp ${DATA}/tmp/netcdf-fortran-4.4-beta3/f90/.libs/libnetcdff90.a ${NETCDF4_ROOT}/lib/libnetcdff90.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran-4.4-beta3/fortran/.libs/libnetcdff.a ${NETCDF4_ROOT}/lib/libnetcdff.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran-4.4-beta3/f90/typesizes.mod ${NETCDF4_ROOT}/include/typesizes.mod.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran-4.4-beta3/f90/netcdf.mod ${NETCDF4_ROOT}/include/netcdf.mod.gfortran
make clean

# Do same for netCDF4 C
cd ${DATA}/tmp
/bin/rm -r -f ${DATA}/tmp/netcdf-4.3.0-rc3
sudo /bin/rm -r -f ${NETCDF4_ROOT}/include/netcdf.* ${NETCDF4_ROOT}/lib/libnetcdf.* 
tar xzvf netcdf-4.3.0-rc3.tar.gz
cd ${DATA}/tmp/netcdf-4.3.0-rc3
make distclean
# NB: --enable-cxx-4 enables new netCDF4 C++ API
# NB: --enable-hdf4 enables reading HDF4 files (created with SD (Scientific Data) API) through netCDF4 API. NB: requires separately building HDF4 and libmfhdf.a, and header mfhdf.h must also be installed
# NB: --enable-logging allows HDF error message to print
# NB: --enable-separate-fortran builds libnetcdff.a (default with shared libraries)
# NB: --enable-shared builds shared libraries
# NB: --enable-v2 enables the version 2 interface used by netcdf-perl
# NB: --with-libcf builds libcf.a
# NB: --with-udunits builds libudunits2.a
# http://www.unidata.ucar.edu/software/netcdf/docs/build_hdf4.html
CPPFLAGS="-I${HDF4_ROOT}/include -I${HDF5_ROOT}/include" LDFLAGS="-L${HDF4_ROOT}/lib -L${HDF5_ROOT}/lib -lmfhdf -ldf" ./configure --prefix=/usr/local --enable-shared --enable-dap --enable-hdf4 --enable-logging --enable-netcdf4 --enable-v2 > netcdf.configure.foo 2>&1
CPPFLAGS="-I${HDF4_ROOT}/include -I${HDF5_ROOT}/include" LDFLAGS="-L${HDF4_ROOT}/lib -L${HDF5_ROOT}/lib -lmfhdf -ldf" ./configure --prefix=${HDF4_ROOT} --enable-shared --enable-hdf4 > netcdf.configure.foo 2>&1
make > netcdf.make.foo 2>&1
mv -f config.log netcdf.config.log.foo
make check > netcdf.check.foo 2>&1
scp netcdf.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-4.3.0-rc3/libsrc/.libs/libnetcdf3.a ${NETCDF4_ROOT}/lib/libnetcdf3.a.gcc
sudo cp ${DATA}/tmp/netcdf-4.3.0-rc3/libsrc4/.libs/libnetcdf4.a ${NETCDF4_ROOT}/lib/libnetcdf4.a.gcc
#sudo cp ${DATA}/tmp/netcdf-4.3.0-rc3/f90/typesizes.mod ${NETCDF4_ROOT}/include/typesizes.mod.gfortran
#sudo cp ${DATA}/tmp/netcdf-4.3.0-rc3/f90/netcdf.mod ${NETCDF4_ROOT}/include/netcdf.mod.gfortran
make clean
exit # Return to previous shell level
# Output saved to:
http://dust.ess.uci.edu/tmp/netcdf.check.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.configure.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.make.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.config.log.x86_64-unknown-linux-gnu.foo
#***********************************************************************
# 20130319: roulee.ess.uci.edu x86_64/EMT64 Debian Ubuntu Quantal Quetzal gcc/gfortran 4.7.2 netcdf-4-daily
#***********************************************************************

#***********************************************************************      
# 20130428: roulee.ess.uci.edu x86_64/EMT64 Debian Ubuntu Raring Ringtail gcc/gfortran 4.7.3 netcdf-4.3.0-rc4
# NB: Works! New default
#***********************************************************************
sudo aptitude install antlr bison doxygen flex gcc g++ gsl-bin libgsl0-dev libnetcdf6 libnetcdf-dev libcurl4-gnutls-dev libexpat1-dev libxml2-dev netcdf-bin udunits-bin libudunits2-0 libudunits2-dev # Install netCDF prequisites
cd ${DATA}/tmp
/bin/rm -r -f ${DATA}/tmp/hdf5-1.8.9*
# aptitude install libhdf4-alt-dev
wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/hdf5-1.8.9.tar.gz
/bin/rm netcdf-4.3.0-rc4.tar.gz
# Instead of getting latest version get fixed, known-to-work version
# wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/snapshot/netcdf-4-daily.tar.gz
# wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/snapshot/netcdf-fortran-4.4-daily.tar.gz
# wget -c http://www.unidata.ucar.edu/downloads/netcdf/ftp/netcdf-4.3.0-rc4.tar.gz
# wget -c http://www.unidata.ucar.edu/downloads/netcdf/ftp/netcdf-fortran-4.2.tar.gz
# wget -c http://www.unidata.ucar.edu/downloads/netcdf/ftp/netcdf-cxx4-4.2.tar.gz
# scp netcdf-4-daily.tar.gz dust.ess.uci.edu:/data/zender/tmp
# scp netcdf-4.3.0-rc4.tar.gz dust.ess.uci.edu:/data/zender/tmp
rsync dust.ess.uci.edu:/data/zender/tmp/netcdf-4.3.0-rc4.tar.gz ${DATA}/tmp
tar xvzf hdf5-1.8.9.tar.gz
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.8.9
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
# NB: x86_64 compilations require -fPIC -m64 flags to avoid errors on shared libraries that link to libnetcdf, e.g., libnetcdf-perl: "/usr/bin/ld: /usr/local/lib/libnetcdf.a(putget.o): relocation R_X86_64_32S against `a local symbol' can not be used when making a shared object; recompile with -fPIC"
export CC='gcc'
export CFLAGS='-fPIC -m64'
export CPPFLAGS=''
export CXX='g++'
export CXXFLAGS='-fPIC -m64'
export FC='gfortran'
export F77='gfortran'
export F90='gfortran'
export FCFLAGS=''
export FFLAGS=''
export F90FLAGS=''
export LDFLAGS='-L/usr/local/lib'
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.8.9/hdf5
./configure --prefix=${HDF5_ROOT} --enable-cxx --enable-fortran > hdf5.configure.foo 2>&1
# 20070507 HDF5 --enable-cxx conflicts with --enable-parallel
# 20070507 HDF5 --enable-parallel requires parallel filesystem
# ./configure --prefix=${HDF5_ROOT} --enable-fortran --enable-parallel
make > hdf5.make.foo 2>&1
# make check > hdf5.check.foo 2>&1
scp hdf5.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install

# Do same for netCDF4 Fortran
cd ${DATA}/tmp
/bin/rm -r -f ${DATA}/tmp/netcdf-fortran-4.*
sudo /bin/rm -f ${NETCDF4_ROOT}/include/netcdf.mod ${NETCDF4_ROOT}/lib/libnetcdff.* 
tar xvzf netcdf-fortran-4.4-daily.tar.gz
cd ${DATA}/tmp/netcdf-fortran-4.4-beta3
make distclean
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdff.configure.foo 2>&1
make > netcdff.make.foo 2>&1
mv -f config.log netcdff.config.log.foo
make check > netcdff.check.foo 2>&1
scp netcdff.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install
sudo cp ${DATA}/tmp/netcdf-fortran-4.4-beta3/f90/.libs/libnetcdff90.a ${NETCDF4_ROOT}/lib/libnetcdff90.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran-4.4-beta3/fortran/.libs/libnetcdff.a ${NETCDF4_ROOT}/lib/libnetcdff.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran-4.4-beta3/f90/typesizes.mod ${NETCDF4_ROOT}/include/typesizes.mod.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran-4.4-beta3/f90/netcdf.mod ${NETCDF4_ROOT}/include/netcdf.mod.gfortran
make clean

# Do same for netCDF4 C
cd ${DATA}/tmp
/bin/rm -r -f ${DATA}/tmp/netcdf-4.3.0-rc4
sudo /bin/rm -r -f ${NETCDF4_ROOT}/include/netcdf.* ${NETCDF4_ROOT}/lib/libnetcdf.* 
tar xzvf netcdf-4.3.0-rc4.tar.gz
cd ${DATA}/tmp/netcdf-4.3.0-rc4
make distclean
# NB: --enable-cxx-4 enables new netCDF4 C++ API
# NB: --enable-hdf4 enables reading HDF4 files (created with SD (Scientific Data) API) through netCDF4 API. NB: requires separately building HDF4 and libmfhdf.a, and header mfhdf.h must also be installed
# NB: --enable-logging allows HDF error message to print
# NB: --enable-separate-fortran builds libnetcdff.a (default with shared libraries)
# NB: --enable-shared builds shared libraries
# NB: --enable-v2 enables the version 2 interface used by netcdf-perl
# NB: --with-libcf builds libcf.a
# NB: --with-udunits builds libudunits2.a
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local --enable-shared --enable-dap --disable-hdf4 --enable-logging --enable-netcdf4 --enable-v2 > netcdf.configure.foo 2>&1
make > netcdf.make.foo 2>&1
mv -f config.log netcdf.config.log.foo
make check > netcdf.check.foo 2>&1
scp netcdf.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-4.3.0-rc4/libsrc/.libs/libnetcdf3.a ${NETCDF4_ROOT}/lib/libnetcdf3.a.gcc
sudo cp ${DATA}/tmp/netcdf-4.3.0-rc4/libsrc4/.libs/libnetcdf4.a ${NETCDF4_ROOT}/lib/libnetcdf4.a.gcc
#sudo cp ${DATA}/tmp/netcdf-4.3.0-rc4/f90/typesizes.mod ${NETCDF4_ROOT}/include/typesizes.mod.gfortran
#sudo cp ${DATA}/tmp/netcdf-4.3.0-rc4/f90/netcdf.mod ${NETCDF4_ROOT}/include/netcdf.mod.gfortran
make clean
exit # Return to previous shell level
# Output saved to:
http://dust.ess.uci.edu/tmp/netcdf.check.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.configure.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.make.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.config.log.x86_64-unknown-linux-gnu.foo
#***********************************************************************
# 20130428: roulee.ess.uci.edu x86_64/EMT64 Debian Ubuntu Raring Ringtail gcc/gfortran 4.7.3 netcdf-4.3.0-rc4
#***********************************************************************

#***********************************************************************      
# 20130504: roulee.ess.uci.edu x86_64/EMT64 Debian Ubuntu Raring Ringtail gcc/gfortran 4.7.3 netcdf-4.3.0
#***********************************************************************
sudo aptitude install antlr bison doxygen flex gcc g++ gsl-bin libgsl0-dev libnetcdf6 libnetcdf-dev libcurl4-gnutls-dev libexpat1-dev libxml2-dev netcdf-bin udunits-bin libudunits2-0 libudunits2-dev # Install netCDF prequisites
cd ${DATA}/tmp
/bin/rm -r -f ${DATA}/tmp/hdf5-1.8.9*
# aptitude install libhdf4-alt-dev
wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/hdf5-1.8.9.tar.gz
/bin/rm netcdf-4.3.0.tar.gz
# Instead of getting latest version get fixed, known-to-work version
# wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/snapshot/netcdf-4-daily.tar.gz
# wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/snapshot/netcdf-fortran-4.4-daily.tar.gz
# wget -c http://www.unidata.ucar.edu/downloads/netcdf/ftp/netcdf-4.3.0.tar.gz
# wget -c http://www.unidata.ucar.edu/downloads/netcdf/ftp/netcdf-fortran-4.2.tar.gz
# wget -c http://www.unidata.ucar.edu/downloads/netcdf/ftp/netcdf-cxx4-4.2.tar.gz
# scp netcdf-4-daily.tar.gz dust.ess.uci.edu:/data/zender/tmp
# scp netcdf-4.3.0.tar.gz dust.ess.uci.edu:/data/zender/tmp
rsync dust.ess.uci.edu:/data/zender/tmp/netcdf-4.3.0.tar.gz ${DATA}/tmp
tar xvzf hdf5-1.8.9.tar.gz
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.8.9
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
# NB: x86_64 compilations require -fPIC -m64 flags to avoid errors on shared libraries that link to libnetcdf, e.g., libnetcdf-perl: "/usr/bin/ld: /usr/local/lib/libnetcdf.a(putget.o): relocation R_X86_64_32S against `a local symbol' can not be used when making a shared object; recompile with -fPIC"
export CC='gcc'
export CFLAGS='-fPIC -m64'
export CPPFLAGS=''
export CXX='g++'
export CXXFLAGS='-fPIC -m64'
export FC='gfortran'
export F77='gfortran'
export F90='gfortran'
export FCFLAGS=''
export FFLAGS=''
export F90FLAGS=''
export LDFLAGS='-L/usr/local/lib'
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.8.9/hdf5
./configure --prefix=${HDF5_ROOT} --enable-cxx --enable-fortran > hdf5.configure.foo 2>&1
# 20070507 HDF5 --enable-cxx conflicts with --enable-parallel
# 20070507 HDF5 --enable-parallel requires parallel filesystem
# ./configure --prefix=${HDF5_ROOT} --enable-fortran --enable-parallel
make > hdf5.make.foo 2>&1
# make check > hdf5.check.foo 2>&1
scp hdf5.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install

# Do same for netCDF4 Fortran
cd ${DATA}/tmp
/bin/rm -r -f ${DATA}/tmp/netcdf-fortran-4.*
sudo /bin/rm -f ${NETCDF4_ROOT}/include/netcdf.mod ${NETCDF4_ROOT}/lib/libnetcdff.* 
tar xvzf netcdf-fortran-4.4-daily.tar.gz
cd ${DATA}/tmp/netcdf-fortran-4.4-beta3
make distclean
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdff.configure.foo 2>&1
make > netcdff.make.foo 2>&1
mv -f config.log netcdff.config.log.foo
make check > netcdff.check.foo 2>&1
scp netcdff.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install
sudo cp ${DATA}/tmp/netcdf-fortran-4.4-beta3/fortran/.libs/libnetcdff90.a ${NETCDF4_ROOT}/lib/libnetcdff90.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran-4.4-beta3/fortran/.libs/libnetcdff.a ${NETCDF4_ROOT}/lib/libnetcdff.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran-4.4-beta3/fortran/typesizes.mod ${NETCDF4_ROOT}/include/typesizes.mod.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran-4.4-beta3/fortran/netcdf.mod ${NETCDF4_ROOT}/include/netcdf.mod.gfortran
make clean

# Do same for netCDF4 C
cd ${DATA}/tmp
/bin/rm -r -f ${DATA}/tmp/netcdf-4.3.0
sudo /bin/rm -r -f ${NETCDF4_ROOT}/include/netcdf.* ${NETCDF4_ROOT}/lib/libnetcdf.* 
tar xzvf netcdf-4.3.0.tar.gz
cd ${DATA}/tmp/netcdf-4.3.0
make distclean
# NB: --enable-cxx-4 enables new netCDF4 C++ API
# NB: --enable-hdf4 enables reading HDF4 files (created with SD (Scientific Data) API) through netCDF4 API. NB: requires separately building HDF4 and libmfhdf.a, and header mfhdf.h must also be installed
# NB: --enable-logging allows HDF error message to print
# NB: --enable-separate-fortran builds libnetcdff.a (default with shared libraries)
# NB: --enable-shared builds shared libraries
# NB: --enable-v2 enables the version 2 interface used by netcdf-perl
# NB: --with-libcf builds libcf.a
# NB: --with-udunits builds libudunits2.a
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local --enable-shared --enable-dap --disable-hdf4 --enable-logging --enable-netcdf4 --enable-v2 > netcdf.configure.foo 2>&1
make > netcdf.make.foo 2>&1
mv -f config.log netcdf.config.log.foo
make check > netcdf.check.foo 2>&1
scp netcdf.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-4.3.0/libsrc/.libs/libnetcdf3.a ${NETCDF4_ROOT}/lib/libnetcdf3.a.gcc
sudo cp ${DATA}/tmp/netcdf-4.3.0/libsrc4/.libs/libnetcdf4.a ${NETCDF4_ROOT}/lib/libnetcdf4.a.gcc
make clean
exit # Return to previous shell level
# Output saved to:
http://dust.ess.uci.edu/tmp/netcdf.check.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.configure.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.make.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.config.log.x86_64-unknown-linux-gnu.foo
#***********************************************************************
# 20130504: roulee.ess.uci.edu x86_64/EMT64 Debian Ubuntu Raring Ringtail gcc/gfortran 4.7.3 netcdf-4.3.0
#***********************************************************************

#***********************************************************************      
# 20130607: roulee.ess.uci.edu x86_64/EMT64 Fedora Core 18 gcc/gfortran 4.7.2 netcdf-4.3.0
#***********************************************************************
sudo aptitude install antlr bison doxygen flex gcc g++ gsl-bin libgsl0-dev libnetcdf6 libnetcdf-dev libcurl4-gnutls-dev libexpat1-dev libxml2-dev netcdf-bin udunits-bin libudunits2-0 libudunits2-dev # Install netCDF prequisites
sudo yum install antlr antlr-C++ curl-devel libxml2-devel bison flex gcc gcc-c++ gcc-gfortran gsl gsl-devel librx librx-devel udunits2 udunits2-devel
cd ${DATA}/tmp
/bin/rm -r -f ${DATA}/tmp/hdf5-1.8.9*
# aptitude install libhdf4-alt-dev
wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/hdf5-1.8.9.tar.gz
/bin/rm netcdf-4.3.0.tar.gz
# Instead of getting latest version get fixed, known-to-work version
# wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/snapshot/netcdf-4-daily.tar.gz
# wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/snapshot/netcdf-fortran-4.4-daily.tar.gz
# wget -c http://www.unidata.ucar.edu/downloads/netcdf/ftp/netcdf-4.3.0.tar.gz
# wget -c http://www.unidata.ucar.edu/downloads/netcdf/ftp/netcdf-cxx4-4.2.tar.gz
# scp netcdf-4-daily.tar.gz dust.ess.uci.edu:/data/zender/tmp
# scp netcdf-4.3.0.tar.gz dust.ess.uci.edu:/data/zender/tmp
rsync dust.ess.uci.edu:/data/zender/tmp/netcdf-4.3.0.tar.gz ${DATA}/tmp
tar xvzf hdf5-1.8.9.tar.gz
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.8.9
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
# NB: x86_64 compilations require -fPIC -m64 flags to avoid errors on shared libraries that link to libnetcdf, e.g., libnetcdf-perl: "/usr/bin/ld: /usr/local/lib/libnetcdf.a(putget.o): relocation R_X86_64_32S against `a local symbol' can not be used when making a shared object; recompile with -fPIC"
export CC='gcc'
export CFLAGS='-fPIC -m64'
export CPPFLAGS=''
export CXX='g++'
export CXXFLAGS='-fPIC -m64'
export FC='gfortran'
export F77='gfortran'
export F90='gfortran'
export FCFLAGS=''
export FFLAGS=''
export F90FLAGS=''
export LDFLAGS='-L/usr/local/lib'
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.8.9/hdf5
./configure --prefix=${HDF5_ROOT} --enable-cxx --enable-fortran > hdf5.configure.foo 2>&1
# 20070507 HDF5 --enable-cxx conflicts with --enable-parallel
# 20070507 HDF5 --enable-parallel requires parallel filesystem
# ./configure --prefix=${HDF5_ROOT} --enable-fortran --enable-parallel
make > hdf5.make.foo 2>&1
# make check > hdf5.check.foo 2>&1
scp hdf5.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install

# Do same for netCDF4 Fortran
cd ${DATA}/tmp
wget -c
/bin/rm -r -f ${DATA}/tmp/netcdf-fortran-4.*
sudo /bin/rm -f ${NETCDF4_ROOT}/include/netcdf.mod ${NETCDF4_ROOT}/lib/libnetcdff.* 
ftp://ftp.unidata.ucar.edu/pub/netcdf/snapshot/netcdf-fortran-4.4-daily.tar.gz
tar xvzf netcdf-fortran-4.4-daily.tar.gz
cd ${DATA}/tmp/netcdf-fortran-4.4-beta3
make distclean
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdff.configure.foo 2>&1
make > netcdff.make.foo 2>&1
mv -f config.log netcdff.config.log.foo
make check > netcdff.check.foo 2>&1
scp netcdff.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install
sudo cp ${DATA}/tmp/netcdf-fortran-4.4-beta3/fortran/.libs/libnetcdff90.a ${NETCDF4_ROOT}/lib/libnetcdff90.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran-4.4-beta3/fortran/.libs/libnetcdff.a ${NETCDF4_ROOT}/lib/libnetcdff.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran-4.4-beta3/fortran/typesizes.mod ${NETCDF4_ROOT}/include/typesizes.mod.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran-4.4-beta3/fortran/netcdf.mod ${NETCDF4_ROOT}/include/netcdf.mod.gfortran
make clean

# Do same for netCDF4 C
cd ${DATA}/tmp
/bin/rm -r -f ${DATA}/tmp/netcdf-4.3.0
sudo /bin/rm -r -f ${NETCDF4_ROOT}/include/netcdf.* ${NETCDF4_ROOT}/lib/libnetcdf.* 
tar xzvf netcdf-4.3.0.tar.gz
cd ${DATA}/tmp/netcdf-4.3.0
make distclean
# NB: --enable-cxx-4 enables new netCDF4 C++ API
# NB: --enable-hdf4 enables reading HDF4 files (created with SD (Scientific Data) API) through netCDF4 API. NB: requires separately building HDF4 and libmfhdf.a, and header mfhdf.h must also be installed
# NB: --enable-logging allows HDF error message to print
# NB: --enable-separate-fortran builds libnetcdff.a (default with shared libraries)
# NB: --enable-shared builds shared libraries
# NB: --enable-v2 enables the version 2 interface used by netcdf-perl
# NB: --with-libcf builds libcf.a
# NB: --with-udunits builds libudunits2.a
# LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local --enable-shared --enable-dap --disable-hdf4 --enable-logging --enable-netcdf4 --enable-v2 > netcdf.configure.foo 2>&1
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local --enable-shared --enable-dap --disable-hdf4 --enable-logging --enable-netcdf4 --enable-v2 --with-libcf --with-udunits > netcdf.configure.foo 2>&1
make > netcdf.make.foo 2>&1
mv -f config.log netcdf.config.log.foo
make check > netcdf.check.foo 2>&1
scp netcdf.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-4.3.0/libsrc/.libs/libnetcdf3.a ${NETCDF4_ROOT}/lib/libnetcdf3.a.gcc
sudo cp ${DATA}/tmp/netcdf-4.3.0/libsrc4/.libs/libnetcdf4.a ${NETCDF4_ROOT}/lib/libnetcdf4.a.gcc
make clean
exit # Return to previous shell level
# Output saved to:
http://dust.ess.uci.edu/tmp/netcdf.check.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.configure.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.make.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.config.log.x86_64-unknown-linux-gnu.foo
#***********************************************************************
# 20130607: roulee.ess.uci.edu x86_64/EMT64 Fedora Core 18 gcc/gfortran 4.7.2 netcdf-4.3.0
#***********************************************************************

#***********************************************************************
# 20130722: roulee.ess.uci.edu x86_64/EMT64 Fedora Core 19 gcc/gfortran 4.8.1 netcdf-4.3.0+ svn
#***********************************************************************
sudo aptitude install antlr bison doxygen flex gcc g++ gsl-bin libgsl0-dev libnetcdf6 libnetcdf-dev libcurl4-gnutls-dev libexpat1-dev libxml2-dev netcdf-bin udunits-bin libudunits2-0 libudunits2-dev # Install netCDF prequisites
sudo yum install antlr antlr-C++ curl-devel libxml2-devel bison flex gcc gcc-c++ gcc-gfortran gsl gsl-devel librx librx-devel udunits2 udunits2-devel
cd ${DATA}/tmp
# svn co https://sub.unidata.ucar.edu/netcdf/trunk;mv trunk netcdf;/bin/cp ~/nco/autobld/ltmain.sh netcdf
cd ${DATA}/tmp/netcdf
/bin/rm -r -f ${DATA}/tmp/hdf5-1.8.9*
# aptitude install libhdf4-alt-dev
wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/hdf5-1.8.9.tar.gz
tar xvzf hdf5-1.8.9.tar.gz
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.8.9
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
# NB: x86_64 compilations require -fPIC -m64 flags to avoid errors on shared libraries that link to libnetcdf, e.g., libnetcdf-perl: "/usr/bin/ld: /usr/local/lib/libnetcdf.a(putget.o): relocation R_X86_64_32S against `a local symbol' can not be used when making a shared object; recompile with -fPIC"
export CC='gcc'
export CFLAGS='-fPIC -m64'
export CPPFLAGS=''
export CXX='g++'
export CXXFLAGS='-fPIC -m64'
export FC='gfortran'
export F77='gfortran'
export F90='gfortran'
export FCFLAGS=''
export FFLAGS=''
export F90FLAGS=''
export LDFLAGS='-L/usr/local/lib'
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.8.9/hdf5
./configure --prefix=${HDF5_ROOT} --enable-cxx --enable-fortran > hdf5.configure.foo 2>&1
# 20070507 HDF5 --enable-cxx conflicts with --enable-parallel
# 20070507 HDF5 --enable-parallel requires parallel filesystem
# ./configure --prefix=${HDF5_ROOT} --enable-fortran --enable-parallel
make > hdf5.make.foo 2>&1
# make check > hdf5.check.foo 2>&1
scp hdf5.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install

# Do same for netCDF4 Fortran
cd ${DATA}/tmp
wget -c
/bin/rm -r -f ${DATA}/tmp/netcdf-fortran-4.*
sudo /bin/rm -f ${NETCDF4_ROOT}/include/netcdf.mod ${NETCDF4_ROOT}/lib/libnetcdff.* 
ftp://ftp.unidata.ucar.edu/pub/netcdf/snapshot/netcdf-fortran-4.4-daily.tar.gz
tar xvzf netcdf-fortran-4.4-daily.tar.gz
cd ${DATA}/tmp/netcdf-fortran-4.4-beta3
make distclean
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdff.configure.foo 2>&1
make > netcdff.make.foo 2>&1
mv -f config.log netcdff.config.log.foo
make check > netcdff.check.foo 2>&1
scp netcdff.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install
sudo cp ${DATA}/tmp/netcdf-fortran-4.4-beta3/fortran/.libs/libnetcdff90.a ${NETCDF4_ROOT}/lib/libnetcdff90.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran-4.4-beta3/fortran/.libs/libnetcdff.a ${NETCDF4_ROOT}/lib/libnetcdff.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran-4.4-beta3/fortran/typesizes.mod ${NETCDF4_ROOT}/include/typesizes.mod.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran-4.4-beta3/fortran/netcdf.mod ${NETCDF4_ROOT}/include/netcdf.mod.gfortran
make clean

# Do same for netCDF4 C
sudo /bin/rm -r -f ${NETCDF4_ROOT}/include/netcdf.* ${NETCDF4_ROOT}/lib/libnetcdf.* 
cd ${DATA}/tmp/netcdf
make distclean
aclocal;autoheader;automake --add-missing;autoconf
# NB: --enable-cxx-4 enables new netCDF4 C++ API
# NB: --enable-hdf4 enables reading HDF4 files (created with SD (Scientific Data) API) through netCDF4 API. NB: requires separately building HDF4 and libmfhdf.a, and header mfhdf.h must also be installed
# NB: --enable-logging allows HDF error message to print
# NB: --enable-separate-fortran builds libnetcdff.a (default with shared libraries)
# NB: --enable-shared builds shared libraries
# NB: --enable-v2 enables the version 2 interface used by netcdf-perl
# NB: --with-libcf builds libcf.a (apparently deprecated ~201307)
# NB: --with-udunits builds libudunits2.a (apparently deprecated ~201307)
# LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local --enable-shared --enable-dap --disable-hdf4 --enable-logging --enable-netcdf4 --enable-v2 > netcdf.configure.foo 2>&1
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local --enable-shared --enable-dap --disable-hdf4 --enable-logging --enable-netcdf4 --enable-v2 > netcdf.configure.foo 2>&1
make > netcdf.make.foo 2>&1
mv -f config.log netcdf.config.log.foo
make check > netcdf.check.foo 2>&1
scp netcdf.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf/libsrc/.libs/libnetcdf3.a ${NETCDF4_ROOT}/lib/libnetcdf3.a.gcc
sudo cp ${DATA}/tmp/netcdf/libsrc4/.libs/libnetcdf4.a ${NETCDF4_ROOT}/lib/libnetcdf4.a.gcc
make clean
exit # Return to previous shell level
# Output saved to:
http://dust.ess.uci.edu/tmp/netcdf.check.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.configure.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.make.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.config.log.x86_64-unknown-linux-gnu.foo
#***********************************************************************
# 20130722: roulee.ess.uci.edu x86_64/EMT64 Fedora Core 19 gcc/gfortran 4.8.1 netcdf-4.3.0+ svn
#***********************************************************************

#***********************************************************************
# 20130827: roulee.ess.uci.edu x86_64/EMT64 Fedora Core 19 gcc/gfortran 4.8.1 netcdf-4.3.0+ git
#***********************************************************************
sudo aptitude install antlr bison doxygen flex gcc g++ gsl-bin libgsl0-dev libnetcdf6 libnetcdf-dev libcurl4-gnutls-dev libexpat1-dev libxml2-dev netcdf-bin udunits-bin libudunits2-0 libudunits2-dev # Install netCDF prequisites
sudo yum install antlr antlr-C++ curl-devel libxml2-devel bison flex gcc gcc-c++ gcc-gfortran gsl gsl-devel librx librx-devel udunits2 udunits2-devel
cd ${DATA}/tmp
# svn co https://sub.unidata.ucar.edu/netcdf/trunk;mv trunk netcdf;/bin/cp ~/nco/autobld/ltmain.sh netcdf
# git clone git@github.com:Unidata/netcdf-c.git
# git clone git@github.com:Unidata/netcdf-fortran.git
# git clone git@github.com:Unidata/netcdf-cxx4.git
cd ${DATA}/tmp/netcdf
/bin/rm -r -f ${DATA}/tmp/hdf5-1.8.9*
# aptitude install libhdf4-alt-dev
wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/hdf5-1.8.9.tar.gz
tar xvzf hdf5-1.8.9.tar.gz
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.8.9
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
# NB: x86_64 compilations require -fPIC -m64 flags to avoid errors on shared libraries that link to libnetcdf, e.g., libnetcdf-perl: "/usr/bin/ld: /usr/local/lib/libnetcdf.a(putget.o): relocation R_X86_64_32S against `a local symbol' can not be used when making a shared object; recompile with -fPIC"
export CC='gcc'
export CFLAGS='-fPIC -m64'
export CPPFLAGS=''
export CXX='g++'
export CXXFLAGS='-fPIC -m64'
export FC='gfortran'
export F77='gfortran'
export F90='gfortran'
export FCFLAGS=''
export FFLAGS=''
export F90FLAGS=''
export LDFLAGS='-L/usr/local/lib'
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.8.9/hdf5
./configure --prefix=${HDF5_ROOT} --enable-cxx --enable-fortran > hdf5.configure.foo 2>&1
# 20070507 HDF5 --enable-cxx conflicts with --enable-parallel
# 20070507 HDF5 --enable-parallel requires parallel filesystem
# ./configure --prefix=${HDF5_ROOT} --enable-fortran --enable-parallel
make > hdf5.make.foo 2>&1
# make check > hdf5.check.foo 2>&1
scp hdf5.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install

# Do same for netCDF4 Fortran
cd ${DATA}/tmp
/bin/rm -r -f ${DATA}/tmp/netcdf-fortran
sudo /bin/rm -f ${NETCDF4_ROOT}/include/netcdf.mod ${NETCDF4_ROOT}/lib/libnetcdff.* 
cd ${DATA}/tmp/netcdf-fortran
make distclean
git pull
autoreconf -i -f
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdff.configure.foo 2>&1
make > netcdff.make.foo 2>&1
mv -f config.log netcdff.config.log.foo
make check > netcdff.check.foo 2>&1
scp netcdff.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/.libs/libnetcdff90.a ${NETCDF4_ROOT}/lib/libnetcdff90.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/.libs/libnetcdff.a ${NETCDF4_ROOT}/lib/libnetcdff.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/typesizes.mod ${NETCDF4_ROOT}/include/typesizes.mod.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/netcdf.mod ${NETCDF4_ROOT}/include/netcdf.mod.gfortran
make clean

# Do same for netCDF4 C
sudo /bin/rm -r -f ${NETCDF4_ROOT}/include/netcdf.* ${NETCDF4_ROOT}/lib/libnetcdf.* 
cd ${DATA}/tmp/netcdf-c
make distclean
git pull
autoreconf -i -f
# NB: --enable-cxx-4 enables new netCDF4 C++ API
# NB: --enable-hdf4 enables reading HDF4 files (created with SD (Scientific Data) API) through netCDF4 API. NB: requires separately building HDF4 and libmfhdf.a, and header mfhdf.h must also be installed
# NB: --enable-hdf4 documented at http://www.unidata.ucar.edu/software/netcdf/docs/build_hdf4.html
# NB: --enable-hdf4 documented requires libhdf.a, libdf.a, libjpeg.a (and netCDF configure does not itself add -ljpeg)
# NB: --enable-logging allows HDF error message to print
# NB: --enable-separate-fortran builds libnetcdff.a (default with shared libraries)
# NB: --enable-shared builds shared libraries
# NB: --enable-v2 enables the version 2 interface used by netcdf-perl
# NB: --with-libcf builds libcf.a (apparently deprecated ~201307)
# NB: --with-udunits builds libudunits2.a (apparently deprecated ~201307)
# CPPFLAGS='-I/usr/local/include -I/usr/include/hdf' LDFLAGS='-L/usr/local/lib -L/usr/lib64/hdf -ljpeg' ./configure --prefix=/usr/local --enable-shared --enable-dap --enable-hdf4 --enable-logging --enable-netcdf4 --enable-v2 > netcdf.configure.foo 2>&1
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local --enable-shared --enable-dap --disable-hdf4 --enable-logging --enable-netcdf4 --enable-v2 > netcdf.configure.foo 2>&1
mv -f config.log netcdf.config.log.foo
make > netcdf.make.foo 2>&1
make check > netcdf.check.foo 2>&1
scp netcdf.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-c/libsrc/.libs/libnetcdf3.a ${NETCDF4_ROOT}/lib/libnetcdf3.a.gcc
sudo cp ${DATA}/tmp/netcdf-c/libsrc4/.libs/libnetcdf4.a ${NETCDF4_ROOT}/lib/libnetcdf4.a.gcc
make clean
exit # Return to previous shell level
# Output saved to:
http://dust.ess.uci.edu/tmp/netcdf.check.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.configure.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.make.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.config.log.x86_64-unknown-linux-gnu.foo
#***********************************************************************
# 20130827: roulee.ess.uci.edu x86_64/EMT64 Fedora Core 19 gcc/gfortran 4.8.1 netcdf-4.3.0+ git
#***********************************************************************

#***********************************************************************
# 20131004: roulee.ess.uci.edu x86_64/EMT64 Fedora Core 19 gcc/gfortran 4.8.1 netcdf-4.3.1-rc4 HDF4 git 
# Works! New default
#***********************************************************************
sudo aptitude install antlr bison doxygen flex gcc g++ gsl-bin libgsl0-dev libnetcdf6 libnetcdf-dev libcurl4-gnutls-dev libexpat1-dev libxml2-dev netcdf-bin udunits-bin libudunits2-0 libudunits2-dev # Install netCDF prequisites
sudo yum install antlr antlr-C++ curl-devel libxml2-devel bison flex gcc gcc-c++ gcc-gfortran gsl gsl-devel librx librx-devel udunits2 udunits2-devel
cd ${DATA}/tmp
# svn co https://sub.unidata.ucar.edu/netcdf/trunk;mv trunk netcdf;/bin/cp ~/nco/autobld/ltmain.sh netcdf
# git clone git@github.com:Unidata/netcdf-c.git
# git clone git@github.com:Unidata/netcdf-fortran.git
# git clone git@github.com:Unidata/netcdf-cxx4.git
cd ${DATA}/tmp/netcdf
/bin/rm -r -f ${DATA}/tmp/hdf5-1.8.9*
# aptitude install libhdf4-alt-dev
wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/hdf5-1.8.9.tar.gz
tar xvzf hdf5-1.8.9.tar.gz
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.8.9
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
# NB: x86_64 compilations require -fPIC -m64 flags to avoid errors on shared libraries that link to libnetcdf, e.g., libnetcdf-perl: "/usr/bin/ld: /usr/local/lib/libnetcdf.a(putget.o): relocation R_X86_64_32S against `a local symbol' can not be used when making a shared object; recompile with -fPIC"
export CC='gcc'
export CFLAGS='-fPIC -m64'
export CPPFLAGS=''
export CXX='g++'
export CXXFLAGS='-fPIC -m64'
export FC='gfortran'
export F77='gfortran'
export F90='gfortran'
export FCFLAGS=''
export FFLAGS=''
export F90FLAGS=''
export LDFLAGS='-L/usr/local/lib'
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.8.9/hdf5
./configure --prefix=${HDF5_ROOT} --enable-cxx --enable-fortran > hdf5.configure.foo 2>&1
# 20070507 HDF5 --enable-cxx conflicts with --enable-parallel
# 20070507 HDF5 --enable-parallel requires parallel filesystem
# ./configure --prefix=${HDF5_ROOT} --enable-fortran --enable-parallel
make > hdf5.make.foo 2>&1
# make check > hdf5.check.foo 2>&1
scp hdf5.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install

# Do same for netCDF4 Fortran
cd ${DATA}/tmp
/bin/rm -r -f ${DATA}/tmp/netcdf-fortran
sudo /bin/rm -f ${NETCDF4_ROOT}/include/netcdf.mod ${NETCDF4_ROOT}/lib/libnetcdff.* 
cd ${DATA}/tmp/netcdf-fortran
make distclean
git pull
autoreconf -i -f
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdff.configure.foo 2>&1
make > netcdff.make.foo 2>&1
mv -f config.log netcdff.config.log.foo
make check > netcdff.check.foo 2>&1
scp netcdff.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/.libs/libnetcdff90.a ${NETCDF4_ROOT}/lib/libnetcdff90.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/.libs/libnetcdff.a ${NETCDF4_ROOT}/lib/libnetcdff.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/typesizes.mod ${NETCDF4_ROOT}/include/typesizes.mod.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/netcdf.mod ${NETCDF4_ROOT}/include/netcdf.mod.gfortran
make clean

# Do same for netCDF4 C
sudo /bin/rm -r -f ${NETCDF4_ROOT}/include/netcdf.* ${NETCDF4_ROOT}/lib/libnetcdf.* 
cd ${DATA}/tmp/netcdf-c
make distclean
git pull
autoreconf -i -f
# NB: --enable-cxx-4 enables new netCDF4 C++ API
# NB: --enable-hdf4 enables reading HDF4 files (created with SD (Scientific Data) API) through netCDF4 API. NB: requires separately building HDF4 and libmfhdf.a, and header mfhdf.h must also be installed
# NB: --enable-hdf4 documented at http://www.unidata.ucar.edu/software/netcdf/docs/build_hdf4.html
# NB: --enable-hdf4 documented requires libhdf.a, libdf.a, libjpeg.a (and netCDF configure does not itself add -ljpeg)
# NB: --enable-logging allows HDF error message to print
# NB: --enable-separate-fortran builds libnetcdff.a (default with shared libraries)
# NB: --enable-shared builds shared libraries
# NB: --enable-v2 enables the version 2 interface used by netcdf-perl
# NB: --with-libcf builds libcf.a (apparently deprecated ~201307)
# NB: --with-udunits builds libudunits2.a (apparently deprecated ~201307)
# Without HDF4
# LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local --enable-shared --enable-dap --disable-hdf4 --enable-logging --enable-netcdf4 --enable-v2 > netcdf.configure.foo 2>&1
# With HDF4 on FC19:
CPPFLAGS='-I/usr/local/include -I/usr/include/hdf' LDFLAGS='-L/usr/local/lib -L/usr/lib64/hdf' LIBS='-ljpeg' ./configure --prefix=/usr/local --enable-shared --enable-dap --enable-hdf4 --enable-logging --enable-netcdf4 --enable-v2 > netcdf.configure.foo 2>&1
# With HDF4 on Ubuntu:
# NB: libhdf4-dev appears broken for this. netCDF builds and links but executables hang
# sudo aptitude install libhdf4-dev
# Always install libhdf4 by hand on Ubuntu
CPPFLAGS='-I/usr/local/include' LDFLAGS='-L/usr/local/lib' LIBS='-ljpeg' ./configure --prefix=/usr/local --enable-shared --enable-dap --enable-hdf4 --enable-logging --enable-netcdf4 --enable-v2 > netcdf.configure.foo 2>&1
mv -f config.log netcdf.config.log.foo
make > netcdf.make.foo 2>&1
make check > netcdf.check.foo 2>&1
scp netcdf.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-c/libsrc/.libs/libnetcdf3.a ${NETCDF4_ROOT}/lib/libnetcdf3.a.gcc
sudo cp ${DATA}/tmp/netcdf-c/libsrc4/.libs/libnetcdf4.a ${NETCDF4_ROOT}/lib/libnetcdf4.a.gcc
make clean
exit # Return to previous shell level
# Output saved to:
http://dust.ess.uci.edu/tmp/netcdf.check.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.configure.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.make.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.config.log.x86_64-unknown-linux-gnu.foo
#***********************************************************************
# 20131004: roulee.ess.uci.edu x86_64/EMT64 Fedora Core 19 gcc/gfortran 4.8.1 netcdf-4.3.1-rc4 git
#***********************************************************************

#***********************************************************************
# 20131221: roulee.ess.uci.edu x86_64/EMT64 Fedora Core 20 gcc/gfortran 4.8.2 netcdf-4.3.1-rc6 HDF4 git 
# Works! New default
#***********************************************************************
sudo aptitude install antlr bison doxygen flex gcc g++ gsl-bin libgsl0-dev libcurl4-gnutls-dev libexpat1-dev libxml2-dev netcdf-bin udunits-bin libudunits2-0 libudunits2-dev # Install netCDF prequisites
sudo yum install antlr antlr-C++ curl-devel libxml2-devel bison flex gcc gcc-c++ gcc-gfortran gsl gsl-devel librx librx-devel udunits2 udunits2-devel
cd ${DATA}/tmp
# svn co https://sub.unidata.ucar.edu/netcdf/trunk;mv trunk netcdf;/bin/cp ~/nco/autobld/ltmain.sh netcdf
# git clone git@github.com:Unidata/netcdf-c.git
# git clone git@github.com:Unidata/netcdf-fortran.git
# git clone git@github.com:Unidata/netcdf-cxx4.git
cd ${DATA}/tmp/netcdf
/bin/rm -r -f ${DATA}/tmp/hdf5-1.8.9*
# aptitude install libhdf4-alt-dev
wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/hdf5-1.8.9.tar.gz
tar xvzf hdf5-1.8.9.tar.gz
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.8.9
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
# NB: x86_64 compilations require -fPIC -m64 flags to avoid errors on shared libraries that link to libnetcdf, e.g., libnetcdf-perl: "/usr/bin/ld: /usr/local/lib/libnetcdf.a(putget.o): relocation R_X86_64_32S against `a local symbol' can not be used when making a shared object; recompile with -fPIC"
export CC='gcc'
export CFLAGS='-fPIC -m64'
export CPPFLAGS=''
export CXX='g++'
export CXXFLAGS='-fPIC -m64'
export FC='gfortran'
export F77='gfortran'
export F90='gfortran'
export FCFLAGS=''
export FFLAGS=''
export F90FLAGS=''
export LDFLAGS='-L/usr/local/lib'
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.8.9/hdf5
./configure --prefix=${HDF5_ROOT} --enable-cxx --enable-fortran > hdf5.configure.foo 2>&1
# 20070507 HDF5 --enable-cxx conflicts with --enable-parallel
# 20070507 HDF5 --enable-parallel requires parallel filesystem
# ./configure --prefix=${HDF5_ROOT} --enable-fortran --enable-parallel
make > hdf5.make.foo 2>&1
# make check > hdf5.check.foo 2>&1
scp hdf5.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install

# Do same for netCDF4 Fortran
cd ${DATA}/tmp
/bin/rm -r -f ${DATA}/tmp/netcdf-fortran
sudo /bin/rm -f ${NETCDF4_ROOT}/include/netcdf.mod ${NETCDF4_ROOT}/lib/libnetcdff.* 
cd ${DATA}/tmp/netcdf-fortran
make distclean
git pull
autoreconf -i -f
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdff.configure.foo 2>&1
make > netcdff.make.foo 2>&1
mv -f config.log netcdff.config.log.foo
make check > netcdff.check.foo 2>&1
scp netcdff.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/.libs/libnetcdff90.a ${NETCDF4_ROOT}/lib/libnetcdff90.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/.libs/libnetcdff.a ${NETCDF4_ROOT}/lib/libnetcdff.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/typesizes.mod ${NETCDF4_ROOT}/include/typesizes.mod.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/netcdf.mod ${NETCDF4_ROOT}/include/netcdf.mod.gfortran
make clean

# Do same for netCDF4 C
sudo /bin/rm -r -f ${NETCDF4_ROOT}/include/netcdf.* ${NETCDF4_ROOT}/lib/libnetcdf.* 
cd ${DATA}/tmp/netcdf-c
make distclean
git pull
autoreconf -i -f
# NB: --enable-cxx-4 enables new netCDF4 C++ API
# NB: --enable-hdf4 enables reading HDF4 files (created with SD (Scientific Data) API) through netCDF4 API. NB: requires separately building HDF4 and libmfhdf.a, and header mfhdf.h must also be installed
# NB: --enable-hdf4 documented at http://www.unidata.ucar.edu/software/netcdf/docs/build_hdf4.html
# NB: --enable-hdf4 documented requires libhdf.a, libdf.a, libjpeg.a (and netCDF configure does not itself add -ljpeg)
# NB: --enable-logging allows HDF error message to print
# NB: --enable-separate-fortran builds libnetcdff.a (default with shared libraries)
# NB: --enable-shared builds shared libraries
# NB: --enable-v2 enables the version 2 interface used by netcdf-perl
# NB: --with-libcf builds libcf.a (apparently deprecated ~201307)
# NB: --with-udunits builds libudunits2.a (apparently deprecated ~201307)
# Without HDF4
# LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local --enable-shared --enable-dap --disable-hdf4 --enable-logging --enable-netcdf4 --enable-v2 > netcdf.configure.foo 2>&1
# With HDF4 on FC20:
CPPFLAGS='-I/usr/local/include -I/usr/include/hdf' LDFLAGS='-L/usr/local/lib -L/usr/lib64/hdf' LIBS='-ljpeg' ./configure --prefix=/usr/local --enable-shared --enable-dap --enable-hdf4 --enable-logging --enable-netcdf4 --enable-v2 > netcdf.configure.foo 2>&1
# With HDF4 on Ubuntu:
# NB: libhdf4-dev appears broken for this. netCDF builds and links but executables hang
# sudo aptitude install libhdf4-dev
# Always install libhdf4 by hand on Ubuntu
CPPFLAGS='-I/usr/local/include' LDFLAGS='-L/usr/local/lib' LIBS='-ljpeg' ./configure --prefix=/usr/local --enable-shared --enable-dap --enable-hdf4 --enable-logging --enable-netcdf4 --enable-v2 > netcdf.configure.foo 2>&1
mv -f config.log netcdf.config.log.foo
make > netcdf.make.foo 2>&1
make check > netcdf.check.foo 2>&1
scp netcdf.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-c/libsrc/.libs/libnetcdf3.a ${NETCDF4_ROOT}/lib/libnetcdf3.a.gcc
sudo cp ${DATA}/tmp/netcdf-c/libsrc4/.libs/libnetcdf4.a ${NETCDF4_ROOT}/lib/libnetcdf4.a.gcc
make clean
exit # Return to previous shell level
# Output saved to:
http://dust.ess.uci.edu/tmp/netcdf.check.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.configure.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.make.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.config.log.x86_64-unknown-linux-gnu.foo
#***********************************************************************
# 20131221: roulee.ess.uci.edu x86_64/EMT64 Fedora Core 20 gcc/gfortran 4.8.2 netcdf-4.3.1-rc6 git
#***********************************************************************

#***********************************************************************
# 20140604: roulee.ess.uci.edu x86_64/EMT64 Fedora Core 20 gcc/gfortran 4.8.2 netcdf-4.3.3-rc1 HDF4 git pnetcdf mpi
#***********************************************************************
sudo aptitude install antlr bison doxygen flex gcc g++ gsl-bin libgsl0-dev libcurl4-gnutls-dev libexpat1-dev libxml2-dev netcdf-bin udunits-bin libudunits2-0 libudunits2-dev # Install netCDF prequisites
sudo yum install antlr antlr-C++ curl-devel libxml2-devel bison flex gcc gcc-c++ gcc-gfortran gsl gsl-devel librx librx-devel udunits2 udunits2-devel
cd ${DATA}/tmp
# svn co https://sub.unidata.ucar.edu/netcdf/trunk;mv trunk netcdf;/bin/cp ~/nco/autobld/ltmain.sh netcdf
# git clone git@github.com:Unidata/netcdf-c.git
# git clone git@github.com:Unidata/netcdf-fortran.git
# git clone git@github.com:Unidata/netcdf-cxx4.git

# 20140320: NB: NCO on FC20 works fine on HDF5 files with default system RPMs
# However, examining HDF4 files (based on default HDF4 RPMs) causes HDF5 library errors
# Not sure whether this is due to netcdf-4.3.3-rc1, system HDF5 (1.8.11) or what
# Do know that hand-building HDF5 1.8.12 and rebuilding netCDF and NCO on that does solve problem
# Conclusion: Best results with HDF4 files with hand-built HDF5 on FC20, though no need to hand-build HDF4

# HDF5
cd ${DATA}/tmp
/bin/rm -r -f ${DATA}/tmp/hdf5-1.8.12*
# aptitude install libhdf4-alt-dev
wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/hdf5-1.8.12.tar.gz
tar xvzf hdf5-1.8.12.tar.gz
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.8.12
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
# NB: x86_64 compilations require -fPIC -m64 flags to avoid errors on shared libraries that link to libnetcdf, e.g., libnetcdf-perl: "/usr/bin/ld: /usr/local/lib/libnetcdf.a(putget.o): relocation R_X86_64_32S against `a local symbol' can not be used when making a shared object; recompile with -fPIC"
export MPI_ROOT=/usr/lib64/openmpi
export PATH=${MPI_ROOT}/bin\:${PATH}
export LD_LIBRARY_PATH=${MPI_ROOT}/lib\:${LD_LIBRARY_PATH}
export CC='mpicc'
export CFLAGS='-fPIC -m64'
export CPPFLAGS=''
export CXX='mpiCC'
export CXXFLAGS='-fPIC -m64'
export FC='mpif90'
export F77='mpif77'
export F90='mpif90'
export FCFLAGS=''
export FFLAGS=''
export F90FLAGS=''
export LDFLAGS='-L/usr/local/parallel/lib'
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local/parallel
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.8.12/hdf5
./configure --prefix=${HDF5_ROOT} --enable-fortran --enable-parallel > hdf5.configure.foo 2>&1
# 20070507 and 20140604 HDF5 --enable-cxx conflicts with --enable-parallel
# 20070507 HDF5 --enable-parallel requires parallel filesystem
# ./configure --prefix=${HDF5_ROOT} --enable-fortran --enable-parallel
make > hdf5.make.foo 2>&1
# make check > hdf5.check.foo 2>&1
scp hdf5.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install

# pnetCDF
cd ${DATA}/tmp
/bin/rm -r -f ${DATA}/tmp/parallel-netcdf-1.5.0.pre1
wget -c http://cucis.ece.northwestern.edu/projects/PnetCDF/Release/parallel-netcdf-1.5.0.pre1.tar.gz
tar xvzf parallel-netcdf-1.5.0.pre1.tar.gz
cd ${DATA}/tmp/parallel-netcdf-1.5.0.pre1
make distclean
./configure --with-mpi=${MPI_ROOT} --prefix=/usr/local/parallel > pnetcdf.configure.foo 2>&1
make > pnetcdf.make.foo 2>&1
sudo make install
make check > pnetcdf.check.foo 2>&1

# netCDF4 Fortran
cd ${DATA}/tmp
/bin/rm -r -f ${DATA}/tmp/netcdf-fortran
sudo /bin/rm -f ${NETCDF4_ROOT}/include/netcdf.mod ${NETCDF4_ROOT}/lib/libnetcdff.* 
cd ${DATA}/tmp/netcdf-fortran
make distclean
git pull
autoreconf -i -f
LDFLAGS='-L/usr/local/parallel/lib' ./configure --prefix=/usr/local/parallel > netcdff.configure.foo 2>&1
make > netcdff.make.foo 2>&1
mv -f config.log netcdff.config.log.foo
make check > netcdff.check.foo 2>&1
scp netcdff.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/.libs/libnetcdff90.a ${NETCDF4_ROOT}/lib/libnetcdff90.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/.libs/libnetcdff.a ${NETCDF4_ROOT}/lib/libnetcdff.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/typesizes.mod ${NETCDF4_ROOT}/include/typesizes.mod.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/netcdf.mod ${NETCDF4_ROOT}/include/netcdf.mod.gfortran
make clean

# netCDF4 C
sudo /bin/rm -r -f ${NETCDF4_ROOT}/include/netcdf.* ${NETCDF4_ROOT}/lib/libnetcdf.* 
cd ${DATA}/tmp/netcdf-c
make distclean
git pull
autoreconf -i -f
# NB: --enable-cxx-4 enables new netCDF4 C++ API
# NB: --enable-hdf4 enables reading HDF4 files (created with SD (Scientific Data) API) through netCDF4 API. NB: requires separately building HDF4 and libmfhdf.a, and header mfhdf.h must also be installed
# NB: --enable-hdf4 documented at http://www.unidata.ucar.edu/software/netcdf/docs/build_hdf4.html
# NB: --enable-hdf4 documented requires libhdf.a, libdf.a, libjpeg.a (and netCDF configure does not itself add -ljpeg)
# NB: --enable-logging allows HDF error message to print
# NB: --enable-pnetcdf builds-in pnetCDF
# NB: --enable-parallel-tests tests HDF5 parallel code
# NB: --enable-separate-fortran builds libnetcdff.a (default with shared libraries)
# NB: --enable-shared builds shared libraries (parallel builds must use --disable-shared)
# NB: --enable-v2 enables the version 2 interface used by netcdf-perl
# NB: --with-libcf builds libcf.a (apparently deprecated ~201307)
# NB: --with-udunits builds libudunits2.a (apparently deprecated ~201307)
# Without HDF4
# LDFLAGS='-L/usr/local/parallel/lib' ./configure --prefix=/usr/local/parallel --enable-shared --enable-dap --disable-hdf4 --enable-logging --enable-netcdf4 --enable-v2 > netcdf.configure.foo 2>&1
# With HDF4 on FC20:
CPPFLAGS='-I/usr/local/parallel/include -I/usr/include/hdf' LDFLAGS='-L/usr/local/parallel/lib -L/usr/lib64/hdf' LIBS='-ljpeg -ldl' ./configure --prefix=/usr/local/parallel --disable-shared --enable-dap --enable-hdf4 --enable-logging --enable-netcdf4 --enable-parallel-tests --enable-pnetcdf --enable-v2 > netcdf.configure.foo 2>&1
# With HDF4 on FC20, and without HDF warning logging (for ncdismember):
CPPFLAGS='-I/usr/local/parallel/include -I/usr/include/hdf' LDFLAGS='-L/usr/local/parallel/lib -L/usr/lib64/hdf' LIBS='-ljpeg -ldl' ./configure --prefix=/usr/local/parallel --disable-shared --enable-dap --enable-hdf4 --enable-netcdf4 --enable-parallel-tests --enable-pnetcdf --enable-v2 > netcdf.configure.foo 2>&1
mv -f config.log netcdf.config.log.foo
make > netcdf.make.foo 2>&1
make check > netcdf.check.foo 2>&1
scp netcdf.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-c/libsrc/.libs/libnetcdf3.a ${NETCDF4_ROOT}/lib/libnetcdf3.a.gcc
sudo cp ${DATA}/tmp/netcdf-c/libsrc4/.libs/libnetcdf4.a ${NETCDF4_ROOT}/lib/libnetcdf4.a.gcc
make clean
exit # Return to previous shell level
# Output saved to:
http://dust.ess.uci.edu/tmp/netcdf.check.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.configure.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.make.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.config.log.x86_64-unknown-linux-gnu.foo
#***********************************************************************
# 20140604: roulee.ess.uci.edu x86_64/EMT64 Fedora Core 20 gcc/gfortran 4.8.2 netcdf-4.3.3-rc1 git pnetcdf mpi
#***********************************************************************

#***********************************************************************
# 20140623: roulee.ess.uci.edu x86_64/EMT64 Fedora Core 20 gcc/gfortran 4.8.2 netcdf-4.3.3-rc1 HDF4 git 
#***********************************************************************
sudo aptitude install antlr bison doxygen flex gcc g++ gsl-bin libgsl0-dev libcurl4-gnutls-dev libexpat1-dev libxml2-dev netcdf-bin udunits-bin libudunits2-0 libudunits2-dev # Install netCDF prequisites
sudo yum install antlr antlr-C++ curl-devel libxml2-devel bison flex gcc gcc-c++ gcc-gfortran gsl gsl-devel librx librx-devel udunits2 udunits2-devel
cd ${DATA}/tmp
# svn co https://sub.unidata.ucar.edu/netcdf/trunk;mv trunk netcdf;/bin/cp ~/nco/autobld/ltmain.sh netcdf
# git clone git@github.com:Unidata/netcdf-c.git
# git clone git@github.com:Unidata/netcdf-fortran.git
# git clone git@github.com:Unidata/netcdf-cxx4.git

# 20140320: NB: NCO on FC20 works fine on HDF5 files with default system RPMs
# However, examining HDF4 files (based on default HDF4 RPMs) causes HDF5 library errors
# Not sure whether this is due to netcdf-4.3.2-rc1, system HDF5 (1.8.11) or what
# Do know that hand-building HDF5 1.8.12 and rebuilding netCDF and NCO on that does solve problem
# Conclusion: Best results with HDF4 files with hand-built HDF5 on FC20, though no need to hand-build HDF4

/bin/rm -r -f ${DATA}/tmp/hdf5-1.8.13*
# aptitude install libhdf4-alt-dev
cd ${DATA}/tmp
wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/hdf5-1.8.13.tar.gz
tar xvzf hdf5-1.8.13.tar.gz
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.8.13
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
# NB: x86_64 compilations require -fPIC -m64 flags to avoid errors on shared libraries that link to libnetcdf, e.g., libnetcdf-perl: "/usr/bin/ld: /usr/local/lib/libnetcdf.a(putget.o): relocation R_X86_64_32S against `a local symbol' can not be used when making a shared object; recompile with -fPIC"
export CC='gcc'
export CFLAGS='-fPIC -m64'
export CPPFLAGS=''
export CXX='g++'
export CXXFLAGS='-fPIC -m64'
export FC='gfortran'
export F77='gfortran'
export F90='gfortran'
export FCFLAGS=''
export FFLAGS=''
export F90FLAGS=''
export LDFLAGS='-L/usr/local/lib'
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.8.13/hdf5
./configure --prefix=${HDF5_ROOT} --enable-cxx --enable-fortran > hdf5.configure.foo 2>&1
# 20070507 HDF5 --enable-cxx conflicts with --enable-parallel
# 20070507 HDF5 --enable-parallel requires parallel filesystem
# ./configure --prefix=${HDF5_ROOT} --enable-fortran --enable-parallel
make > hdf5.make.foo 2>&1
# make check > hdf5.check.foo 2>&1
scp hdf5.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install

# Do same for netCDF4 Fortran
cd ${DATA}/tmp
/bin/rm -r -f ${DATA}/tmp/netcdf-fortran
sudo /bin/rm -f ${NETCDF4_ROOT}/include/netcdf.mod ${NETCDF4_ROOT}/lib/libnetcdff.* 
cd ${DATA}/tmp/netcdf-fortran
make distclean
git pull
autoreconf -i -f
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdff.configure.foo 2>&1
make > netcdff.make.foo 2>&1
mv -f config.log netcdff.config.log.foo
make check > netcdff.check.foo 2>&1
scp netcdff.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/.libs/libnetcdff90.a ${NETCDF4_ROOT}/lib/libnetcdff90.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/.libs/libnetcdff.a ${NETCDF4_ROOT}/lib/libnetcdff.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/typesizes.mod ${NETCDF4_ROOT}/include/typesizes.mod.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/netcdf.mod ${NETCDF4_ROOT}/include/netcdf.mod.gfortran
make clean

# Do same for netCDF4 CXX (old interface, still required by ESMF_RegridWeightGen):
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-cxx-4.2.tar.gz
tar xvzf netcdf-cxx-4.2.tar.gz 
cd ${DATA}/tmp/netcdf-cxx-4.2
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdf_cxx.configure.foo 2>&1
make > netcdf_cxx.make.foo 2>&1
mv -f config.log netcdf_cxx.config.log.foo
make check > netcdf_cxx.check.foo 2>&1
scp netcdf_cxx.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install

# Do same for netCDF4 C++ (new interface)
cd ${DATA}/tmp/netcdf-cxx4
git pull
autoreconf -i -f
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdf_c++.configure.foo 2>&1
make > netcdf_c++.make.foo 2>&1
mv -f config.log netcdf_c++.config.log.foo
make check > netcdf_c++.check.foo 2>&1
scp netcdf_c++.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install

# Do same for netCDF4 C
sudo /bin/rm -r -f ${NETCDF4_ROOT}/include/netcdf.* ${NETCDF4_ROOT}/lib/libnetcdf.* 
cd ${DATA}/tmp/netcdf-c
make distclean
git pull
autoreconf -i -f
# NB: --enable-cxx-4 enables new netCDF4 C++ API
# NB: --enable-hdf4 enables reading HDF4 files (created with SD (Scientific Data) API) through netCDF4 API. NB: requires separately building HDF4 and libmfhdf.a, and header mfhdf.h must also be installed
# NB: --enable-hdf4 documented at http://www.unidata.ucar.edu/software/netcdf/docs/build_hdf4.html
# NB: --enable-hdf4 documented requires libhdf.a, libdf.a, libjpeg.a (and netCDF configure does not itself add -ljpeg)
# NB: --enable-logging allows HDF error message to print
# NB: --enable-separate-fortran builds libnetcdff.a (default with shared libraries)
# NB: --enable-shared builds shared libraries
# NB: --enable-v2 enables the version 2 interface used by netcdf-perl
# NB: --with-libcf builds libcf.a (apparently deprecated ~201307)
# NB: --with-udunits builds libudunits2.a (apparently deprecated ~201307)
# Without HDF4
# LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local --enable-shared --enable-dap --disable-hdf4 --enable-logging --enable-netcdf4 --enable-v2 > netcdf.configure.foo 2>&1
# With HDF4 on FC20:
CPPFLAGS='-I/usr/local/include -I/usr/include/hdf' LDFLAGS='-L/usr/local/lib -L/usr/lib64/hdf' LIBS='-ljpeg' ./configure --prefix=/usr/local --enable-shared --enable-dap --enable-hdf4 --enable-logging --enable-netcdf4 --enable-v2 > netcdf.configure.foo 2>&1
# With HDF4 on FC20, and without HDF warning logging (for ncdismember):
CPPFLAGS='-I/usr/local/include -I/usr/include/hdf' LDFLAGS='-L/usr/local/lib -L/usr/lib64/hdf' LIBS='-ljpeg' ./configure --prefix=/usr/local --enable-shared --enable-dap --enable-hdf4 --enable-netcdf4 --enable-v2 > netcdf.configure.foo 2>&1
# With HDF4 on Ubuntu:
# NB: libhdf4-dev appears broken for this. netCDF builds and links but executables hang
# sudo aptitude install libhdf4-dev
# Always install libhdf4 by hand on Ubuntu
CPPFLAGS='-I/usr/local/include' LDFLAGS='-L/usr/local/lib' LIBS='-ljpeg' ./configure --prefix=/usr/local --enable-shared --enable-dap --enable-hdf4 --enable-logging --enable-netcdf4 --enable-v2 > netcdf.configure.foo 2>&1
mv -f config.log netcdf.config.log.foo
make > netcdf.make.foo 2>&1
make check > netcdf.check.foo 2>&1
scp netcdf.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-c/libsrc/.libs/libnetcdf3.a ${NETCDF4_ROOT}/lib/libnetcdf3.a.gcc
sudo cp ${DATA}/tmp/netcdf-c/libsrc4/.libs/libnetcdf4.a ${NETCDF4_ROOT}/lib/libnetcdf4.a.gcc
make clean
exit # Return to previous shell level
# Output saved to:
http://dust.ess.uci.edu/tmp/netcdf.check.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.configure.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.make.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.config.log.x86_64-unknown-linux-gnu.foo
#***********************************************************************
# 20140623: roulee.ess.uci.edu x86_64/EMT64 Fedora Core 20 gcc/gfortran 4.8.2 netcdf-4.3.3-rc1 git
#***********************************************************************

#***********************************************************************
# 20150203: roulee.ess.uci.edu x86_64/EMT64 Fedora Core 21 gcc/gfortran 4.9.2 netcdf-4.3.3-rc3 HDF4 git 
#***********************************************************************
sudo aptitude install antlr bison doxygen flex gcc g++ gsl-bin libgsl0-dev libcurl4-gnutls-dev libexpat1-dev libxml2-dev netcdf-bin udunits-bin libudunits2-0 libudunits2-dev # Install netCDF prequisites
sudo yum install antlr antlr-C++ curl-devel libxml2-devel bison flex gcc gcc-c++ gcc-gfortran gsl gsl-devel librx librx-devel udunits2 udunits2-devel
cd ${DATA}/tmp
# svn co https://sub.unidata.ucar.edu/netcdf/trunk;mv trunk netcdf;/bin/cp ~/nco/autobld/ltmain.sh netcdf
# git clone git@github.com:Unidata/netcdf-c.git
# git clone git@github.com:Unidata/netcdf-fortran.git
# git clone git@github.com:Unidata/netcdf-cxx4.git

# 20140320: NB: NCO on FC20 works fine on HDF5 files with default system RPMs
# However, examining HDF4 files (based on default HDF4 RPMs) causes HDF5 library errors
# Not sure whether this is due to netcdf-4.3.2-rc1, system HDF5 (1.8.11) or what
# Do know that hand-building HDF5 1.8.12 and rebuilding netCDF and NCO on that does solve problem
# Conclusion: Best results with HDF4 files with hand-built HDF5 on FC20, though no need to hand-build HDF4

/bin/rm -r -f ${DATA}/tmp/hdf5-1.8.13*
# aptitude install libhdf4-alt-dev
cd ${DATA}/tmp
wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/hdf5-1.8.13.tar.gz
tar xvzf hdf5-1.8.13.tar.gz
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.8.13
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
# NB: x86_64 compilations require -fPIC -m64 flags to avoid errors on shared libraries that link to libnetcdf, e.g., libnetcdf-perl: "/usr/bin/ld: /usr/local/lib/libnetcdf.a(putget.o): relocation R_X86_64_32S against `a local symbol' can not be used when making a shared object; recompile with -fPIC"
export CC='gcc'
export CFLAGS='-fPIC -m64'
export CPPFLAGS=''
export CXX='g++'
export CXXFLAGS='-fPIC -m64'
export FC='gfortran'
export F77='gfortran'
export F90='gfortran'
export FCFLAGS=''
export FFLAGS=''
export F90FLAGS=''
export LDFLAGS='-L/usr/local/lib'
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.8.13/hdf5
./configure --prefix=${HDF5_ROOT} --enable-cxx --enable-fortran > hdf5.configure.foo 2>&1
# 20070507 HDF5 --enable-cxx conflicts with --enable-parallel
# 20070507 HDF5 --enable-parallel requires parallel filesystem
# ./configure --prefix=${HDF5_ROOT} --enable-fortran --enable-parallel
make > hdf5.make.foo 2>&1
# make check > hdf5.check.foo 2>&1
scp hdf5.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install

# Do same for netCDF4 Fortran
cd ${DATA}/tmp
/bin/rm -r -f ${DATA}/tmp/netcdf-fortran
sudo /bin/rm -f ${NETCDF4_ROOT}/include/netcdf.mod ${NETCDF4_ROOT}/lib/libnetcdff.* 
cd ${DATA}/tmp/netcdf-fortran
make distclean
git pull
autoreconf -i -f
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdff.configure.foo 2>&1
mv -f config.log netcdff.config.log.foo
make > netcdff.make.foo 2>&1
make check > netcdff.check.foo 2>&1
scp netcdff.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/.libs/libnetcdff90.a ${NETCDF4_ROOT}/lib/libnetcdff90.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/.libs/libnetcdff.a ${NETCDF4_ROOT}/lib/libnetcdff.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/typesizes.mod ${NETCDF4_ROOT}/include/typesizes.mod.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/netcdf.mod ${NETCDF4_ROOT}/include/netcdf.mod.gfortran
make clean

# Do same for netCDF4 CXX (old interface, still required by ESMF_RegridWeightGen):
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-cxx-4.2.tar.gz
tar xvzf netcdf-cxx-4.2.tar.gz 
cd ${DATA}/tmp/netcdf-cxx-4.2
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdf_cxx.configure.foo 2>&1
make > netcdf_cxx.make.foo 2>&1
mv -f config.log netcdf_cxx.config.log.foo
make check > netcdf_cxx.check.foo 2>&1
scp netcdf_cxx.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install

# Do same for netCDF4 C++ (new interface)
cd ${DATA}/tmp/netcdf-cxx4
git pull
autoreconf -i -f
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdf_c++.configure.foo 2>&1
make > netcdf_c++.make.foo 2>&1
mv -f config.log netcdf_c++.config.log.foo
make check > netcdf_c++.check.foo 2>&1
scp netcdf_c++.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install

# Do same for netCDF4 C
sudo /bin/rm -r -f ${NETCDF4_ROOT}/include/netcdf.* ${NETCDF4_ROOT}/lib/libnetcdf.* 
cd ${DATA}/tmp/netcdf-c
make distclean
git pull
autoreconf -i -f
# NB: --enable-cxx-4 enables new netCDF4 C++ API
# NB: --enable-hdf4 enables reading HDF4 files (created with SD (Scientific Data) API) through netCDF4 API. NB: requires separately building HDF4 and libmfhdf.a, and header mfhdf.h must also be installed
# NB: --enable-hdf4 documented at http://www.unidata.ucar.edu/software/netcdf/docs/build_hdf4.html
# NB: --enable-hdf4 documented requires libhdf.a, libdf.a, libjpeg.a (and netCDF configure does not itself add -ljpeg)
# NB: --enable-logging allows HDF error message to print
# NB: --enable-separate-fortran builds libnetcdff.a (default with shared libraries)
# NB: --enable-shared builds shared libraries
# NB: --enable-v2 enables the version 2 interface used by netcdf-perl
# NB: --with-libcf builds libcf.a (apparently deprecated ~201307)
# NB: --with-udunits builds libudunits2.a (apparently deprecated ~201307)
# Without HDF4
# LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local --enable-shared --enable-dap --disable-hdf4 --enable-logging --enable-netcdf4 --enable-v2 > netcdf.configure.foo 2>&1
# With HDF4 on FC21:
CPPFLAGS='-I/usr/local/include -I/usr/include/hdf' LDFLAGS='-L/usr/local/lib -L/usr/lib64/hdf' LIBS='-ljpeg' ./configure --prefix=/usr/local --enable-shared --enable-dap --enable-hdf4 --enable-logging --enable-netcdf4 --enable-v2 > netcdf.configure.foo 2>&1
# With HDF4 on FC21, and without HDF warning logging (for ncdismember):
CPPFLAGS='-I/usr/local/include -I/usr/include/hdf' LDFLAGS='-L/usr/local/lib -L/usr/lib64/hdf' LIBS='-ljpeg' ./configure --prefix=/usr/local --enable-shared --enable-dap --enable-hdf4 --enable-netcdf4 --enable-v2 > netcdf.configure.foo 2>&1
# With HDF4 on Ubuntu:
# NB: libhdf4-dev appears broken for this. netCDF builds and links but executables hang
# sudo aptitude install libhdf4-dev
# Always install libhdf4 by hand on Ubuntu
CPPFLAGS='-I/usr/local/include' LDFLAGS='-L/usr/local/lib' LIBS='-ljpeg' ./configure --prefix=/usr/local --enable-shared --enable-dap --enable-hdf4 --enable-logging --enable-netcdf4 --enable-v2 > netcdf.configure.foo 2>&1
mv -f config.log netcdf.config.log.foo
make > netcdf.make.foo 2>&1
make check > netcdf.check.foo 2>&1
scp netcdf.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-c/libsrc/.libs/libnetcdf3.a ${NETCDF4_ROOT}/lib/libnetcdf3.a.gcc
sudo cp ${DATA}/tmp/netcdf-c/libsrc4/.libs/libnetcdf4.a ${NETCDF4_ROOT}/lib/libnetcdf4.a.gcc
make clean
exit # Return to previous shell level
# Output saved to:
http://dust.ess.uci.edu/tmp/netcdf.check.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.configure.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.make.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.config.log.x86_64-unknown-linux-gnu.foo
#***********************************************************************
# 20150203: roulee.ess.uci.edu x86_64/EMT64 Fedora Core 21 gcc/gfortran 4.9.2 netcdf-4.3.3-rc3 HDF4 git 
#***********************************************************************

#***********************************************************************
# 20150530: rhea.ccs.ornl.gov x86_64/EMT64 RHEL 6.6 Santiago gcc/gfortran 4.8.2 netcdf-4.3.3.1 HDF4 git 
#***********************************************************************
sudo aptitude install antlr bison doxygen flex gcc g++ gsl-bin libgsl0-dev libcurl4-gnutls-dev libexpat1-dev libxml2-dev netcdf-bin udunits-bin libudunits2-0 libudunits2-dev # Install netCDF prequisites
sudo yum install antlr antlr-C++ curl-devel libxml2-devel bison flex gcc gcc-c++ gcc-gfortran gsl gsl-devel librx librx-devel udunits2 udunits2-devel
cd ${DATA}/tmp
# svn co https://sub.unidata.ucar.edu/netcdf/trunk;mv trunk netcdf;/bin/cp ~/nco/autobld/ltmain.sh netcdf
# git clone git@github.com:Unidata/netcdf-c.git
# git clone git@github.com:Unidata/netcdf-fortran.git
# git clone git@github.com:Unidata/netcdf-cxx4.git

# 20140320: NB: NCO on FC20 works fine on HDF5 files with default system RPMs
# However, examining HDF4 files (based on default HDF4 RPMs) causes HDF5 library errors
# Not sure whether this is due to netcdf-4.3.2-rc1, system HDF5 (1.8.11) or what
# Do know that hand-building HDF5 1.8.12 and rebuilding netCDF and NCO on that does solve problem
# Conclusion: Best results with HDF4 files with hand-built HDF5 on FC20, though no need to hand-build HDF4

/bin/rm -r -f ${DATA}/tmp/hdf5-1.8.13*
# aptitude install libhdf4-alt-dev
cd ${DATA}/tmp
wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/hdf5-1.8.13.tar.gz
tar xvzf hdf5-1.8.13.tar.gz
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.8.13
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
# NB: x86_64 compilations require -fPIC -m64 flags to avoid errors on shared libraries that link to libnetcdf, e.g., libnetcdf-perl: "/usr/bin/ld: /usr/local/lib/libnetcdf.a(putget.o): relocation R_X86_64_32S against `a local symbol' can not be used when making a shared object; recompile with -fPIC"
export CC='gcc'
export CFLAGS='-fPIC -m64'
export CPPFLAGS=''
export CXX='g++'
export CXXFLAGS='-fPIC -m64'
export FC='gfortran'
export F77='gfortran'
export F90='gfortran'
export FCFLAGS=''
export FFLAGS=''
export F90FLAGS=''
export LDFLAGS='-L/usr/local/lib'
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.8.13/hdf5
./configure --prefix=${HDF5_ROOT} --enable-cxx --enable-fortran > hdf5.configure.foo 2>&1
# 20070507 HDF5 --enable-cxx conflicts with --enable-parallel
# 20070507 HDF5 --enable-parallel requires parallel filesystem
# ./configure --prefix=${HDF5_ROOT} --enable-fortran --enable-parallel
make > hdf5.make.foo 2>&1
# make check > hdf5.check.foo 2>&1
scp hdf5.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install

# Do same for netCDF4 Fortran
cd ${DATA}/tmp
/bin/rm -r -f ${DATA}/tmp/netcdf-fortran
sudo /bin/rm -f ${NETCDF4_ROOT}/include/netcdf.mod ${NETCDF4_ROOT}/lib/libnetcdff.* 
cd ${DATA}/tmp/netcdf-fortran
make distclean
git pull
autoreconf -i -f
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdff.configure.foo 2>&1
mv -f config.log netcdff.config.log.foo
make > netcdff.make.foo 2>&1
make check > netcdff.check.foo 2>&1
scp netcdff.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/.libs/libnetcdff90.a ${NETCDF4_ROOT}/lib/libnetcdff90.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/.libs/libnetcdff.a ${NETCDF4_ROOT}/lib/libnetcdff.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/typesizes.mod ${NETCDF4_ROOT}/include/typesizes.mod.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/netcdf.mod ${NETCDF4_ROOT}/include/netcdf.mod.gfortran
make clean

# Do same for netCDF4 CXX (old interface, still required by ESMF_RegridWeightGen):
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-cxx-4.2.tar.gz
tar xvzf netcdf-cxx-4.2.tar.gz 
cd ${DATA}/tmp/netcdf-cxx-4.2
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdf_cxx.configure.foo 2>&1
make > netcdf_cxx.make.foo 2>&1
mv -f config.log netcdf_cxx.config.log.foo
make check > netcdf_cxx.check.foo 2>&1
scp netcdf_cxx.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install

# Do same for netCDF4 C++ (new interface)
cd ${DATA}/tmp/netcdf-cxx4
git pull
autoreconf -i -f
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdf_c++.configure.foo 2>&1
make > netcdf_c++.make.foo 2>&1
mv -f config.log netcdf_c++.config.log.foo
make check > netcdf_c++.check.foo 2>&1
scp netcdf_c++.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install

# Do same for netCDF4 C
sudo /bin/rm -r -f ${NETCDF4_ROOT}/include/netcdf.* ${NETCDF4_ROOT}/lib/libnetcdf.* 
cd ${DATA}/tmp/netcdf-c
make distclean
git pull
autoreconf -i -f
# NB: --enable-cxx-4 enables new netCDF4 C++ API
# NB: --enable-hdf4 enables reading HDF4 files (created with SD (Scientific Data) API) through netCDF4 API. NB: requires separately building HDF4 and libmfhdf.a, and header mfhdf.h must also be installed
# NB: --enable-hdf4 documented at http://www.unidata.ucar.edu/software/netcdf/docs/build_hdf4.html
# NB: --enable-hdf4 documented requires libhdf.a, libdf.a, libjpeg.a (and netCDF configure does not itself add -ljpeg)
# NB: --enable-logging allows HDF error message to print
# NB: --enable-separate-fortran builds libnetcdff.a (default with shared libraries)
# NB: --enable-shared builds shared libraries
# NB: --enable-v2 enables the version 2 interface used by netcdf-perl
# NB: --with-libcf builds libcf.a (apparently deprecated ~201307)
# NB: --with-udunits builds libudunits2.a (apparently deprecated ~201307)
# With HDF4 on FC21, and without HDF warning logging (for ncdismember):
CC='icc' CXX='icpc' ./configure --prefix=${HOME} --bindir=${MY_BIN_DIR} --datadir=${HOME}/nco/data --libdir=${MY_LIB_DIR} --mandir=${HOME}/nco/man --enable-shared --enable-dap --enable-hdf4 --enable-netcdf4 --enable-v2 > netcdf.configure.foo 2>&1
mv -f config.log netcdf.config.log.foo
make > netcdf.make.foo 2>&1
make check > netcdf.check.foo 2>&1
scp netcdf.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-c/libsrc/.libs/libnetcdf3.a ${NETCDF4_ROOT}/lib/libnetcdf3.a.gcc
sudo cp ${DATA}/tmp/netcdf-c/libsrc4/.libs/libnetcdf4.a ${NETCDF4_ROOT}/lib/libnetcdf4.a.gcc
make clean
exit # Return to previous shell level
# Output saved to:
http://dust.ess.uci.edu/tmp/netcdf.check.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.configure.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.make.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.config.log.x86_64-unknown-linux-gnu.foo
#***********************************************************************
# 20150530: rhea.ccs.ornl.gov RHEL 6.6 Santiago gcc/gfortran 4.8.2 netcdf-4.3.3.1 HDF4 git 
#***********************************************************************

#***********************************************************************
# 20150610: roulee.ess.uci.edu x86_64/EMT64 Fedora Core 22 gcc/gfortran 5.1.1 netcdf-4.4.0-rc1 HDF4 git 
#***********************************************************************
sudo aptitude install antlr bison doxygen flex gcc g++ gsl-bin libgsl0-dev libcurl4-gnutls-dev libexpat1-dev libxml2-dev netcdf-bin udunits-bin libudunits2-0 libudunits2-dev # Install netCDF prequisites
sudo yum install antlr antlr-C++ curl-devel libxml2-devel bison flex gcc gcc-c++ gcc-gfortran gsl gsl-devel librx librx-devel udunits2 udunits2-devel
cd ${DATA}/tmp
# svn co https://sub.unidata.ucar.edu/netcdf/trunk;mv trunk netcdf;/bin/cp ~/nco/autobld/ltmain.sh netcdf
# git clone git@github.com:Unidata/netcdf-c.git
# git clone git@github.com:Unidata/netcdf-fortran.git
# git clone git@github.com:Unidata/netcdf-cxx4.git

# 20140320: NB: NCO on FC20 works fine on HDF5 files with default system RPMs
# However, examining HDF4 files (based on default HDF4 RPMs) causes HDF5 library errors
# Not sure whether this is due to netcdf-4.3.2-rc1, system HDF5 (1.8.11) or what
# Do know that hand-building HDF5 1.8.12 and rebuilding netCDF and NCO on that does solve problem
# Conclusion: Best results with HDF4 files with hand-built HDF5 on FC20, though no need to hand-build HDF4

/bin/rm -r -f ${DATA}/tmp/hdf5-1.8.13*
# aptitude install libhdf4-alt-dev
cd ${DATA}/tmp
wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/hdf5-1.8.13.tar.gz
tar xvzf hdf5-1.8.13.tar.gz
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.8.13
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
# NB: x86_64 compilations require -fPIC -m64 flags to avoid errors on shared libraries that link to libnetcdf, e.g., libnetcdf-perl: "/usr/bin/ld: /usr/local/lib/libnetcdf.a(putget.o): relocation R_X86_64_32S against `a local symbol' can not be used when making a shared object; recompile with -fPIC"
export CC='gcc'
export CFLAGS='-fPIC -m64'
export CPPFLAGS=''
export CXX='g++'
export CXXFLAGS='-fPIC -m64'
export FC='gfortran'
export F77='gfortran'
export F90='gfortran'
export FCFLAGS=''
export FFLAGS=''
export F90FLAGS=''
export LDFLAGS='-L/usr/local/lib'
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.8.13/hdf5
./configure --prefix=${HDF5_ROOT} --enable-cxx --enable-fortran > hdf5.configure.foo 2>&1
# 20070507 HDF5 --enable-cxx conflicts with --enable-parallel
# 20070507 HDF5 --enable-parallel requires parallel filesystem
# ./configure --prefix=${HDF5_ROOT} --enable-fortran --enable-parallel
make > hdf5.make.foo 2>&1
# make check > hdf5.check.foo 2>&1
scp hdf5.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install

# Do same for netCDF4 Fortran
cd ${DATA}/tmp
/bin/rm -r -f ${DATA}/tmp/netcdf-fortran
sudo /bin/rm -f ${NETCDF4_ROOT}/include/netcdf.mod ${NETCDF4_ROOT}/lib/libnetcdff.* 
cd ${DATA}/tmp/netcdf-fortran
make distclean
git pull
autoreconf -i -f
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdff.configure.foo 2>&1
mv -f config.log netcdff.config.log.foo
make > netcdff.make.foo 2>&1
make check > netcdff.check.foo 2>&1
scp netcdff.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/.libs/libnetcdff90.a ${NETCDF4_ROOT}/lib/libnetcdff90.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/.libs/libnetcdff.a ${NETCDF4_ROOT}/lib/libnetcdff.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/typesizes.mod ${NETCDF4_ROOT}/include/typesizes.mod.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/netcdf.mod ${NETCDF4_ROOT}/include/netcdf.mod.gfortran
make clean

# Do same for netCDF4 CXX (old interface, still required by ESMF_RegridWeightGen):
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-cxx-4.2.tar.gz
tar xvzf netcdf-cxx-4.2.tar.gz 
cd ${DATA}/tmp/netcdf-cxx-4.2
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdf_cxx.configure.foo 2>&1
make > netcdf_cxx.make.foo 2>&1
mv -f config.log netcdf_cxx.config.log.foo
make check > netcdf_cxx.check.foo 2>&1
scp netcdf_cxx.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install

# Do same for netCDF4 C++ (new interface)
cd ${DATA}/tmp/netcdf-cxx4
git pull
autoreconf -i -f
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdf_c++.configure.foo 2>&1
make > netcdf_c++.make.foo 2>&1
mv -f config.log netcdf_c++.config.log.foo
make check > netcdf_c++.check.foo 2>&1
scp netcdf_c++.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install

# Do same for netCDF4 C
sudo /bin/rm -r -f ${NETCDF4_ROOT}/include/netcdf.* ${NETCDF4_ROOT}/lib/libnetcdf.* 
cd ${DATA}/tmp/netcdf-c
make distclean
git pull
autoreconf -i -f
# NB: --enable-cxx-4 enables new netCDF4 C++ API
# NB: --enable-hdf4 enables reading HDF4 files (created with SD (Scientific Data) API) through netCDF4 API. NB: requires separately building HDF4 and libmfhdf.a, and header mfhdf.h must also be installed
# NB: --enable-hdf4 documented at http://www.unidata.ucar.edu/software/netcdf/docs/build_hdf4.html
# NB: --enable-hdf4 documented requires libhdf.a, libdf.a, libjpeg.a (and netCDF configure does not itself add -ljpeg)
# NB: --enable-logging allows HDF error message to print
# NB: --enable-separate-fortran builds libnetcdff.a (default with shared libraries)
# NB: --enable-shared builds shared libraries
# NB: --enable-v2 enables the version 2 interface used by netcdf-perl
# NB: --with-libcf builds libcf.a (apparently deprecated ~201307)
# NB: --with-udunits builds libudunits2.a (apparently deprecated ~201307)
# Without HDF4
# LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local --enable-shared --enable-dap --disable-hdf4 --enable-logging --enable-netcdf4 --enable-v2 > netcdf.configure.foo 2>&1
# With HDF4 on FC22:
CPPFLAGS='-I/usr/local/include -I/usr/include/hdf' LDFLAGS='-L/usr/local/lib -L/usr/lib64/hdf' LIBS='-ljpeg' ./configure --prefix=/usr/local --enable-shared --enable-dap --enable-hdf4 --enable-logging --enable-netcdf4 --enable-v2 > netcdf.configure.foo 2>&1
# With HDF4 on FC22, and without HDF warning logging (for ncdismember):
CPPFLAGS='-I/usr/local/include -I/usr/include/hdf' LDFLAGS='-L/usr/local/lib -L/usr/lib64/hdf' LIBS='-ljpeg' ./configure --prefix=/usr/local --enable-shared --enable-dap --enable-hdf4 --enable-netcdf4 --enable-v2 > netcdf.configure.foo 2>&1
# With HDF4 on Ubuntu:
# NB: libhdf4-dev appears broken for this. netCDF builds and links but executables hang
# sudo aptitude install libhdf4-dev
# Always install libhdf4 by hand on Ubuntu
CPPFLAGS='-I/usr/local/include' LDFLAGS='-L/usr/local/lib' LIBS='-ljpeg' ./configure --prefix=/usr/local --enable-shared --enable-dap --enable-hdf4 --enable-logging --enable-netcdf4 --enable-v2 > netcdf.configure.foo 2>&1
mv -f config.log netcdf.config.log.foo
make > netcdf.make.foo 2>&1
make check > netcdf.check.foo 2>&1
scp netcdf.*.foo dust.ess.uci.edu:/var/www/html/tmp
sudo make install
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-c/libsrc/.libs/libnetcdf3.a ${NETCDF4_ROOT}/lib/libnetcdf3.a.gcc
sudo cp ${DATA}/tmp/netcdf-c/libsrc4/.libs/libnetcdf4.a ${NETCDF4_ROOT}/lib/libnetcdf4.a.gcc
make clean
exit # Return to previous shell level
# Output saved to:
http://dust.ess.uci.edu/tmp/netcdf.check.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.configure.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.make.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.config.log.x86_64-unknown-linux-gnu.foo
#***********************************************************************
# 20150610: roulee.ess.uci.edu x86_64/EMT64 Fedora Core 22 gcc/gfortran 5.1.1 netcdf-4.4.0-rc1 HDF4 git 
#***********************************************************************

#***********************************************************************
# 20151024: roulee.ess.uci.edu x86_64/EMT64 Fedora Core 22 gcc/gfortran 5.1.1 netcdf-4.4.0-rc4 HDF4 git
#***********************************************************************
sudo aptitude install antlr bison doxygen flex gcc g++ gsl-bin libgsl0-dev libcurl4-gnutls-dev libexpat1-dev libxml2-dev netcdf-bin udunits-bin libudunits2-0 libudunits2-dev # Install netCDF prequisites
sudo yum install antlr antlr-C++ curl-devel libxml2-devel bison flex gcc gcc-c++ gcc-gfortran gsl gsl-devel librx librx-devel udunits2 udunits2-devel
cd ${DATA}/tmp
# svn co https://sub.unidata.ucar.edu/netcdf/trunk;mv trunk netcdf;/bin/cp ~/nco/autobld/ltmain.sh netcdf
# git clone git@github.com:Unidata/netcdf-c.git
# git clone git@github.com:Unidata/netcdf-fortran.git
# git clone git@github.com:Unidata/netcdf-cxx4.git

# 20140320: NB: NCO on FC20 works fine on HDF5 files with default system RPMs
# However, examining HDF4 files (based on default HDF4 RPMs) causes HDF5 library errors
# Not sure whether this is due to netcdf-4.3.2-rc1, system HDF5 (1.8.11) or what
# Do know that hand-building HDF5 1.8.12 and rebuilding netCDF and NCO on that does solve problem
# Conclusion: Best results with HDF4 files with hand-built HDF5 on FC20, though no need to hand-build HDF4

/bin/rm -r -f ${DATA}/tmp/hdf5-1.8.13*
# aptitude install libhdf4-alt-dev
cd ${DATA}/tmp
wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/hdf5-1.8.13.tar.gz
tar xvzf hdf5-1.8.13.tar.gz
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.8.13
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
# NB: x86_64 compilations require -fPIC -m64 flags to avoid errors on shared libraries that link to libnetcdf, e.g., libnetcdf-perl: "/usr/bin/ld: /usr/local/lib/libnetcdf.a(putget.o): relocation R_X86_64_32S against `a local symbol' can not be used when making a shared object; recompile with -fPIC"
export CC='gcc'
export CFLAGS='-fPIC -m64'
export CPPFLAGS=''
export CXX='g++'
export CXXFLAGS='-fPIC -m64'
export FC='gfortran'
export F77='gfortran'
export F90='gfortran'
export FCFLAGS=''
export FFLAGS=''
export F90FLAGS=''
export LDFLAGS='-L/usr/local/lib'
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.8.13/hdf5
# 20150622 Thread-safety is an HDF5 compile-time option
# Provides multiple concurrent reads by serializing its internal library calls, sacrificing their built-in concurrency
# Unclear whether this trade-off is worthwhile. Seems not to be.
# https://www.hdfgroup.org/hdf5-quest.html#mthread
# HDF5 --enable-threadsafe --with-pthread=$PTHREAD_DIR
./configure --prefix=${HDF5_ROOT} --enable-cxx --enable-fortran > hdf5.configure.foo 2>&1
# 20070507 HDF5 --enable-cxx conflicts with --enable-parallel
# 20070507 HDF5 --enable-parallel requires parallel filesystem
# ./configure --prefix=${HDF5_ROOT} --enable-fortran --enable-parallel
make > hdf5.make.foo 2>&1
# make check > hdf5.check.foo 2>&1
scp hdf5.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install

# Do same for netCDF4 Fortran
sudo /bin/rm -f ${NETCDF4_ROOT}/include/netcdf.mod ${NETCDF4_ROOT}/lib/libnetcdff.* 
cd ${DATA}/tmp/netcdf-fortran
make distclean
git pull
autoreconf -i -f
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdff.configure.foo 2>&1
mv -f config.log netcdff.config.log.foo
make > netcdff.make.foo 2>&1
make check > netcdff.check.foo 2>&1
scp netcdff.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/.libs/libnetcdff90.a ${NETCDF4_ROOT}/lib/libnetcdff90.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/.libs/libnetcdff.a ${NETCDF4_ROOT}/lib/libnetcdff.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/typesizes.mod ${NETCDF4_ROOT}/include/typesizes.mod.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/netcdf.mod ${NETCDF4_ROOT}/include/netcdf.mod.gfortran
make clean

# Do same for netCDF4 CXX (old interface, still required by ESMF_RegridWeightGen):
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-cxx-4.2.tar.gz
tar xvzf netcdf-cxx-4.2.tar.gz 
cd ${DATA}/tmp/netcdf-cxx-4.2
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdf_cxx.configure.foo 2>&1
make > netcdf_cxx.make.foo 2>&1
mv -f config.log netcdf_cxx.config.log.foo
make check > netcdf_cxx.check.foo 2>&1
scp netcdf_cxx.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install

# Do same for netCDF4 C++ (new interface)
cd ${DATA}/tmp/netcdf-cxx4
git pull
autoreconf -i -f
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdf_c++.configure.foo 2>&1
make > netcdf_c++.make.foo 2>&1
mv -f config.log netcdf_c++.config.log.foo
make check > netcdf_c++.check.foo 2>&1
scp netcdf_c++.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install

# Do same for netCDF4 C
sudo /bin/rm -r -f ${NETCDF4_ROOT}/include/netcdf.* ${NETCDF4_ROOT}/lib/libnetcdf.* 
cd ${DATA}/tmp/netcdf-c
make distclean
git pull
autoreconf -i -f
# NB: --enable-cxx-4 enables new netCDF4 C++ API
# NB: --enable-hdf4 enables reading HDF4 files (created with SD (Scientific Data) API) through netCDF4 API. NB: requires separately building HDF4 and libmfhdf.a, and header mfhdf.h must also be installed
# NB: --enable-hdf4 documented at http://www.unidata.ucar.edu/software/netcdf/docs/build_hdf4.html
# NB: --enable-hdf4 documented requires libhdf.a, libdf.a, libjpeg.a (and netCDF configure does not itself add -ljpeg)
# NB: --enable-logging allows HDF error message to print
# NB: --enable-separate-fortran builds libnetcdff.a (default with shared libraries)
# NB: --enable-shared builds shared libraries
# NB: --enable-v2 enables the version 2 interface used by netcdf-perl
# NB: --with-libcf builds libcf.a (apparently deprecated ~201307)
# NB: --with-udunits builds libudunits2.a (apparently deprecated ~201307)
# Without HDF4
# LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local --enable-shared --enable-dap --disable-hdf4 --enable-logging --enable-netcdf4 --enable-v2 > netcdf.configure.foo 2>&1
# With HDF4 on FC22:
CPPFLAGS='-I/usr/local/include -I/usr/include/hdf' LDFLAGS='-L/usr/local/lib -L/usr/lib64/hdf' LIBS='-ljpeg' ./configure --prefix=/usr/local --enable-shared --enable-dap --enable-hdf4 --enable-logging --enable-netcdf4 --enable-v2 > netcdf.configure.foo 2>&1
# With HDF4 on FC22, and without HDF warning logging (for ncdismember):
CPPFLAGS='-I/usr/local/include -I/usr/include/hdf' LDFLAGS='-L/usr/local/lib -L/usr/lib64/hdf' LIBS='-ljpeg' ./configure --prefix=/usr/local --enable-shared --enable-dap --enable-hdf4 --enable-netcdf4 --enable-v2 > netcdf.configure.foo 2>&1
# With HDF4 on Ubuntu:
# NB: libhdf4-dev appears broken for this. netCDF builds and links but executables hang
# sudo aptitude install libhdf4-dev
# Always install libhdf4 by hand on Ubuntu
CPPFLAGS='-I/usr/local/include' LDFLAGS='-L/usr/local/lib' LIBS='-ljpeg' ./configure --prefix=/usr/local --enable-shared --enable-dap --enable-hdf4 --enable-logging --enable-netcdf4 --enable-v2 > netcdf.configure.foo 2>&1
mv -f config.log netcdf.config.log.foo
make > netcdf.make.foo 2>&1
Make check > netcdf.check.foo 2>&1
scp netcdf.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-c/libsrc/.libs/libnetcdf3.a ${NETCDF4_ROOT}/lib/libnetcdf3.a.gcc
sudo cp ${DATA}/tmp/netcdf-c/libsrc4/.libs/libnetcdf4.a ${NETCDF4_ROOT}/lib/libnetcdf4.a.gcc
make clean
exit # Return to previous shell level
# Output saved to:
http://dust.ess.uci.edu/tmp/netcdf.check.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.configure.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.make.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.config.log.x86_64-unknown-linux-gnu.foo
#***********************************************************************
# 20151024: roulee.ess.uci.edu x86_64/EMT64 Fedora Core 22 gcc/gfortran 5.1.1 netcdf-4.4.0-rc4 HDF4 git
#***********************************************************************

#***********************************************************************
# 20151112: roulee.ess.uci.edu x86_64/EMT64 Fedora Core 23 gcc/gfortran 5.1.1 netcdf-4.4.0-rc5 HDF4 git
#***********************************************************************
sudo aptitude install antlr bison doxygen flex gcc g++ gsl-bin libgsl0-dev libcurl4-gnutls-dev libexpat1-dev libxml2-dev netcdf-bin udunits-bin libudunits2-0 libudunits2-dev # Install netCDF prequisites
sudo yum install antlr antlr-C++ curl-devel libxml2-devel bison flex gcc gcc-c++ gcc-gfortran gsl gsl-devel librx librx-devel udunits2 udunits2-devel
cd ${DATA}/tmp
# svn co https://sub.unidata.ucar.edu/netcdf/trunk;mv trunk netcdf;/bin/cp ~/nco/autobld/ltmain.sh netcdf
# git clone git@github.com:Unidata/netcdf-c.git
# git clone git@github.com:Unidata/netcdf-fortran.git
# git clone git@github.com:Unidata/netcdf-cxx4.git

# 20140320: NB: NCO on FC20 works fine on HDF5 files with default system RPMs
# However, examining HDF4 files (based on default HDF4 RPMs) causes HDF5 library errors
# Not sure whether this is due to netcdf-4.3.2-rc1, system HDF5 (1.8.11) or what
# Do know that hand-building HDF5 1.8.12 and rebuilding netCDF and NCO on that does solve problem
# Conclusion: Best results with HDF4 files with hand-built HDF5 on FC20, though no need to hand-build HDF4

/bin/rm -r -f ${DATA}/tmp/hdf5-1.8.13*
# aptitude install libhdf4-alt-dev
cd ${DATA}/tmp
wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/hdf5-1.8.13.tar.gz
tar xvzf hdf5-1.8.13.tar.gz
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.8.13
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
# NB: x86_64 compilations require -fPIC -m64 flags to avoid errors on shared libraries that link to libnetcdf, e.g., libnetcdf-perl: "/usr/bin/ld: /usr/local/lib/libnetcdf.a(putget.o): relocation R_X86_64_32S against `a local symbol' can not be used when making a shared object; recompile with -fPIC"
export CC='gcc'
export CFLAGS='-fPIC -m64'
export CPPFLAGS=''
export CXX='g++'
export CXXFLAGS='-fPIC -m64'
export FC='gfortran'
export F77='gfortran'
export F90='gfortran'
export FCFLAGS=''
export FFLAGS=''
export F90FLAGS=''
export LDFLAGS='-L/usr/local/lib'
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.8.13/hdf5
# 20150622 Thread-safety is an HDF5 compile-time option
# Provides multiple concurrent reads by serializing its internal library calls, sacrificing their built-in concurrency
# Unclear whether this trade-off is worthwhile. Seems not to be.
# https://www.hdfgroup.org/hdf5-quest.html#mthread
# HDF5 --enable-threadsafe --with-pthread=$PTHREAD_DIR
./configure --prefix=${HDF5_ROOT} --enable-cxx --enable-fortran > hdf5.configure.foo 2>&1
# 20070507 HDF5 --enable-cxx conflicts with --enable-parallel
# 20070507 HDF5 --enable-parallel requires parallel filesystem
# ./configure --prefix=${HDF5_ROOT} --enable-fortran --enable-parallel
make > hdf5.make.foo 2>&1
# make check > hdf5.check.foo 2>&1
scp hdf5.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install

# Do same for netCDF4 Fortran
sudo /bin/rm -f ${NETCDF4_ROOT}/include/netcdf.mod ${NETCDF4_ROOT}/lib/libnetcdff.* 
cd ${DATA}/tmp/netcdf-fortran
make distclean
git pull
autoreconf -i -f
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdff.configure.foo 2>&1
mv -f config.log netcdff.config.log.foo
make > netcdff.make.foo 2>&1
make check > netcdff.check.foo 2>&1
scp netcdff.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/.libs/libnetcdff90.a ${NETCDF4_ROOT}/lib/libnetcdff90.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/.libs/libnetcdff.a ${NETCDF4_ROOT}/lib/libnetcdff.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/typesizes.mod ${NETCDF4_ROOT}/include/typesizes.mod.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/netcdf.mod ${NETCDF4_ROOT}/include/netcdf.mod.gfortran
make clean

# Do same for netCDF4 CXX (old interface, still required by ESMF_RegridWeightGen):
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-cxx-4.2.tar.gz
tar xvzf netcdf-cxx-4.2.tar.gz 
cd ${DATA}/tmp/netcdf-cxx-4.2
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdf_cxx.configure.foo 2>&1
make > netcdf_cxx.make.foo 2>&1
mv -f config.log netcdf_cxx.config.log.foo
make check > netcdf_cxx.check.foo 2>&1
scp netcdf_cxx.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install

# Do same for netCDF4 C++ (new interface)
cd ${DATA}/tmp/netcdf-cxx4
git pull
autoreconf -i -f
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdf_c++.configure.foo 2>&1
make > netcdf_c++.make.foo 2>&1
mv -f config.log netcdf_c++.config.log.foo
make check > netcdf_c++.check.foo 2>&1
scp netcdf_c++.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install

# Do same for netCDF4 C
sudo /bin/rm -r -f ${NETCDF4_ROOT}/include/netcdf.* ${NETCDF4_ROOT}/lib/libnetcdf.* 
cd ${DATA}/tmp/netcdf-c
make distclean
git pull
autoreconf -i -f
# NB: --enable-cxx-4 enables new netCDF4 C++ API
# NB: --enable-hdf4 enables reading HDF4 files (created with SD (Scientific Data) API) through netCDF4 API. NB: requires separately building HDF4 and libmfhdf.a, and header mfhdf.h must also be installed
# NB: --enable-hdf4 documented at http://www.unidata.ucar.edu/software/netcdf/docs/build_hdf4.html
# NB: --enable-hdf4 documented requires libhdf.a, libdf.a, libjpeg.a (and netCDF configure does not itself add -ljpeg)
# NB: --enable-logging allows HDF error message to print
# NB: --enable-separate-fortran builds libnetcdff.a (default with shared libraries)
# NB: --enable-shared builds shared libraries
# NB: --enable-v2 enables the version 2 interface used by netcdf-perl
# NB: --with-libcf builds libcf.a (apparently deprecated ~201307)
# NB: --with-udunits builds libudunits2.a (apparently deprecated ~201307)
# Without HDF4
# LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local --enable-shared --enable-dap --disable-hdf4 --enable-logging --enable-netcdf4 --enable-v2 > netcdf.configure.foo 2>&1
# With HDF4 on FC23:
CPPFLAGS='-I/usr/local/include -I/usr/include/hdf' LDFLAGS='-L/usr/local/lib -L/usr/lib64/hdf' LIBS='-ljpeg' ./configure --prefix=/usr/local --enable-shared --enable-dap --enable-hdf4 --enable-logging --enable-netcdf4 --enable-v2 > netcdf.configure.foo 2>&1
# With HDF4 on FC23, and without HDF warning logging (for ncdismember):
CPPFLAGS='-I/usr/local/include -I/usr/include/hdf' LDFLAGS='-L/usr/local/lib -L/usr/lib64/hdf' LIBS='-ljpeg' ./configure --prefix=/usr/local --enable-shared --enable-dap --enable-hdf4 --enable-netcdf4 --enable-v2 > netcdf.configure.foo 2>&1
# With HDF4 on Ubuntu:
# NB: libhdf4-dev appears broken for this. netCDF builds and links but executables hang
# sudo aptitude install libhdf4-dev
# Always install libhdf4 by hand on Ubuntu
CPPFLAGS='-I/usr/local/include' LDFLAGS='-L/usr/local/lib' LIBS='-ljpeg' ./configure --prefix=/usr/local --enable-shared --enable-dap --enable-hdf4 --enable-logging --enable-netcdf4 --enable-v2 > netcdf.configure.foo 2>&1
mv -f config.log netcdf.config.log.foo
make > netcdf.make.foo 2>&1
make check > netcdf.check.foo 2>&1
scp netcdf.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-c/libsrc/.libs/libnetcdf3.a ${NETCDF4_ROOT}/lib/libnetcdf3.a.gcc
sudo cp ${DATA}/tmp/netcdf-c/libsrc4/.libs/libnetcdf4.a ${NETCDF4_ROOT}/lib/libnetcdf4.a.gcc
make clean
exit # Return to previous shell level
# Output saved to:
http://dust.ess.uci.edu/tmp/netcdf.check.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.configure.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.make.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.config.log.x86_64-unknown-linux-gnu.foo
#***********************************************************************
# 20151112: roulee.ess.uci.edu x86_64/EMT64 Fedora Core 23 gcc/gfortran 5.1.1 netcdf-4.4.0-rc5 HDF4 git
#***********************************************************************

#***********************************************************************
# 20160114: roulee.ess.uci.edu x86_64/EMT64 Fedora Core 23 gcc/gfortran 5.3.1 netcdf-4.4.0 HDF4 git
#***********************************************************************
sudo aptitude install antlr bison doxygen flex gcc g++ gsl-bin libgsl0-dev libcurl4-gnutls-dev libexpat1-dev libxml2-dev netcdf-bin udunits-bin libudunits2-0 libudunits2-dev # Install netCDF prequisites
sudo yum install antlr antlr-C++ curl-devel libxml2-devel bison flex gcc gcc-c++ gcc-gfortran gsl gsl-devel librx librx-devel udunits2 udunits2-devel
cd ${DATA}/tmp
# svn co https://sub.unidata.ucar.edu/netcdf/trunk;mv trunk netcdf;/bin/cp ~/nco/autobld/ltmain.sh netcdf
# git clone git@github.com:Unidata/netcdf-c.git
# git clone git@github.com:Unidata/netcdf-fortran.git
# git clone git@github.com:Unidata/netcdf-cxx4.git

# 20140320: NB: NCO on FC20 works fine on HDF5 files with default system RPMs
# However, examining HDF4 files (based on default HDF4 RPMs) causes HDF5 library errors
# Not sure whether this is due to netcdf-4.3.2-rc1, system HDF5 (1.8.11) or what
# Do know that hand-building HDF5 1.8.12 and rebuilding netCDF and NCO on that does solve problem
# Conclusion: Best results with HDF4 files with hand-built HDF5 on FC20, though no need to hand-build HDF4

/bin/rm -r -f ${DATA}/tmp/hdf5-1.8.13*
# aptitude install libhdf4-alt-dev
cd ${DATA}/tmp
wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/hdf5-1.8.13.tar.gz
tar xvzf hdf5-1.8.13.tar.gz
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.8.13
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
# NB: x86_64 compilations require -fPIC -m64 flags to avoid errors on shared libraries that link to libnetcdf, e.g., libnetcdf-perl: "/usr/bin/ld: /usr/local/lib/libnetcdf.a(putget.o): relocation R_X86_64_32S against `a local symbol' can not be used when making a shared object; recompile with -fPIC"
export CC='gcc'
export CFLAGS='-fPIC -m64'
export CPPFLAGS=''
export CXX='g++'
export CXXFLAGS='-fPIC -m64'
export FC='gfortran'
export F77='gfortran'
export F90='gfortran'
export FCFLAGS=''
export FFLAGS=''
export F90FLAGS=''
export LDFLAGS='-L/usr/local/lib'
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.8.13/hdf5
# 20150622 Thread-safety is an HDF5 compile-time option
# Provides multiple concurrent reads by serializing its internal library calls, sacrificing their built-in concurrency
# Unclear whether this trade-off is worthwhile. Seems not to be.
# https://www.hdfgroup.org/hdf5-quest.html#mthread
# HDF5 --enable-threadsafe --with-pthread=$PTHREAD_DIR
./configure --prefix=${HDF5_ROOT} --enable-cxx --enable-fortran > hdf5.configure.foo 2>&1
# 20070507 HDF5 --enable-cxx conflicts with --enable-parallel
# 20070507 HDF5 --enable-parallel requires parallel filesystem
# ./configure --prefix=${HDF5_ROOT} --enable-fortran --enable-parallel
make > hdf5.make.foo 2>&1
# make check > hdf5.check.foo 2>&1
scp hdf5.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install

# Do same for netCDF4 Fortran
sudo /bin/rm -f ${NETCDF4_ROOT}/include/netcdf.mod ${NETCDF4_ROOT}/lib/libnetcdff.* 
cd ${DATA}/tmp/netcdf-fortran
make distclean
git pull
autoreconf -i -f
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdff.configure.foo 2>&1
mv -f config.log netcdff.config.log.foo
make > netcdff.make.foo 2>&1
make check > netcdff.check.foo 2>&1
scp netcdff.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/.libs/libnetcdff90.a ${NETCDF4_ROOT}/lib/libnetcdff90.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/.libs/libnetcdff.a ${NETCDF4_ROOT}/lib/libnetcdff.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/typesizes.mod ${NETCDF4_ROOT}/include/typesizes.mod.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/netcdf.mod ${NETCDF4_ROOT}/include/netcdf.mod.gfortran
make clean

# Do same for netCDF4 CXX (old interface, still required by ESMF_RegridWeightGen and by TempestRemap):
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-cxx-4.2.tar.gz
tar xvzf netcdf-cxx-4.2.tar.gz 
cd ${DATA}/tmp/netcdf-cxx-4.2
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdf_cxx.configure.foo 2>&1
make > netcdf_cxx.make.foo 2>&1
mv -f config.log netcdf_cxx.config.log.foo
make check > netcdf_cxx.check.foo 2>&1
scp netcdf_cxx.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install

# Do same for netCDF4 C++ (new interface)
cd ${DATA}/tmp/netcdf-cxx4
git pull
autoreconf -i -f
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdf_c++.configure.foo 2>&1
make > netcdf_c++.make.foo 2>&1
mv -f config.log netcdf_c++.config.log.foo
make check > netcdf_c++.check.foo 2>&1
scp netcdf_c++.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install

# Do same for netCDF4 C
sudo /bin/rm -r -f ${NETCDF4_ROOT}/include/netcdf.* ${NETCDF4_ROOT}/lib/libnetcdf.* 
cd ${DATA}/tmp/netcdf-c
make distclean
git pull
autoreconf -i -f
# NB: --enable-cxx-4 enables new netCDF4 C++ API
# NB: --enable-hdf4 enables reading HDF4 files (created with SD (Scientific Data) API) through netCDF4 API. NB: requires separately building HDF4 and libmfhdf.a, and header mfhdf.h must also be installed
# NB: --enable-hdf4 documented at http://www.unidata.ucar.edu/software/netcdf/docs/build_hdf4.html
# NB: --enable-hdf4 documented requires libhdf.a, libdf.a, libjpeg.a (and netCDF configure does not itself add -ljpeg)
# NB: --enable-logging allows HDF error message to print
# NB: --enable-separate-fortran builds libnetcdff.a (default with shared libraries)
# NB: --enable-shared builds shared libraries
# NB: --enable-v2 enables the version 2 interface used by netcdf-perl
# NB: --with-libcf builds libcf.a (apparently deprecated ~201307)
# NB: --with-udunits builds libudunits2.a (apparently deprecated ~201307)
# Without HDF4
# LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local --enable-shared --enable-dap --disable-hdf4 --enable-logging --enable-netcdf4 --enable-v2 > netcdf.configure.foo 2>&1
# With HDF4 on FC23:
CPPFLAGS='-I/usr/local/include -I/usr/include/hdf' LDFLAGS='-L/usr/local/lib -L/usr/lib64/hdf' LIBS='-ljpeg' ./configure --prefix=/usr/local --enable-shared --enable-dap --enable-hdf4 --enable-logging --enable-netcdf4 --enable-v2 > netcdf.configure.foo 2>&1
# With HDF4 on FC23, and without HDF warning logging (for ncdismember):
CPPFLAGS='-I/usr/local/include -I/usr/include/hdf' LDFLAGS='-L/usr/local/lib -L/usr/lib64/hdf' LIBS='-ljpeg' ./configure --prefix=/usr/local --enable-shared --enable-dap --enable-hdf4 --enable-netcdf4 --enable-v2 > netcdf.configure.foo 2>&1
# With HDF4 on Ubuntu:
# NB: libhdf4-dev appears broken for this. netCDF builds and links but executables hang
# sudo aptitude install libhdf4-dev
# Always install libhdf4 by hand on Ubuntu
CPPFLAGS='-I/usr/local/include' LDFLAGS='-L/usr/local/lib' LIBS='-ljpeg' ./configure --prefix=/usr/local --enable-shared --enable-dap --enable-hdf4 --enable-logging --enable-netcdf4 --enable-v2 > netcdf.configure.foo 2>&1
mv -f config.log netcdf.config.log.foo
make > netcdf.make.foo 2>&1
make check > netcdf.check.foo 2>&1
scp netcdf.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-c/libsrc/.libs/libnetcdf3.a ${NETCDF4_ROOT}/lib/libnetcdf3.a.gcc
sudo cp ${DATA}/tmp/netcdf-c/libsrc4/.libs/libnetcdf4.a ${NETCDF4_ROOT}/lib/libnetcdf4.a.gcc
make clean
exit # Return to previous shell level
# Output saved to:
http://dust.ess.uci.edu/tmp/netcdf.check.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.configure.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.make.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.config.log.x86_64-unknown-linux-gnu.foo
#***********************************************************************
# 20160114: roulee.ess.uci.edu x86_64/EMT64 Fedora Core 23 gcc/gfortran 5.3.1 netcdf-4.4.0 HDF4 git
#***********************************************************************

#***********************************************************************
# 20160627: frazil.ess.uci.edu x86_64/EMT64 Fedora Core 24 gcc/gfortran 6.1.1 netcdf-4.4.1-RC3 HDF4 git
#***********************************************************************
sudo aptitude install antlr bison doxygen flex gcc g++ gsl-bin libgsl0-dev libcurl4-gnutls-dev libexpat1-dev libxml2-dev netcdf-bin udunits-bin libudunits2-0 libudunits2-dev # Install netCDF prequisites
sudo yum install antlr antlr-C++ curl-devel libxml2-devel bison flex gcc gcc-c++ gcc-gfortran gsl gsl-devel librx librx-devel udunits2 udunits2-devel
cd ${DATA}/tmp
# svn co https://sub.unidata.ucar.edu/netcdf/trunk;mv trunk netcdf;/bin/cp ~/nco/autobld/ltmain.sh netcdf
# git clone git@github.com:Unidata/netcdf-c.git
# git clone git@github.com:Unidata/netcdf-fortran.git
# git clone git@github.com:Unidata/netcdf-cxx4.git

# 20140320: NB: NCO on FC20 works fine on HDF5 files with default system RPMs
# However, examining HDF4 files (based on default HDF4 RPMs) causes HDF5 library errors
# Not sure whether this is due to netcdf-4.3.2-rc1, system HDF5 (1.8.11) or what
# Do know that hand-building HDF5 1.8.12 and rebuilding netCDF and NCO on that does solve problem
# Conclusion: Best results with HDF4 files with hand-built HDF5 on FC20, though no need to hand-build HDF4

/bin/rm -r -f ${DATA}/tmp/hdf5-1.8.13*
# aptitude install libhdf4-alt-dev
cd ${DATA}/tmp
wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/hdf5-1.8.13.tar.gz
tar xvzf hdf5-1.8.13.tar.gz
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.8.13
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
# NB: x86_64 compilations require -fPIC -m64 flags to avoid errors on shared libraries that link to libnetcdf, e.g., libnetcdf-perl: "/usr/bin/ld: /usr/local/lib/libnetcdf.a(putget.o): relocation R_X86_64_32S against `a local symbol' can not be used when making a shared object; recompile with -fPIC"
export CC='gcc'
export CFLAGS='-fPIC -m64'
export CPPFLAGS=''
export CXX='g++'
export CXXFLAGS='-fPIC -m64'
export FC='gfortran'
export F77='gfortran'
export F90='gfortran'
export FCFLAGS=''
export FFLAGS=''
export F90FLAGS=''
export LDFLAGS='-L/usr/local/lib'
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.8.13/hdf5
# 20150622 Thread-safety is an HDF5 compile-time option
# Provides multiple concurrent reads by serializing its internal library calls, sacrificing their built-in concurrency
# Unclear whether this trade-off is worthwhile. Seems not to be.
# https://www.hdfgroup.org/hdf5-quest.html#mthread
# HDF5 --enable-threadsafe --with-pthread=$PTHREAD_DIR
./configure --prefix=${HDF5_ROOT} --enable-cxx --enable-fortran > hdf5.configure.foo 2>&1
# 20070507 HDF5 --enable-cxx conflicts with --enable-parallel
# 20070507 HDF5 --enable-parallel requires parallel filesystem
# ./configure --prefix=${HDF5_ROOT} --enable-fortran --enable-parallel
make > hdf5.make.foo 2>&1
# make check > hdf5.check.foo 2>&1
scp hdf5.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install

# Do same for netCDF4 Fortran
sudo /bin/rm -f ${NETCDF4_ROOT}/include/netcdf.mod ${NETCDF4_ROOT}/lib/libnetcdff.* 
cd ${DATA}/tmp/netcdf-fortran
make distclean
git pull
autoreconf -i -f
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdff.configure.foo 2>&1
mv -f config.log netcdff.config.log.foo
make > netcdff.make.foo 2>&1
make check > netcdff.check.foo 2>&1
scp netcdff.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/.libs/libnetcdff90.a ${NETCDF4_ROOT}/lib/libnetcdff90.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/.libs/libnetcdff.a ${NETCDF4_ROOT}/lib/libnetcdff.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/typesizes.mod ${NETCDF4_ROOT}/include/typesizes.mod.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/netcdf.mod ${NETCDF4_ROOT}/include/netcdf.mod.gfortran
make clean

# Do same for netCDF4 CXX (old interface, still required by ESMF_RegridWeightGen and by TempestRemap):
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-cxx-4.2.tar.gz
tar xvzf netcdf-cxx-4.2.tar.gz 
cd ${DATA}/tmp/netcdf-cxx-4.2
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdf_cxx.configure.foo 2>&1
make > netcdf_cxx.make.foo 2>&1
mv -f config.log netcdf_cxx.config.log.foo
make check > netcdf_cxx.check.foo 2>&1
scp netcdf_cxx.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install

# Do same for netCDF4 C++ (new interface)
cd ${DATA}/tmp/netcdf-cxx4
git pull
autoreconf -i -f
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdf_c++.configure.foo 2>&1
make > netcdf_c++.make.foo 2>&1
mv -f config.log netcdf_c++.config.log.foo
make check > netcdf_c++.check.foo 2>&1
scp netcdf_c++.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install

# Do same for netCDF4 C
sudo /bin/rm -r -f ${NETCDF4_ROOT}/include/netcdf.* ${NETCDF4_ROOT}/lib/libnetcdf.* 
cd ${DATA}/tmp/netcdf-c
make distclean
git pull
autoreconf -i -f
# NB: --enable-cxx-4 enables new netCDF4 C++ API
# NB: --enable-hdf4 enables reading HDF4 files (created with SD (Scientific Data) API) through netCDF4 API. NB: requires separately building HDF4 and libmfhdf.a, and header mfhdf.h must also be installed
# NB: --enable-hdf4 documented at http://www.unidata.ucar.edu/software/netcdf/docs/build_hdf4.html
# NB: --enable-hdf4 documented requires libhdf.a, libdf.a, libjpeg.a (and netCDF configure does not itself add -ljpeg)
# NB: --enable-logging allows HDF error message to print
# NB: --enable-separate-fortran builds libnetcdff.a (default with shared libraries)
# NB: --enable-shared builds shared libraries
# NB: --enable-v2 enables the version 2 interface used by netcdf-perl
# NB: --with-libcf builds libcf.a (apparently deprecated ~201307)
# NB: --with-udunits builds libudunits2.a (apparently deprecated ~201307)
# Without HDF4
# LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local --enable-shared --enable-dap --disable-hdf4 --enable-logging --enable-netcdf4 --enable-v2 > netcdf.configure.foo 2>&1
# With HDF4 on FC24:
CPPFLAGS='-I/usr/local/include -I/usr/include/hdf' LDFLAGS='-L/usr/local/lib -L/usr/lib64/hdf' LIBS='-ljpeg' ./configure --prefix=/usr/local --enable-shared --enable-dap --enable-hdf4 --enable-logging --enable-netcdf4 --enable-v2 > netcdf.configure.foo 2>&1
# With HDF4 on FC24, and without HDF warning logging (for ncdismember):
CPPFLAGS='-I/usr/local/include -I/usr/include/hdf' LDFLAGS='-L/usr/local/lib -L/usr/lib64/hdf' LIBS='-ljpeg' ./configure --prefix=/usr/local --enable-shared --enable-dap --enable-hdf4 --enable-netcdf4 --enable-v2 > netcdf.configure.foo 2>&1
# With HDF4 on Ubuntu:
# NB: libhdf4-dev appears broken for this. netCDF builds and links but executables hang
# sudo aptitude install libhdf4-dev
# Always install libhdf4 by hand on Ubuntu
CPPFLAGS='-I/usr/local/include' LDFLAGS='-L/usr/local/lib' LIBS='-ljpeg' ./configure --prefix=/usr/local --enable-shared --enable-dap --enable-hdf4 --enable-logging --enable-netcdf4 --enable-v2 > netcdf.configure.foo 2>&1
mv -f config.log netcdf.config.log.foo
make > netcdf.make.foo 2>&1
make check > netcdf.check.foo 2>&1
scp netcdf.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-c/libsrc/.libs/libnetcdf3.a ${NETCDF4_ROOT}/lib/libnetcdf3.a.gcc
sudo cp ${DATA}/tmp/netcdf-c/libsrc4/.libs/libnetcdf4.a ${NETCDF4_ROOT}/lib/libnetcdf4.a.gcc
make clean
exit # Return to previous shell level
# Output saved to:
http://dust.ess.uci.edu/tmp/netcdf.check.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.configure.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.make.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.config.log.x86_64-unknown-linux-gnu.foo
#***********************************************************************
# 20160627: frazil.ess.uci.edu x86_64/EMT64 Fedora Core 24 gcc/gfortran 6.1.1 netcdf-4.4.4-RC3 HDF4 git
#***********************************************************************

#***********************************************************************
# 20170917: skyglow.ess.uci.edu x86_64/EMT64 Fedora Core 26 gcc/gfortran 7.1.1 netcdf-4.4.1.1 HDF4 git pnetcdf
#***********************************************************************
sudo aptitude install antlr bison doxygen flex gcc g++ gsl-bin libgsl0-dev libcurl4-gnutls-dev libexpat1-dev libxml2-dev netcdf-bin udunits-bin libudunits2-0 libudunits2-dev # Install netCDF prequisites
sudo yum install antlr antlr-C++ curl-devel libxml2-devel bison flex gcc gcc-c++ gcc-gfortran gsl gsl-devel librx librx-devel udunits2 udunits2-devel
cd ${DATA}/tmp
# svn co https://sub.unidata.ucar.edu/netcdf/trunk;mv trunk netcdf;/bin/cp ~/nco/autobld/ltmain.sh netcdf
# git clone git@github.com:Unidata/netcdf-c.git
# git clone git@github.com:Unidata/netcdf-fortran.git
# git clone git@github.com:Unidata/netcdf-cxx4.git

# 20140320: NB: NCO on FC20 works fine on HDF5 files with default system RPMs
# However, examining HDF4 files (based on default HDF4 RPMs) causes HDF5 library errors
# Not sure whether this is due to netcdf-4.3.2-rc1, system HDF5 (1.8.11) or what
# Do know that hand-building HDF5 1.8.12 and rebuilding netCDF and NCO on that does solve problem
# Conclusion: Best results with HDF4 files with hand-built HDF5 on FC20, though no need to hand-build HDF4

/bin/rm -r -f ${DATA}/tmp/hdf5-1.8.19*
cd ${DATA}/tmp
#wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/hdf5-1.8.19.tar.gz
# https://support.hdfgroup.org/HDF5/release/obtainsrc518.html#src
scp dust.ess.uci.edu:data/tmp/hdf5-1.8.19.tar.gz .
tar xvzf hdf5-1.8.19.tar.gz
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.8.19
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
# NB: x86_64 compilations require -fPIC -m64 flags to avoid errors on shared libraries that link to libnetcdf, e.g., libnetcdf-perl: "/usr/bin/ld: /usr/local/lib/libnetcdf.a(putget.o): relocation R_X86_64_32S against `a local symbol' can not be used when making a shared object; recompile with -fPIC"
export MPI_ROOT=/usr/lib64/openmpi
export PATH=${MPI_ROOT}/bin\:${PATH}
export LD_LIBRARY_PATH=${MPI_ROOT}/lib\:${LD_LIBRARY_PATH}
export CC='mpicc'
export CFLAGS='-fPIC -m64'
export CPPFLAGS=''
export CXX='mpiCC'
export CXXFLAGS='-fPIC -m64'
export FC='mpif90'
export F77='mpif77'
export F90='mpif90'
export FCFLAGS=''
export FFLAGS=''
export F90FLAGS=''
export LDFLAGS='-L/usr/local/parallel/lib'
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local/parallel
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
./configure --prefix=${HDF5_ROOT} --enable-fortran > hdf5.configure.foo 2>&1
# 20070507 and 20140604 HDF5 --enable-cxx conflicts with --enable-parallel
# 20070507 HDF5 --enable-parallel requires parallel filesystem
# ./configure --prefix=${HDF5_ROOT} --enable-fortran --enable-parallel
make > hdf5.make.foo 2>&1
# make check > hdf5.check.foo 2>&1
scp hdf5.*.foo dust.ess.uci.edu:Sites/tmp
# 20170919 Manually link openmpi mpif90 to /bin so sudo make install finds it and succeeds:
cd /bin;sudo ln -s /usr/lib64/openmpi/bin/mpif90 mpif90
cd /bin;sudo ln -s /usr/lib64/openmpi/bin/mpif77 mpif77
sudo make install

# pnetCDF
cd ${DATA}/tmp
/bin/rm -r -f ${DATA}/tmp/parallel-netcdf-1.8.1
#wget -c http://cucis.ece.northwestern.edu/projects/PnetCDF/Release/parallel-netcdf-1.8.1.tar.gz
tar xvzf parallel-netcdf-1.8.1.tar.gz
cd ${DATA}/tmp/parallel-netcdf-1.8.1
make distclean
./configure --with-mpi=${MPI_ROOT} --prefix=/usr/local/parallel > pnetcdf.configure.foo 2>&1
make > pnetcdf.make.foo 2>&1
sudo make install
make check > pnetcdf.check.foo 2>&1

# Do same for netCDF4 Fortran
sudo /bin/rm -f ${NETCDF4_ROOT}/include/netcdf.mod ${NETCDF4_ROOT}/lib/libnetcdff.* 
cd ${DATA}/tmp/netcdf-fortran
make distclean
git pull
autoreconf -i -f
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local/parallel --enable-parallel-tests > netcdff.configure.foo 2>&1
mv -f config.log netcdff.config.log.foo
make > netcdff.make.foo 2>&1
make check > netcdff.check.foo 2>&1
scp netcdff.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/.libs/libnetcdff90.a ${NETCDF4_ROOT}/lib/libnetcdff90.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/.libs/libnetcdff.a ${NETCDF4_ROOT}/lib/libnetcdff.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/typesizes.mod ${NETCDF4_ROOT}/include/typesizes.mod.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/netcdf.mod ${NETCDF4_ROOT}/include/netcdf.mod.gfortran
make clean

# Do same for netCDF4 CXX (old interface, still required by ESMF_RegridWeightGen and by TempestRemap):
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-cxx-4.2.tar.gz
tar xvzf netcdf-cxx-4.2.tar.gz 
cd ${DATA}/tmp/netcdf-cxx-4.2
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdf_cxx.configure.foo 2>&1
make > netcdf_cxx.make.foo 2>&1
mv -f config.log netcdf_cxx.config.log.foo
make check > netcdf_cxx.check.foo 2>&1
scp netcdf_cxx.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install

# Do same for netCDF4 C++ (new interface)
cd ${DATA}/tmp/netcdf-cxx4
git pull
autoreconf -i -f
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdf_c++.configure.foo 2>&1
make > netcdf_c++.make.foo 2>&1
mv -f config.log netcdf_c++.config.log.foo
make check > netcdf_c++.check.foo 2>&1
scp netcdf_c++.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install

# Do same for netCDF4 C
sudo /bin/rm -r -f ${NETCDF4_ROOT}/include/netcdf.* ${NETCDF4_ROOT}/lib/libnetcdf.* 
cd ${DATA}/tmp/netcdf-c
make distclean
git pull
autoreconf -i -f
# NB: --enable-cxx-4 enables new netCDF4 C++ API
# NB: --enable-hdf4 enables reading HDF4 files (created with SD (Scientific Data) API) through netCDF4 API. NB: requires separately building HDF4 and libmfhdf.a, and header mfhdf.h must also be installed
# NB: --enable-hdf4 documented at http://www.unidata.ucar.edu/software/netcdf/docs/build_hdf4.html
# NB: --enable-hdf4 documented requires libhdf.a, libdf.a, libjpeg.a (and netCDF configure does not itself add -ljpeg)
# NB: --enable-logging allows HDF error message to print
# NB: --enable-pnetcdf build with parallel I/O for classic files
# NB: --enable-shared builds shared libraries (parallel builds must use --disable-shared)
# NB: --enable-v2 enables the version 2 interface used by netcdf-perl
# NB: --with-libcf builds libcf.a (apparently deprecated ~201307)
# With HDF4 on FC26:
CPPFLAGS='-I/usr/local/parallel/include -I/usr/include/hdf' LDFLAGS='-L/usr/local/parallel/lib -L/usr/lib64/hdf' LIBS='-ljpeg' ./configure --prefix=/usr/local/parallel --disable-shared --enable-dap --enable-hdf4 --enable-logging --enable-netcdf4 --enable-parallel-tests --enable-pnetcdf --enable-v2 > netcdf.configure.foo 2>&1
mv -f config.log netcdf.config.log.foo
make > netcdf.make.foo 2>&1
make check > netcdf.check.foo 2>&1
scp netcdf.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-c/libsrc/.libs/libnetcdf3.a ${NETCDF4_ROOT}/lib/libnetcdf3.a.gcc
sudo cp ${DATA}/tmp/netcdf-c/libsrc4/.libs/libnetcdf4.a ${NETCDF4_ROOT}/lib/libnetcdf4.a.gcc
make clean
exit # Return to previous shell level
# Output saved to:
http://dust.ess.uci.edu/tmp/netcdf.check.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.configure.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.make.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.config.log.x86_64-unknown-linux-gnu.foo
#***********************************************************************
# 20170917: skyglow.ess.uci.edu x86_64/EMT64 Fedora Core 26 gcc/gfortran 7.1.1 netcdf-4.4.1.1 HDF4 git pnetcdf
#***********************************************************************

#***********************************************************************
# 20170930: skyglow.ess.uci.edu x86_64/EMT64 Fedora Core 26 gcc/gfortran 7.1.1 netcdf-4.5.0-rc3 HDF4 git
#***********************************************************************
sudo aptitude install antlr bison doxygen flex gcc g++ gsl-bin libgsl0-dev libcurl4-gnutls-dev libexpat1-dev libxml2-dev netcdf-bin udunits-bin libudunits2-0 libudunits2-dev # Install netCDF prequisites
sudo yum install antlr antlr-C++ curl-devel libxml2-devel bison flex gcc gcc-c++ gcc-gfortran gsl gsl-devel librx librx-devel udunits2 udunits2-devel
cd ${DATA}/tmp
# svn co https://sub.unidata.ucar.edu/netcdf/trunk;mv trunk netcdf;/bin/cp ~/nco/autobld/ltmain.sh netcdf
# git clone git@github.com:Unidata/netcdf-c.git
# git clone git@github.com:Unidata/netcdf-fortran.git
# git clone git@github.com:Unidata/netcdf-cxx4.git

# 20140320: NB: NCO on FC20 works fine on HDF5 files with default system RPMs
# However, examining HDF4 files (based on default HDF4 RPMs) causes HDF5 library errors
# Not sure whether this is due to netcdf-4.3.2-rc1, system HDF5 (1.8.11) or what
# Do know that hand-building HDF5 1.8.12 and rebuilding netCDF and NCO on that does solve problem
# Conclusion: Best results with HDF4 files with hand-built HDF5 on FC20, though no need to hand-build HDF4

/bin/rm -r -f ${DATA}/tmp/hdf5-1.8.19*
# aptitude install libhdf4-alt-dev
cd ${DATA}/tmp
#wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/hdf5-1.8.19.tar.gz
# https://support.hdfgroup.org/HDF5/release/obtainsrc518.html#src
scp dust.ess.uci.edu:data/tmp/hdf5-1.8.19.tar.gz .
tar xvzf hdf5-1.8.19.tar.gz
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.8.19
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
# NB: x86_64 compilations require -fPIC -m64 flags to avoid errors on shared libraries that link to libnetcdf, e.g., libnetcdf-perl: "/usr/bin/ld: /usr/local/lib/libnetcdf.a(putget.o): relocation R_X86_64_32S against `a local symbol' can not be used when making a shared object; recompile with -fPIC"
export CC='gcc'
export CFLAGS='-fPIC -m64'
export CPPFLAGS=''
export CXX='g++'
export CXXFLAGS='-fPIC -m64'
export FC='gfortran'
export F77='gfortran'
export F90='gfortran'
export FCFLAGS=''
export FFLAGS=''
export F90FLAGS=''
export LDFLAGS='-L/usr/local/lib'
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.8.19/hdf5
# 20150622 Thread-safety is an HDF5 compile-time option
# Provides multiple concurrent reads by serializing its internal library calls, sacrificing their built-in concurrency
# Unclear whether this trade-off is worthwhile. Seems not to be.
# https://www.hdfgroup.org/hdf5-quest.html#mthread
# HDF5 --enable-threadsafe --with-pthread=$PTHREAD_DIR
./configure --prefix=${HDF5_ROOT} --enable-cxx --enable-fortran > hdf5.configure.foo 2>&1
# 20070507 HDF5 --enable-cxx conflicts with --enable-parallel
# 20070507 HDF5 --enable-parallel requires parallel filesystem
# ./configure --prefix=${HDF5_ROOT} --enable-fortran --enable-parallel
make > hdf5.make.foo 2>&1
# make check > hdf5.check.foo 2>&1
scp hdf5.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install

# Do same for netCDF4 Fortran
sudo /bin/rm -f ${NETCDF4_ROOT}/include/netcdf.mod ${NETCDF4_ROOT}/lib/libnetcdff.* 
cd ${DATA}/tmp/netcdf-fortran
make distclean
git pull
autoreconf -i -f
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdff.configure.foo 2>&1
mv -f config.log netcdff.config.log.foo
make > netcdff.make.foo 2>&1
make check > netcdff.check.foo 2>&1
scp netcdff.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/.libs/libnetcdff90.a ${NETCDF4_ROOT}/lib/libnetcdff90.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/.libs/libnetcdff.a ${NETCDF4_ROOT}/lib/libnetcdff.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/typesizes.mod ${NETCDF4_ROOT}/include/typesizes.mod.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/netcdf.mod ${NETCDF4_ROOT}/include/netcdf.mod.gfortran
make clean

# Do same for netCDF4 CXX (old interface, still required by ESMF_RegridWeightGen and by TempestRemap):
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-cxx-4.2.tar.gz
tar xvzf netcdf-cxx-4.2.tar.gz 
cd ${DATA}/tmp/netcdf-cxx-4.2
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdf_cxx.configure.foo 2>&1
make > netcdf_cxx.make.foo 2>&1
mv -f config.log netcdf_cxx.config.log.foo
make check > netcdf_cxx.check.foo 2>&1
scp netcdf_cxx.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install

# Do same for netCDF4 C++ (new interface)
cd ${DATA}/tmp/netcdf-cxx4
git pull
autoreconf -i -f
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdf_c++.configure.foo 2>&1
make > netcdf_c++.make.foo 2>&1
mv -f config.log netcdf_c++.config.log.foo
make check > netcdf_c++.check.foo 2>&1
scp netcdf_c++.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install

# Do same for netCDF4 C
sudo /bin/rm -r -f ${NETCDF4_ROOT}/include/netcdf.* ${NETCDF4_ROOT}/lib/libnetcdf.* 
cd ${DATA}/tmp/netcdf-c
# NB: 20171001 make distclean must be run or unresolved link errors may occur
make distclean
git pull
autoreconf -i -f
# NB: --enable-cdf5 enables CDF5 format (disabled by default as of 4.5.0-rc3 20170930)
# NB: --enable-cxx-4 enables new netCDF4 C++ API
# NB: --enable-dap enables DAP
# NB: --enable-hdf4 enables reading HDF4 files (created with SD (Scientific Data) API) through netCDF4 API. NB: requires separately building HDF4 and libmfhdf.a, and header mfhdf.h must also be installed
# NB: --enable-hdf4 documented at http://www.unidata.ucar.edu/software/netcdf/docs/build_hdf4.html
# NB: --enable-hdf4 documented requires libhdf.a, libdf.a, libjpeg.a (and netCDF configure does not itself add -ljpeg)
# NB: --enable-logging allows HDF error message to print
# NB: --enable-pnetcdf build with parallel I/O for classic files
# NB: --enable-separate-fortran builds libnetcdff.a (default with shared libraries)
# NB: --enable-shared builds shared libraries
# NB: --enable-v2 enables the version 2 interface used by netcdf-perl
# NB: --with-libcf builds libcf.a (apparently deprecated ~201307)
# NB: --with-udunits builds libudunits2.a (apparently deprecated ~201307)
# With HDF4 on FC26:
CPPFLAGS='-I/usr/local/include -I/usr/include/hdf' LDFLAGS='-L/usr/local/lib -L/usr/lib64/hdf' LIBS='-ljpeg' ./configure --prefix=/usr/local --enable-shared --enable-cdf5 --enable-dap --enable-hdf4 --enable-logging --enable-netcdf4 --enable-v2 > netcdf.configure.foo 2>&1
mv -f config.log netcdf.config.log.foo
make > netcdf.make.foo 2>&1
make check > netcdf.check.foo 2>&1
scp netcdf.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-c/libsrc/.libs/libnetcdf3.a ${NETCDF4_ROOT}/lib/libnetcdf3.a.gcc
sudo cp ${DATA}/tmp/netcdf-c/libsrc4/.libs/libnetcdf4.a ${NETCDF4_ROOT}/lib/libnetcdf4.a.gcc
make clean
exit # Return to previous shell level
# Output saved to:
http://dust.ess.uci.edu/tmp/netcdf.check.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.configure.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.make.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.config.log.x86_64-unknown-linux-gnu.foo
#***********************************************************************
# 20170930: skyglow.ess.uci.edu x86_64/EMT64 Fedora Core 26 gcc/gfortran 7.1.1 netcdf-4.5.0-rc3 HDF4 git
#***********************************************************************

#***********************************************************************
# 20171220: skyglow.ess.uci.edu x86_64/EMT64 Fedora Core 26 gcc/gfortran 7.1.1 netcdf-4.5.1 HDF4 git
#***********************************************************************
sudo aptitude install antlr bison doxygen flex gcc g++ gsl-bin libgsl0-dev libcurl4-gnutls-dev libexpat1-dev libxml2-dev netcdf-bin udunits-bin libudunits2-0 libudunits2-dev # Install netCDF prequisites
sudo yum install antlr antlr-C++ curl-devel libxml2-devel bison flex gcc gcc-c++ gcc-gfortran gsl gsl-devel librx librx-devel udunits2 udunits2-devel
cd ${DATA}/tmp
# svn co https://sub.unidata.ucar.edu/netcdf/trunk;mv trunk netcdf;/bin/cp ~/nco/autobld/ltmain.sh netcdf
# git clone git@github.com:Unidata/netcdf-c.git
# git clone git@github.com:Unidata/netcdf-fortran.git
# git clone git@github.com:Unidata/netcdf-cxx4.git

# 20140320: NB: NCO on FC20 works fine on HDF5 files with default system RPMs
# However, examining HDF4 files (based on default HDF4 RPMs) causes HDF5 library errors
# Not sure whether this is due to netcdf-4.3.2-rc1, system HDF5 (1.8.11) or what
# Do know that hand-building HDF5 1.8.12 and rebuilding netCDF and NCO on that does solve problem
# Conclusion: Best results with HDF4 files with hand-built HDF5 on FC20, though no need to hand-build HDF4

/bin/rm -r -f ${DATA}/tmp/hdf5-1.8.19*
# aptitude install libhdf4-alt-dev
cd ${DATA}/tmp
#wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/hdf5-1.8.19.tar.gz
# https://support.hdfgroup.org/HDF5/release/obtainsrc518.html#src
scp dust.ess.uci.edu:data/tmp/hdf5-1.8.19.tar.gz .
tar xvzf hdf5-1.8.19.tar.gz
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.8.19
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
# NB: x86_64 compilations require -fPIC -m64 flags to avoid errors on shared libraries that link to libnetcdf, e.g., libnetcdf-perl: "/usr/bin/ld: /usr/local/lib/libnetcdf.a(putget.o): relocation R_X86_64_32S against `a local symbol' can not be used when making a shared object; recompile with -fPIC"
export CC='gcc'
export CFLAGS='-fPIC -m64'
export CPPFLAGS=''
export CXX='g++'
export CXXFLAGS='-fPIC -m64'
export FC='gfortran'
export F77='gfortran'
export F90='gfortran'
export FCFLAGS=''
export FFLAGS=''
export F90FLAGS=''
export LDFLAGS='-L/usr/local/lib'
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.8.19/hdf5
# 20150622 Thread-safety is an HDF5 compile-time option
# Provides multiple concurrent reads by serializing its internal library calls, sacrificing their built-in concurrency
# Unclear whether this trade-off is worthwhile. Seems not to be.
# https://www.hdfgroup.org/hdf5-quest.html#mthread
# HDF5 --enable-threadsafe --with-pthread=$PTHREAD_DIR
./configure --prefix=${HDF5_ROOT} --enable-cxx --enable-fortran > hdf5.configure.foo 2>&1
# 20070507 HDF5 --enable-cxx conflicts with --enable-parallel
# 20070507 HDF5 --enable-parallel requires parallel filesystem
# ./configure --prefix=${HDF5_ROOT} --enable-fortran --enable-parallel
make > hdf5.make.foo 2>&1
# make check > hdf5.check.foo 2>&1
scp hdf5.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install

# Do same for netCDF4 Fortran
sudo /bin/rm -f ${NETCDF4_ROOT}/include/netcdf.mod ${NETCDF4_ROOT}/lib/libnetcdff.* 
cd ${DATA}/tmp/netcdf-fortran
make distclean
git pull
autoreconf -i -f
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdff.configure.foo 2>&1
mv -f config.log netcdff.config.log.foo
make > netcdff.make.foo 2>&1
make check > netcdff.check.foo 2>&1
scp netcdff.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/.libs/libnetcdff90.a ${NETCDF4_ROOT}/lib/libnetcdff90.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/.libs/libnetcdff.a ${NETCDF4_ROOT}/lib/libnetcdff.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/typesizes.mod ${NETCDF4_ROOT}/include/typesizes.mod.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/netcdf.mod ${NETCDF4_ROOT}/include/netcdf.mod.gfortran
make clean

# Do same for netCDF4 CXX (old interface, still required by ESMF_RegridWeightGen and by TempestRemap):
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-cxx-4.2.tar.gz
tar xvzf netcdf-cxx-4.2.tar.gz 
cd ${DATA}/tmp/netcdf-cxx-4.2
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdf_cxx.configure.foo 2>&1
make > netcdf_cxx.make.foo 2>&1
mv -f config.log netcdf_cxx.config.log.foo
make check > netcdf_cxx.check.foo 2>&1
scp netcdf_cxx.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install

# Do same for netCDF4 C++ (new interface)
cd ${DATA}/tmp/netcdf-cxx4
git pull
autoreconf -i -f
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdf_c++.configure.foo 2>&1
make > netcdf_c++.make.foo 2>&1
mv -f config.log netcdf_c++.config.log.foo
make check > netcdf_c++.check.foo 2>&1
scp netcdf_c++.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install

# Do same for netCDF4 C
sudo /bin/rm -r -f ${NETCDF4_ROOT}/include/netcdf.* ${NETCDF4_ROOT}/lib/libnetcdf.* 
cd ${DATA}/tmp/netcdf-c
# NB: 20171001 make distclean must be run or unresolved link errors may occur
make distclean
git pull
autoreconf -i -f
# NB: --enable-cdf5 enables CDF5 format (disabled by default as of 4.5.0-rc3 20170930)
# NB: --enable-cxx-4 enables new netCDF4 C++ API
# NB: --enable-dap enables DAP
# NB: --enable-hdf4 enables reading HDF4 files (created with SD (Scientific Data) API) through netCDF4 API. NB: requires separately building HDF4 and libmfhdf.a, and header mfhdf.h must also be installed
# NB: --enable-hdf4 documented at http://www.unidata.ucar.edu/software/netcdf/docs/build_hdf4.html
# NB: --enable-hdf4 documented requires libhdf.a, libdf.a, libjpeg.a (and netCDF configure does not itself add -ljpeg)
# NB: --enable-logging allows HDF error message to print
# NB: --enable-pnetcdf build with parallel I/O for classic files
# NB: --enable-separate-fortran builds libnetcdff.a (default with shared libraries)
# NB: --enable-shared builds shared libraries
# NB: --enable-v2 enables the version 2 interface used by netcdf-perl
# NB: --with-libcf builds libcf.a (apparently deprecated ~201307)
# NB: --with-udunits builds libudunits2.a (apparently deprecated ~201307)
# With HDF4 on FC26:
CPPFLAGS='-I/usr/local/include -I/usr/include/hdf' LDFLAGS='-L/usr/local/lib -L/usr/lib64/hdf' LIBS='-ljpeg' ./configure --prefix=/usr/local --enable-shared --enable-cdf5 --enable-dap --enable-hdf4 --enable-logging --enable-netcdf4 --enable-v2 > netcdf.configure.foo 2>&1
mv -f config.log netcdf.config.log.foo
make > netcdf.make.foo 2>&1
make check > netcdf.check.foo 2>&1
scp netcdf.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-c/libsrc/.libs/libnetcdf3.a ${NETCDF4_ROOT}/lib/libnetcdf3.a.gcc
sudo cp ${DATA}/tmp/netcdf-c/libsrc4/.libs/libnetcdf4.a ${NETCDF4_ROOT}/lib/libnetcdf4.a.gcc
make clean
exit # Return to previous shell level
# Output saved to:
http://dust.ess.uci.edu/tmp/netcdf.check.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.configure.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.make.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.config.log.x86_64-unknown-linux-gnu.foo
#***********************************************************************
# 20171220: skyglow.ess.uci.edu x86_64/EMT64 Fedora Core 26 gcc/gfortran 7.1.1 netcdf-4.5.1 HDF4 git
#***********************************************************************

#***********************************************************************
# 20180119: skyglow.ess.uci.edu x86_64/EMT64 Fedora Core 26 gcc/gfortran 7.1.1 netcdf  HDF4 git ed hartnett branch
#***********************************************************************
cd ${DATA}/tmp
git clone https://github.com/NetCDF-World-Domination-Council/netcdf-c.git netcdf-ejh
cd ${DATA}/tmp/netcdf-ejh
git checkout ejh_rename2

make distclean
git pull
autoreconf -i -f
CPPFLAGS='-I/usr/local/include -I/usr/include/hdf' LDFLAGS='-L/usr/local/lib -L/usr/lib64/hdf' LIBS='-ljpeg' ./configure --prefix=/usr/local --enable-shared --enable-cdf5 --enable-dap --enable-hdf4 --enable-logging --enable-netcdf4 --enable-v2 > netcdf.configure.foo 2>&1
mv -f config.log netcdf.config.log.foo
make > netcdf.make.foo 2>&1
make check > netcdf.check.foo 2>&1
sudo make install
#***********************************************************************
# 20180119: skyglow.ess.uci.edu x86_64/EMT64 Fedora Core 26 gcc/gfortran 7.1.1 netcdf-4.5.1 HDF4 git ed hartnett branch
#***********************************************************************

#***********************************************************************
# 20180125: skyglow.ess.uci.edu x86_64/EMT64 Fedora Core 26 gcc/gfortran 7.1.1 netcdf-4.6.0 HDF4 git
#***********************************************************************
sudo aptitude install antlr bison doxygen flex gcc g++ gsl-bin libgsl0-dev libcurl4-gnutls-dev libexpat1-dev libxml2-dev netcdf-bin udunits-bin libudunits2-0 libudunits2-dev # Install netCDF prequisites
sudo yum install antlr antlr-C++ curl-devel libxml2-devel bison flex gcc gcc-c++ gcc-gfortran gsl gsl-devel librx librx-devel udunits2 udunits2-devel
cd ${DATA}/tmp
# svn co https://sub.unidata.ucar.edu/netcdf/trunk;mv trunk netcdf;/bin/cp ~/nco/autobld/ltmain.sh netcdf
# git clone git@github.com:Unidata/netcdf-c.git
# git clone git@github.com:Unidata/netcdf-fortran.git
# git clone git@github.com:Unidata/netcdf-cxx4.git

# 20140320: NB: NCO on FC20 works fine on HDF5 files with default system RPMs
# However, examining HDF4 files (based on default HDF4 RPMs) causes HDF5 library errors
# Not sure whether this is due to netcdf-4.3.2-rc1, system HDF5 (1.8.11) or what
# Do know that hand-building HDF5 1.8.12 and rebuilding netCDF and NCO on that does solve problem
# Conclusion: Best results with HDF4 files with hand-built HDF5 on FC20, though no need to hand-build HDF4

/bin/rm -r -f ${DATA}/tmp/hdf5-1.8.19*
# aptitude install libhdf4-alt-dev
cd ${DATA}/tmp
#wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/hdf5-1.8.19.tar.gz
# https://support.hdfgroup.org/HDF5/release/obtainsrc518.html#src
scp dust.ess.uci.edu:data/tmp/hdf5-1.8.19.tar.gz .
tar xvzf hdf5-1.8.19.tar.gz
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.8.19
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
# NB: x86_64 compilations require -fPIC -m64 flags to avoid errors on shared libraries that link to libnetcdf, e.g., libnetcdf-perl: "/usr/bin/ld: /usr/local/lib/libnetcdf.a(putget.o): relocation R_X86_64_32S against `a local symbol' can not be used when making a shared object; recompile with -fPIC"
export CC='gcc'
export CFLAGS='-fPIC -m64'
export CPPFLAGS=''
export CXX='g++'
export CXXFLAGS='-fPIC -m64'
export FC='gfortran'
export F77='gfortran'
export F90='gfortran'
export FCFLAGS=''
export FFLAGS=''
export F90FLAGS=''
export LDFLAGS='-L/usr/local/lib'
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.8.19/hdf5
# 20150622 Thread-safety is an HDF5 compile-time option
# Provides multiple concurrent reads by serializing its internal library calls, sacrificing their built-in concurrency
# Unclear whether this trade-off is worthwhile. Seems not to be.
# https://www.hdfgroup.org/hdf5-quest.html#mthread
# HDF5 --enable-threadsafe --with-pthread=$PTHREAD_DIR
./configure --prefix=${HDF5_ROOT} --enable-cxx --enable-fortran > hdf5.configure.foo 2>&1
# 20070507 HDF5 --enable-cxx conflicts with --enable-parallel
# 20070507 HDF5 --enable-parallel requires parallel filesystem
# ./configure --prefix=${HDF5_ROOT} --enable-fortran --enable-parallel
make > hdf5.make.foo 2>&1
# make check > hdf5.check.foo 2>&1
scp hdf5.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install

# Do same for netCDF4 Fortran
sudo /bin/rm -f ${NETCDF4_ROOT}/include/netcdf.mod ${NETCDF4_ROOT}/lib/libnetcdff.* 
cd ${DATA}/tmp/netcdf-fortran
make distclean
git pull
autoreconf -i -f
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdff.configure.foo 2>&1
mv -f config.log netcdff.config.log.foo
make > netcdff.make.foo 2>&1
make check > netcdff.check.foo 2>&1
scp netcdff.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/.libs/libnetcdff90.a ${NETCDF4_ROOT}/lib/libnetcdff90.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/.libs/libnetcdff.a ${NETCDF4_ROOT}/lib/libnetcdff.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/typesizes.mod ${NETCDF4_ROOT}/include/typesizes.mod.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/netcdf.mod ${NETCDF4_ROOT}/include/netcdf.mod.gfortran
make clean

# Do same for netCDF4 CXX (old interface, still required by ESMF_RegridWeightGen and by TempestRemap):
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-cxx-4.2.tar.gz
tar xvzf netcdf-cxx-4.2.tar.gz 
cd ${DATA}/tmp/netcdf-cxx-4.2
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdf_cxx.configure.foo 2>&1
make > netcdf_cxx.make.foo 2>&1
mv -f config.log netcdf_cxx.config.log.foo
make check > netcdf_cxx.check.foo 2>&1
scp netcdf_cxx.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install

# Do same for netCDF4 C++ (new interface)
cd ${DATA}/tmp/netcdf-cxx4
git pull
autoreconf -i -f
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdf_c++.configure.foo 2>&1
make > netcdf_c++.make.foo 2>&1
mv -f config.log netcdf_c++.config.log.foo
make check > netcdf_c++.check.foo 2>&1
scp netcdf_c++.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install

# Do same for netCDF4 C
sudo /bin/rm -r -f ${NETCDF4_ROOT}/include/netcdf.* ${NETCDF4_ROOT}/lib/libnetcdf.* 
cd ${DATA}/tmp/netcdf-c
# NB: 20171001 make distclean must be run or unresolved link errors may occur
make distclean
git pull
autoreconf -i -f
# NB: --enable-cdf5 enables CDF5 format (disabled by default as of 4.5.0-rc3 20170930)
# NB: --enable-cxx-4 enables new netCDF4 C++ API
# NB: --enable-dap enables DAP
# NB: --enable-hdf4 enables reading HDF4 files (created with SD (Scientific Data) API) through netCDF4 API. NB: requires separately building HDF4 and libmfhdf.a, and header mfhdf.h must also be installed
# NB: --enable-hdf4 documented at http://www.unidata.ucar.edu/software/netcdf/docs/build_hdf4.html
# NB: --enable-hdf4 documented requires libhdf.a, libdf.a, libjpeg.a (and netCDF configure does not itself add -ljpeg)
# NB: --enable-logging allows HDF error message to print
# NB: --enable-pnetcdf build with parallel I/O for classic files
# NB: --enable-separate-fortran builds libnetcdff.a (default with shared libraries)
# NB: --enable-shared builds shared libraries
# NB: --enable-v2 enables the version 2 interface used by netcdf-perl
# NB: --with-libcf builds libcf.a (apparently deprecated ~201307)
# NB: --with-udunits builds libudunits2.a (apparently deprecated ~201307)
# With HDF4 on FC26:
CPPFLAGS='-I/usr/local/include -I/usr/include/hdf' LDFLAGS='-L/usr/local/lib -L/usr/lib64/hdf' LIBS='-ljpeg' ./configure --prefix=/usr/local --enable-shared --enable-cdf5 --enable-dap --enable-hdf4 --enable-logging --enable-netcdf4 --enable-v2 > netcdf.configure.foo 2>&1
mv -f config.log netcdf.config.log.foo
make > netcdf.make.foo 2>&1
make check > netcdf.check.foo 2>&1
scp netcdf.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-c/libsrc/.libs/libnetcdf3.a ${NETCDF4_ROOT}/lib/libnetcdf3.a.gcc
sudo cp ${DATA}/tmp/netcdf-c/libsrc4/.libs/libnetcdf4.a ${NETCDF4_ROOT}/lib/libnetcdf4.a.gcc
make clean
exit # Return to previous shell level
# Output saved to:
http://dust.ess.uci.edu/tmp/netcdf.check.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.configure.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.make.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.config.log.x86_64-unknown-linux-gnu.foo
#***********************************************************************
# 20180125: skyglow.ess.uci.edu x86_64/EMT64 Fedora Core 26 gcc/gfortran 7.1.1 netcdf-4.6.0 HDF4 git
#***********************************************************************

#***********************************************************************
# 20180201: skyglow.ess.uci.edu x86_64/EMT64 Fedora Core 26 gcc/gfortran 7.1.1 netcdf-4.6.0 HDF4 git ed hartnett branch
#***********************************************************************
cd ${DATA}/tmp
git clone https://github.com/NetCDF-World-Domination-Council/netcdf-c.git netcdf-ejh
cd ${DATA}/tmp/netcdf-ejh
git checkout ejh_rename_is_here

make distclean
git pull
autoreconf -i -f
CPPFLAGS='-I/usr/local/include -I/usr/include/hdf' LDFLAGS='-L/usr/local/lib -L/usr/lib64/hdf' LIBS='-ljpeg' ./configure --prefix=/usr/local --enable-shared --enable-cdf5 --enable-dap --enable-hdf4 --enable-logging --enable-netcdf4 --enable-v2 > netcdf.configure.foo 2>&1
mv -f config.log netcdf.config.log.foo
make > netcdf.make.foo 2>&1
make check > netcdf.check.foo 2>&1
sudo make install
#***********************************************************************
# 20180201: skyglow.ess.uci.edu x86_64/EMT64 Fedora Core 26 gcc/gfortran 7.1.1 netcdf-4.5.1 HDF4 git ed hartnett branch
#***********************************************************************

#***********************************************************************
# 20180321: skyglow.ess.uci.edu x86_64/EMT64 Fedora Core 26 gcc/gfortran 7.1.1 netcdf-4.6.1 HDF4 git
#***********************************************************************
sudo aptitude install antlr bison doxygen flex gcc g++ gsl-bin libgsl0-dev libcurl4-gnutls-dev libexpat1-dev libxml2-dev netcdf-bin udunits-bin libudunits2-0 libudunits2-dev # Install netCDF prequisites
sudo yum install antlr antlr-C++ curl-devel libxml2-devel bison flex gcc gcc-c++ gcc-gfortran gsl gsl-devel librx librx-devel udunits2 udunits2-devel
cd ${DATA}/tmp
# svn co https://sub.unidata.ucar.edu/netcdf/trunk;mv trunk netcdf;/bin/cp ~/nco/autobld/ltmain.sh netcdf
# git clone git@github.com:Unidata/netcdf-c.git
# git clone git@github.com:Unidata/netcdf-fortran.git
# git clone git@github.com:Unidata/netcdf-cxx4.git

# 20140320: NB: NCO on FC20 works fine on HDF5 files with default system RPMs
# However, examining HDF4 files (based on default HDF4 RPMs) causes HDF5 library errors
# Not sure whether this is due to netcdf-4.3.2-rc1, system HDF5 (1.8.11) or what
# Do know that hand-building HDF5 1.8.12 and rebuilding netCDF and NCO on that does solve problem
# Conclusion: Best results with HDF4 files with hand-built HDF5 on FC20, though no need to hand-build HDF4

/bin/rm -r -f ${DATA}/tmp/hdf5-1.8.19*
# aptitude install libhdf4-alt-dev
cd ${DATA}/tmp
#wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/hdf5-1.8.19.tar.gz
# https://support.hdfgroup.org/HDF5/release/obtainsrc518.html#src
scp dust.ess.uci.edu:data/tmp/hdf5-1.8.19.tar.gz .
tar xvzf hdf5-1.8.19.tar.gz
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.8.19
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
# NB: x86_64 compilations require -fPIC -m64 flags to avoid errors on shared libraries that link to libnetcdf, e.g., libnetcdf-perl: "/usr/bin/ld: /usr/local/lib/libnetcdf.a(putget.o): relocation R_X86_64_32S against `a local symbol' can not be used when making a shared object; recompile with -fPIC"
export CC='gcc'
export CFLAGS='-fPIC -m64'
export CPPFLAGS=''
export CXX='g++'
export CXXFLAGS='-fPIC -m64'
export FC='gfortran'
export F77='gfortran'
export F90='gfortran'
export FCFLAGS=''
export FFLAGS=''
export F90FLAGS=''
export LDFLAGS='-L/usr/local/lib'
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.8.19/hdf5
# 20150622 Thread-safety is an HDF5 compile-time option
# Provides multiple concurrent reads by serializing its internal library calls, sacrificing their built-in concurrency
# Unclear whether this trade-off is worthwhile. Seems not to be.
# https://www.hdfgroup.org/hdf5-quest.html#mthread
# HDF5 --enable-threadsafe --with-pthread=$PTHREAD_DIR
./configure --prefix=${HDF5_ROOT} --enable-cxx --enable-fortran > hdf5.configure.foo 2>&1
# 20070507 HDF5 --enable-cxx conflicts with --enable-parallel
# 20070507 HDF5 --enable-parallel requires parallel filesystem
# ./configure --prefix=${HDF5_ROOT} --enable-fortran --enable-parallel
make > hdf5.make.foo 2>&1
# make check > hdf5.check.foo 2>&1
scp hdf5.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install

# Do same for netCDF4 Fortran
sudo /bin/rm -f ${NETCDF4_ROOT}/include/netcdf.mod ${NETCDF4_ROOT}/lib/libnetcdff.* 
cd ${DATA}/tmp/netcdf-fortran
make distclean
git pull
autoreconf -i -f
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdff.configure.foo 2>&1
mv -f config.log netcdff.config.log.foo
make > netcdff.make.foo 2>&1
make check > netcdff.check.foo 2>&1
scp netcdff.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/.libs/libnetcdff90.a ${NETCDF4_ROOT}/lib/libnetcdff90.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/.libs/libnetcdff.a ${NETCDF4_ROOT}/lib/libnetcdff.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/typesizes.mod ${NETCDF4_ROOT}/include/typesizes.mod.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/netcdf.mod ${NETCDF4_ROOT}/include/netcdf.mod.gfortran
make clean

# Do same for netCDF4 CXX (old interface, still required by ESMF_RegridWeightGen and by TempestRemap):
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-cxx-4.2.tar.gz
tar xvzf netcdf-cxx-4.2.tar.gz 
cd ${DATA}/tmp/netcdf-cxx-4.2
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdf_cxx.configure.foo 2>&1
make > netcdf_cxx.make.foo 2>&1
mv -f config.log netcdf_cxx.config.log.foo
make check > netcdf_cxx.check.foo 2>&1
scp netcdf_cxx.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install

# Do same for netCDF4 C++ (new interface)
cd ${DATA}/tmp/netcdf-cxx4
git pull
autoreconf -i -f
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdf_c++.configure.foo 2>&1
make > netcdf_c++.make.foo 2>&1
mv -f config.log netcdf_c++.config.log.foo
make check > netcdf_c++.check.foo 2>&1
scp netcdf_c++.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install

# Do same for netCDF4 C
sudo /bin/rm -r -f ${NETCDF4_ROOT}/include/netcdf.* ${NETCDF4_ROOT}/lib/libnetcdf.* 
cd ${DATA}/tmp/netcdf-c
# NB: 20171001 make distclean must be run or unresolved link errors may occur
make distclean
git pull
autoreconf -i -f
# NB: --enable-cdf5 enables CDF5 format (disabled by default as of 4.5.0-rc3 20170930)
# NB: --enable-cxx-4 enables new netCDF4 C++ API
# NB: --enable-dap enables DAP
# NB: --enable-hdf4 enables reading HDF4 files (created with SD (Scientific Data) API) through netCDF4 API. NB: requires separately building HDF4 and libmfhdf.a, and header mfhdf.h must also be installed
# NB: --enable-hdf4 documented at http://www.unidata.ucar.edu/software/netcdf/docs/build_hdf4.html
# NB: --enable-hdf4 documented requires libhdf.a, libdf.a, libjpeg.a (and netCDF configure does not itself add -ljpeg)
# NB: --enable-logging allows HDF error message to print
# NB: --enable-pnetcdf build with parallel I/O for classic files
# NB: --enable-separate-fortran builds libnetcdff.a (default with shared libraries)
# NB: --enable-shared builds shared libraries
# NB: --enable-v2 enables the version 2 interface used by netcdf-perl (needed for htrn2nc.pl)
# NB: --with-libcf builds libcf.a (apparently deprecated ~201307)
# NB: --with-udunits builds libudunits2.a (apparently deprecated ~201307)
# With HDF4 on FC26:
CPPFLAGS='-I/usr/local/include -I/usr/include/hdf' LDFLAGS='-L/usr/local/lib -L/usr/lib64/hdf' LIBS='-ljpeg' ./configure --prefix=/usr/local --enable-shared --enable-cdf5 --enable-dap --enable-hdf4 --enable-logging --enable-netcdf4 --enable-v2 > netcdf.configure.foo 2>&1
mv -f config.log netcdf.config.log.foo
make > netcdf.make.foo 2>&1
make check > netcdf.check.foo 2>&1
scp netcdf.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-c/libsrc/.libs/libnetcdf3.a ${NETCDF4_ROOT}/lib/libnetcdf3.a.gcc
sudo cp ${DATA}/tmp/netcdf-c/libsrc4/.libs/libnetcdf4.a ${NETCDF4_ROOT}/lib/libnetcdf4.a.gcc
make clean
exit # Return to previous shell level
# Output saved to:
http://dust.ess.uci.edu/tmp/netcdf.check.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.configure.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.make.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.config.log.x86_64-unknown-linux-gnu.foo
#***********************************************************************
# 20180321: skyglow.ess.uci.edu x86_64/EMT64 Fedora Core 26 gcc/gfortran 7.1.1 netcdf-4.6.1 HDF4 git
#***********************************************************************

#***********************************************************************
# 20181120: skyglow.ess.uci.edu x86_64/EMT64 Fedora Core 26 gcc/gfortran 7.3.1 netcdf-4.6.2 HDF4 git
#***********************************************************************
sudo aptitude install antlr bison doxygen flex gcc g++ gsl-bin libgsl0-dev libcurl4-gnutls-dev libexpat1-dev libxml2-dev netcdf-bin udunits-bin libudunits2-0 libudunits2-dev # Install netCDF prequisites
sudo yum install antlr antlr-C++ curl-devel libxml2-devel bison flex gcc gcc-c++ gcc-gfortran gsl gsl-devel librx librx-devel udunits2 udunits2-devel
cd ${DATA}/tmp
# svn co https://sub.unidata.ucar.edu/netcdf/trunk;mv trunk netcdf;/bin/cp ~/nco/autobld/ltmain.sh netcdf
# git clone git@github.com:Unidata/netcdf-c.git
# git clone git@github.com:Unidata/netcdf-fortran.git
# git clone git@github.com:Unidata/netcdf-cxx4.git

# 20140320: NB: NCO on FC20 works fine on HDF5 files with default system RPMs
# However, examining HDF4 files (based on default HDF4 RPMs) causes HDF5 library errors
# Not sure whether this is due to netcdf-4.3.2-rc1, system HDF5 (1.8.11) or what
# Do know that hand-building HDF5 1.8.12 and rebuilding netCDF and NCO on that does solve problem
# Conclusion: Best results with HDF4 files with hand-built HDF5 on FC20, though no need to hand-build HDF4

/bin/rm -r -f ${DATA}/tmp/hdf5-1.8.19*
# aptitude install libhdf4-alt-dev
cd ${DATA}/tmp
#wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/hdf5-1.8.19.tar.gz
# https://support.hdfgroup.org/HDF5/release/obtainsrc518.html#src
scp dust.ess.uci.edu:data/tmp/hdf5-1.8.19.tar.gz .
tar xvzf hdf5-1.8.19.tar.gz
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.8.19
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
# NB: x86_64 compilations require -fPIC -m64 flags to avoid errors on shared libraries that link to libnetcdf, e.g., libnetcdf-perl: "/usr/bin/ld: /usr/local/lib/libnetcdf.a(putget.o): relocation R_X86_64_32S against `a local symbol' can not be used when making a shared object; recompile with -fPIC"
export CC='gcc'
export CFLAGS='-fPIC -m64'
export CPPFLAGS=''
export CXX='g++'
export CXXFLAGS='-fPIC -m64'
export FC='gfortran'
export F77='gfortran'
export F90='gfortran'
export FCFLAGS=''
export FFLAGS=''
export F90FLAGS=''
export LDFLAGS='-L/usr/local/lib'
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.8.19/hdf5
# 20150622 Thread-safety is an HDF5 compile-time option
# Provides multiple concurrent reads by serializing its internal library calls, sacrificing their built-in concurrency
# Unclear whether this trade-off is worthwhile. Seems not to be.
# https://www.hdfgroup.org/hdf5-quest.html#mthread
# HDF5 --enable-threadsafe --with-pthread=$PTHREAD_DIR
./configure --prefix=${HDF5_ROOT} --enable-cxx --enable-fortran > hdf5.configure.foo 2>&1
# 20070507 HDF5 --enable-cxx conflicts with --enable-parallel
# 20070507 HDF5 --enable-parallel requires parallel filesystem
# ./configure --prefix=${HDF5_ROOT} --enable-fortran --enable-parallel
make > hdf5.make.foo 2>&1
# make check > hdf5.check.foo 2>&1
scp hdf5.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install

# Do same for netCDF4 Fortran
sudo /bin/rm -f ${NETCDF4_ROOT}/include/netcdf.mod ${NETCDF4_ROOT}/lib/libnetcdff.* 
cd ${DATA}/tmp/netcdf-fortran
make distclean
git pull
autoreconf -i -f
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdff.configure.foo 2>&1
mv -f config.log netcdff.config.log.foo
make > netcdff.make.foo 2>&1
make check > netcdff.check.foo 2>&1
scp netcdff.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/.libs/libnetcdff90.a ${NETCDF4_ROOT}/lib/libnetcdff90.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/.libs/libnetcdff.a ${NETCDF4_ROOT}/lib/libnetcdff.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/typesizes.mod ${NETCDF4_ROOT}/include/typesizes.mod.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/netcdf.mod ${NETCDF4_ROOT}/include/netcdf.mod.gfortran
make clean

# Do same for netCDF4 CXX (old interface, still required by ESMF_RegridWeightGen and by TempestRemap):
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-cxx-4.2.tar.gz
tar xvzf netcdf-cxx-4.2.tar.gz 
cd ${DATA}/tmp/netcdf-cxx-4.2
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdf_cxx.configure.foo 2>&1
make > netcdf_cxx.make.foo 2>&1
mv -f config.log netcdf_cxx.config.log.foo
make check > netcdf_cxx.check.foo 2>&1
scp netcdf_cxx.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install

# Do same for netCDF4 C++ (new interface)
cd ${DATA}/tmp/netcdf-cxx4
git pull
autoreconf -i -f
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdf_c++.configure.foo 2>&1
make > netcdf_c++.make.foo 2>&1
mv -f config.log netcdf_c++.config.log.foo
make check > netcdf_c++.check.foo 2>&1
scp netcdf_c++.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install

# Do same for netCDF4 C
sudo /bin/rm -r -f ${NETCDF4_ROOT}/include/netcdf.h ${NETCDF4_ROOT}/include/netcdf_m*.h ${NETCDF4_ROOT}/lib/libnetcdf.* 
cd ${DATA}/tmp/netcdf-c
# NB: 20171001 make distclean must be run or unresolved link errors may occur
make distclean
git pull
autoreconf -i -f
# NB: --enable-cdf5 enables CDF5 format (disabled by default as of 4.5.0-rc3 20170930) and not re-enabled by default until netCDF 4.6.2
# NB: --enable-cxx-4 enables new netCDF4 C++ API
# NB: --enable-dap enables DAP
# NB: --enable-hdf4 enables reading HDF4 files (created with SD (Scientific Data) API) through netCDF4 API. NB: requires separately building HDF4 and libmfhdf.a, and header mfhdf.h must also be installed
# NB: --enable-hdf4 documented at http://www.unidata.ucar.edu/software/netcdf/docs/build_hdf4.html
# NB: --enable-hdf4 documented requires libhdf.a, libdf.a, libjpeg.a (and netCDF configure does not itself add -ljpeg)
# NB: --enable-logging allows HDF error message to print
# NB: --enable-pnetcdf build with parallel I/O for classic files
# NB: --enable-separate-fortran builds libnetcdff.a (default with shared libraries)
# NB: --enable-shared builds shared libraries
# NB: --enable-v2 enables the version 2 interface used by netcdf-perl (needed for htrn2nc.pl)
# NB: --with-libcf builds libcf.a (apparently deprecated ~201307)
# NB: --with-udunits builds libudunits2.a (apparently deprecated ~201307)
# With HDF4 on FC26:
CPPFLAGS='-I/usr/local/include -I/usr/include/hdf' LDFLAGS='-L/usr/local/lib -L/usr/lib64/hdf' LIBS='-ljpeg' ./configure --prefix=/usr/local --enable-shared --enable-cdf5 --enable-dap --enable-hdf4 --enable-logging --enable-netcdf4 --enable-v2 > netcdf.configure.foo 2>&1
mv -f config.log netcdf.config.log.foo
make > netcdf.make.foo 2>&1
make check > netcdf.check.foo 2>&1
scp netcdf.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-c/libsrc/.libs/libnetcdf3.a ${NETCDF4_ROOT}/lib/libnetcdf3.a.gcc
sudo cp ${DATA}/tmp/netcdf-c/libsrc4/.libs/libnetcdf4.a ${NETCDF4_ROOT}/lib/libnetcdf4.a.gcc
make clean
exit # Return to previous shell level
# Output saved to:
http://dust.ess.uci.edu/tmp/netcdf.check.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.configure.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.make.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.config.log.x86_64-unknown-linux-gnu.foo
#***********************************************************************
# 20181120: skyglow.ess.uci.edu x86_64/EMT64 Fedora Core 26 gcc/gfortran 7.3.1 netcdf-4.6.2 HDF4 git
#***********************************************************************

#***********************************************************************
# 20190429: skyglow.ess.uci.edu x86_64/EMT64 Fedora Core 26 gcc/gfortran 7.3.1 netcdf-4.7.0 HDF4 git
#***********************************************************************
sudo aptitude install antlr bison doxygen flex gcc g++ gsl-bin libgsl0-dev libcurl4-gnutls-dev libexpat1-dev libxml2-dev netcdf-bin udunits-bin libudunits2-0 libudunits2-dev # Install netCDF prequisites
sudo yum install antlr antlr-C++ curl-devel libxml2-devel bison flex gcc gcc-c++ gcc-gfortran gsl gsl-devel librx librx-devel udunits2 udunits2-devel
cd ${DATA}/tmp
# svn co https://sub.unidata.ucar.edu/netcdf/trunk;mv trunk netcdf;/bin/cp ~/nco/autobld/ltmain.sh netcdf
# git clone git@github.com:Unidata/netcdf-c.git
# git clone git@github.com:Unidata/netcdf-fortran.git
# git clone git@github.com:Unidata/netcdf-cxx4.git

# 20140320: NB: NCO on FC20 works fine on HDF5 files with default system RPMs
# However, examining HDF4 files (based on default HDF4 RPMs) causes HDF5 library errors
# Not sure whether this is due to netcdf-4.3.2-rc1, system HDF5 (1.8.11) or what
# Do know that hand-building HDF5 1.8.12 and rebuilding netCDF and NCO on that does solve problem
# Conclusion: Best results with HDF4 files with hand-built HDF5 on FC20, though no need to hand-build HDF4

/bin/rm -r -f ${DATA}/tmp/hdf5-1.8.19*
# aptitude install libhdf4-alt-dev
cd ${DATA}/tmp
#wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/hdf5-1.8.19.tar.gz
# https://support.hdfgroup.org/HDF5/release/obtainsrc518.html#src
scp dust.ess.uci.edu:data/tmp/hdf5-1.8.19.tar.gz .
tar xvzf hdf5-1.8.19.tar.gz
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.8.19
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
# NB: x86_64 compilations require -fPIC -m64 flags to avoid errors on shared libraries that link to libnetcdf, e.g., libnetcdf-perl: "/usr/bin/ld: /usr/local/lib/libnetcdf.a(putget.o): relocation R_X86_64_32S against `a local symbol' can not be used when making a shared object; recompile with -fPIC"
export CC='gcc'
export CFLAGS='-fPIC -m64'
export CPPFLAGS=''
export CXX='g++'
export CXXFLAGS='-fPIC -m64'
export FC='gfortran'
export F77='gfortran'
export F90='gfortran'
export FCFLAGS=''
export FFLAGS=''
export F90FLAGS=''
export LDFLAGS='-L/usr/local/lib'
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.8.19/hdf5
# 20150622 Thread-safety is an HDF5 compile-time option
# Provides multiple concurrent reads by serializing its internal library calls, sacrificing their built-in concurrency
# Unclear whether this trade-off is worthwhile. Seems not to be.
# https://www.hdfgroup.org/hdf5-quest.html#mthread
# HDF5 --enable-threadsafe --with-pthread=$PTHREAD_DIR
./configure --prefix=${HDF5_ROOT} --enable-cxx --enable-fortran > hdf5.configure.foo 2>&1
# 20070507 HDF5 --enable-cxx conflicts with --enable-parallel
# 20070507 HDF5 --enable-parallel requires parallel filesystem
# ./configure --prefix=${HDF5_ROOT} --enable-fortran --enable-parallel
make > hdf5.make.foo 2>&1
# make check > hdf5.check.foo 2>&1
scp hdf5.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install

# Do same for netCDF4 Fortran
sudo /bin/rm -f ${NETCDF4_ROOT}/include/netcdf.mod ${NETCDF4_ROOT}/lib/libnetcdff.* 
cd ${DATA}/tmp/netcdf-fortran
make distclean
git pull
autoreconf -i -f
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdff.configure.foo 2>&1
mv -f config.log netcdff.config.log.foo
make > netcdff.make.foo 2>&1
make check > netcdff.check.foo 2>&1
scp netcdff.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/.libs/libnetcdff90.a ${NETCDF4_ROOT}/lib/libnetcdff90.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/.libs/libnetcdff.a ${NETCDF4_ROOT}/lib/libnetcdff.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/typesizes.mod ${NETCDF4_ROOT}/include/typesizes.mod.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/netcdf.mod ${NETCDF4_ROOT}/include/netcdf.mod.gfortran
make clean

# Do same for netCDF4 CXX (old interface, still required by ESMF_RegridWeightGen and by TempestRemap):
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-cxx-4.2.tar.gz
tar xvzf netcdf-cxx-4.2.tar.gz 
cd ${DATA}/tmp/netcdf-cxx-4.2
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdf_cxx.configure.foo 2>&1
make > netcdf_cxx.make.foo 2>&1
mv -f config.log netcdf_cxx.config.log.foo
make check > netcdf_cxx.check.foo 2>&1
scp netcdf_cxx.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install

# Do same for netCDF4 C++ (new interface)
cd ${DATA}/tmp/netcdf-cxx4
git pull
autoreconf -i -f
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdf_c++.configure.foo 2>&1
make > netcdf_c++.make.foo 2>&1
mv -f config.log netcdf_c++.config.log.foo
make check > netcdf_c++.check.foo 2>&1
scp netcdf_c++.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install

# Do same for netCDF4 C
sudo /bin/rm -r -f ${NETCDF4_ROOT}/include/netcdf.h ${NETCDF4_ROOT}/include/netcdf_m*.h ${NETCDF4_ROOT}/lib/libnetcdf.* 
cd ${DATA}/tmp/netcdf-c
# NB: 20171001 make distclean must be run or unresolved link errors may occur
make distclean
git pull
autoreconf -i -f
# NB: --enable-cdf5 enables CDF5 format (disabled by default as of 4.5.0-rc3 20170930) and not re-enabled by default until netCDF 4.6.2
# NB: --enable-cxx-4 enables new netCDF4 C++ API
# NB: --enable-dap enables DAP
# NB: --enable-hdf4 enables reading HDF4 files (created with SD (Scientific Data) API) through netCDF4 API. NB: requires separately building HDF4 and libmfhdf.a, and header mfhdf.h must also be installed
# NB: --enable-hdf4 documented at http://www.unidata.ucar.edu/software/netcdf/docs/build_hdf4.html
# NB: --enable-hdf4 documented requires libhdf.a, libdf.a, libjpeg.a (and netCDF configure does not itself add -ljpeg)
# NB: --enable-logging allows HDF error message to print
# NB: --enable-pnetcdf build with parallel I/O for classic files
# NB: --enable-separate-fortran builds libnetcdff.a (default with shared libraries)
# NB: --enable-shared builds shared libraries
# NB: --enable-v2 enables the version 2 interface used by netcdf-perl (needed for htrn2nc.pl)
# NB: --with-libcf builds libcf.a (apparently deprecated ~201307)
# NB: --with-udunits builds libudunits2.a (apparently deprecated ~201307)
# With HDF4 on FC26:
CPPFLAGS='-I/usr/local/include -I/usr/include/hdf' LDFLAGS='-L/usr/local/lib -L/usr/lib64/hdf' LIBS='-ljpeg' ./configure --prefix=/usr/local --enable-shared --enable-cdf5 --enable-dap --enable-hdf4 --enable-logging --enable-netcdf4 --enable-v2 > netcdf.configure.foo 2>&1
mv -f config.log netcdf.config.log.foo
make > netcdf.make.foo 2>&1
make check > netcdf.check.foo 2>&1
scp netcdf.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-c/libsrc/.libs/libnetcdf3.a ${NETCDF4_ROOT}/lib/libnetcdf3.a.gcc
sudo cp ${DATA}/tmp/netcdf-c/libsrc4/.libs/libnetcdf4.a ${NETCDF4_ROOT}/lib/libnetcdf4.a.gcc
make clean
exit # Return to previous shell level
# Output saved to:
http://dust.ess.uci.edu/tmp/netcdf.check.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.configure.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.make.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.config.log.x86_64-unknown-linux-gnu.foo
#***********************************************************************
# 20190429: skyglow.ess.uci.edu x86_64/EMT64 Fedora Core 26 gcc/gfortran 7.3.1 netcdf-4.7.0 HDF4 git
#***********************************************************************

#***********************************************************************
# 20190829: skyglow.ess.uci.edu x86_64/EMT64 Fedora Core 26 gcc/gfortran 7.3.1 netcdf-4.7.1 HDF4 git
#***********************************************************************
sudo aptitude install antlr bison doxygen flex gcc g++ gsl-bin libgsl0-dev libcurl4-gnutls-dev libexpat1-dev libxml2-dev netcdf-bin udunits-bin libudunits2-0 libudunits2-dev # Install netCDF prequisites
sudo yum install antlr antlr-C++ curl-devel libxml2-devel bison flex gcc gcc-c++ gcc-gfortran gsl gsl-devel librx librx-devel udunits2 udunits2-devel
cd ${DATA}/tmp
# svn co https://sub.unidata.ucar.edu/netcdf/trunk;mv trunk netcdf;/bin/cp ~/nco/autobld/ltmain.sh netcdf
# git clone git@github.com:Unidata/netcdf-c.git
# git clone git@github.com:Unidata/netcdf-fortran.git
# git clone git@github.com:Unidata/netcdf-cxx4.git

# 20140320: NB: NCO on FC20 works fine on HDF5 files with default system RPMs
# However, examining HDF4 files (based on default HDF4 RPMs) causes HDF5 library errors
# Not sure whether this is due to netcdf-4.3.2-rc1, system HDF5 (1.8.11) or what
# Do know that hand-building HDF5 1.8.12 and rebuilding netCDF and NCO on that does solve problem
# Conclusion: Best results with HDF4 files with hand-built HDF5 on FC20, though no need to hand-build HDF4

/bin/rm -r -f ${DATA}/tmp/hdf5-1.8.19*
# aptitude install libhdf4-alt-dev
cd ${DATA}/tmp
#wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/hdf5-1.8.19.tar.gz
# https://support.hdfgroup.org/HDF5/release/obtainsrc518.html#src
scp dust.ess.uci.edu:data/tmp/hdf5-1.8.19.tar.gz .
tar xvzf hdf5-1.8.19.tar.gz
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.8.19
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
# NB: x86_64 compilations require -fPIC -m64 flags to avoid errors on shared libraries that link to libnetcdf, e.g., libnetcdf-perl: "/usr/bin/ld: /usr/local/lib/libnetcdf.a(putget.o): relocation R_X86_64_32S against `a local symbol' can not be used when making a shared object; recompile with -fPIC"
export CC='gcc'
export CFLAGS='-fPIC -m64'
export CPPFLAGS=''
export CXX='g++'
export CXXFLAGS='-fPIC -m64'
export FC='gfortran'
export F77='gfortran'
export F90='gfortran'
export FCFLAGS=''
export FFLAGS=''
export F90FLAGS=''
export LDFLAGS='-L/usr/local/lib'
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.8.19/hdf5
# 20150622 Thread-safety is an HDF5 compile-time option
# Provides multiple concurrent reads by serializing its internal library calls, sacrificing their built-in concurrency
# Unclear whether this trade-off is worthwhile. Seems not to be.
# https://www.hdfgroup.org/hdf5-quest.html#mthread
# HDF5 --enable-threadsafe --with-pthread=$PTHREAD_DIR
./configure --prefix=${HDF5_ROOT} --enable-cxx --enable-fortran > hdf5.configure.foo 2>&1
# 20070507 HDF5 --enable-cxx conflicts with --enable-parallel
# 20070507 HDF5 --enable-parallel requires parallel filesystem
# ./configure --prefix=${HDF5_ROOT} --enable-fortran --enable-parallel
make > hdf5.make.foo 2>&1
# make check > hdf5.check.foo 2>&1
scp hdf5.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install

# Do same for netCDF4 Fortran
sudo /bin/rm -f ${NETCDF4_ROOT}/include/netcdf.mod ${NETCDF4_ROOT}/lib/libnetcdff.* 
cd ${DATA}/tmp/netcdf-fortran
make distclean
git pull
autoreconf -i -f
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdff.configure.foo 2>&1
mv -f config.log netcdff.config.log.foo
make > netcdff.make.foo 2>&1
make check > netcdff.check.foo 2>&1
scp netcdff.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/.libs/libnetcdff90.a ${NETCDF4_ROOT}/lib/libnetcdff90.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/.libs/libnetcdff.a ${NETCDF4_ROOT}/lib/libnetcdff.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/typesizes.mod ${NETCDF4_ROOT}/include/typesizes.mod.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/netcdf.mod ${NETCDF4_ROOT}/include/netcdf.mod.gfortran
make clean

# Do same for netCDF4 CXX (old interface, still required by ESMF_RegridWeightGen and by TempestRemap):
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-cxx-4.2.tar.gz
tar xvzf netcdf-cxx-4.2.tar.gz 
cd ${DATA}/tmp/netcdf-cxx-4.2
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdf_cxx.configure.foo 2>&1
make > netcdf_cxx.make.foo 2>&1
mv -f config.log netcdf_cxx.config.log.foo
make check > netcdf_cxx.check.foo 2>&1
scp netcdf_cxx.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install

# Do same for netCDF4 C++ (new interface)
cd ${DATA}/tmp/netcdf-cxx4
git pull
autoreconf -i -f
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdf_c++.configure.foo 2>&1
make > netcdf_c++.make.foo 2>&1
mv -f config.log netcdf_c++.config.log.foo
make check > netcdf_c++.check.foo 2>&1
scp netcdf_c++.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install

# Do same for netCDF4 C
sudo /bin/rm -r -f ${NETCDF4_ROOT}/include/netcdf.h ${NETCDF4_ROOT}/include/netcdf_m*.h ${NETCDF4_ROOT}/lib/libnetcdf.* 
cd ${DATA}/tmp/netcdf-c
# NB: 20171001 make distclean must be run or unresolved link errors may occur
make distclean
git pull
autoreconf -i -f
# NB: --enable-cdf5 enables CDF5 format (disabled by default as of 4.5.0-rc3 20170930) and not re-enabled by default until netCDF 4.6.2
# NB: --enable-cxx-4 enables new netCDF4 C++ API
# NB: --enable-dap enables DAP
# NB: --enable-hdf4 enables reading HDF4 files (created with SD (Scientific Data) API) through netCDF4 API. NB: requires separately building HDF4 and libmfhdf.a, and header mfhdf.h must also be installed
# NB: --enable-hdf4 documented at http://www.unidata.ucar.edu/software/netcdf/docs/build_hdf4.html
# NB: --enable-hdf4 documented requires libhdf.a, libdf.a, libjpeg.a (and netCDF configure does not itself add -ljpeg)
# NB: --enable-logging allows HDF error message to print
# NB: --enable-pnetcdf build with parallel I/O for classic files
# NB: --enable-separate-fortran builds libnetcdff.a (default with shared libraries)
# NB: --enable-shared builds shared libraries
# NB: --enable-v2 enables the version 2 interface used by netcdf-perl (needed for htrn2nc.pl)
# NB: --with-libcf builds libcf.a (apparently deprecated ~201307)
# NB: --with-udunits builds libudunits2.a (apparently deprecated ~201307)
# With HDF4 on FC26:
CPPFLAGS='-I/usr/local/include -I/usr/include/hdf' LDFLAGS='-L/usr/local/lib -L/usr/lib64/hdf' LIBS='-ljpeg' ./configure --prefix=/usr/local --enable-shared --enable-cdf5 --enable-dap --enable-hdf4 --enable-logging --enable-netcdf4 --enable-v2 > netcdf.configure.foo 2>&1
mv -f config.log netcdf.config.log.foo
make > netcdf.make.foo 2>&1
make check > netcdf.check.foo 2>&1
scp netcdf.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-c/libsrc/.libs/libnetcdf3.a ${NETCDF4_ROOT}/lib/libnetcdf3.a.gcc
sudo cp ${DATA}/tmp/netcdf-c/libsrc4/.libs/libnetcdf4.a ${NETCDF4_ROOT}/lib/libnetcdf4.a.gcc
make clean
exit # Return to previous shell level
# Output saved to:
http://dust.ess.uci.edu/tmp/netcdf.check.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.configure.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.make.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.config.log.x86_64-unknown-linux-gnu.foo
#***********************************************************************
# 20190829: skyglow.ess.uci.edu x86_64/EMT64 Fedora Core 26 gcc/gfortran 7.3.1 netcdf-4.7.1 HDF4 git
#***********************************************************************

#***********************************************************************
# 20200418: skyglow.ess.uci.edu x86_64/EMT64 Fedora Core 32 gcc/gfortran 10.0.1 netcdf-4.7.4 HDF4 git
#***********************************************************************
sudo aptitude install antlr bison doxygen flex gcc g++ gsl-bin libgsl0-dev libcurl4-gnutls-dev libexpat1-dev libxml2-dev netcdf-bin udunits-bin libudunits2-0 libudunits2-dev # Install netCDF prequisites
sudo yum install antlr antlr-C++ curl-devel libxml2-devel bison flex gcc gcc-c++ gcc-gfortran gsl gsl-devel librx librx-devel udunits2 udunits2-devel
cd ${DATA}/tmp
# svn co https://sub.unidata.ucar.edu/netcdf/trunk;mv trunk netcdf;/bin/cp ~/nco/autobld/ltmain.sh netcdf
# git clone git@github.com:Unidata/netcdf-c.git
# git clone git@github.com:Unidata/netcdf-fortran.git
# git clone git@github.com:Unidata/netcdf-cxx4.git

# 20140320: NB: NCO on FC20 works fine on HDF5 files with default system RPMs
# However, examining HDF4 files (based on default HDF4 RPMs) causes HDF5 library errors
# Not sure whether this is due to netcdf-4.3.2-rc1, system HDF5 (1.8.11) or what
# Do know that hand-building HDF5 1.8.12 and rebuilding netCDF and NCO on that does solve problem
# Conclusion: Best results with HDF4 files with hand-built HDF5 on FC20, though no need to hand-build HDF4

/bin/rm -r -f ${DATA}/tmp/hdf5-1.8.19*
# aptitude install libhdf4-alt-dev
cd ${DATA}/tmp
#wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/hdf5-1.8.19.tar.gz
# https://support.hdfgroup.org/HDF5/release/obtainsrc518.html#src
scp dust.ess.uci.edu:data/tmp/hdf5-1.8.19.tar.gz .
tar xvzf hdf5-1.8.19.tar.gz
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.8.19
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
# NB: x86_64 compilations require -fPIC -m64 flags to avoid errors on shared libraries that link to libnetcdf, e.g., libnetcdf-perl: "/usr/bin/ld: /usr/local/lib/libnetcdf.a(putget.o): relocation R_X86_64_32S against `a local symbol' can not be used when making a shared object; recompile with -fPIC"
export CC='gcc'
export CFLAGS='-fPIC -m64'
export CPPFLAGS=''
export CXX='g++'
export CXXFLAGS='-fPIC -m64'
export FC='gfortran'
export F77='gfortran'
export F90='gfortran'
export FCFLAGS=''
export FFLAGS=''
export F90FLAGS=''
export LDFLAGS='-L/usr/local/lib'
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.8.19/hdf5
# 20150622 Thread-safety is an HDF5 compile-time option
# Provides multiple concurrent reads by serializing its internal library calls, sacrificing their built-in concurrency
# Unclear whether this trade-off is worthwhile. Seems not to be.
# https://www.hdfgroup.org/hdf5-quest.html#mthread
# HDF5 --enable-threadsafe --with-pthread=$PTHREAD_DIR
./configure --prefix=${HDF5_ROOT} --enable-cxx --enable-fortran > hdf5.configure.foo 2>&1
# 20070507 HDF5 --enable-cxx conflicts with --enable-parallel
# 20070507 HDF5 --enable-parallel requires parallel filesystem
# ./configure --prefix=${HDF5_ROOT} --enable-fortran --enable-parallel
make > hdf5.make.foo 2>&1
# make check > hdf5.check.foo 2>&1
scp hdf5.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install

# Do same for netCDF4 Fortran
sudo /bin/rm -f ${NETCDF4_ROOT}/include/netcdf.mod ${NETCDF4_ROOT}/lib/libnetcdff.* 
cd ${DATA}/tmp/netcdf-fortran
make distclean
git pull
autoreconf -i -f
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdff.configure.foo 2>&1
mv -f config.log netcdff.config.log.foo
make > netcdff.make.foo 2>&1
make check > netcdff.check.foo 2>&1
scp netcdff.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/.libs/libnetcdff90.a ${NETCDF4_ROOT}/lib/libnetcdff90.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/.libs/libnetcdff.a ${NETCDF4_ROOT}/lib/libnetcdff.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/typesizes.mod ${NETCDF4_ROOT}/include/typesizes.mod.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/netcdf.mod ${NETCDF4_ROOT}/include/netcdf.mod.gfortran
make clean

# Do same for netCDF4 CXX (old interface, still required by ESMF_RegridWeightGen and by TempestRemap):
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-cxx-4.2.tar.gz
tar xvzf netcdf-cxx-4.2.tar.gz 
cd ${DATA}/tmp/netcdf-cxx-4.2
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdf_cxx.configure.foo 2>&1
make > netcdf_cxx.make.foo 2>&1
mv -f config.log netcdf_cxx.config.log.foo
make check > netcdf_cxx.check.foo 2>&1
scp netcdf_cxx.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install

# Do same for netCDF4 C++ (new interface)
cd ${DATA}/tmp/netcdf-cxx4
git pull
autoreconf -i -f
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdf_c++.configure.foo 2>&1
make > netcdf_c++.make.foo 2>&1
mv -f config.log netcdf_c++.config.log.foo
make check > netcdf_c++.check.foo 2>&1
scp netcdf_c++.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install

# Do same for netCDF4 C
sudo /bin/rm -r -f ${NETCDF4_ROOT}/include/netcdf.h ${NETCDF4_ROOT}/include/netcdf_m*.h ${NETCDF4_ROOT}/lib/libnetcdf.* 
cd ${DATA}/tmp/netcdf-c
# NB: 20171001 make distclean must be run or unresolved link errors may occur
make distclean
git pull
autoreconf -i -f
# NB: --enable-cdf5 enables CDF5 format (disabled by default as of 4.5.0-rc3 20170930) and not re-enabled by default until netCDF 4.6.2
# NB: --enable-cxx-4 enables new netCDF4 C++ API
# NB: --enable-dap enables DAP
# NB: --enable-hdf4 enables reading HDF4 files (created with SD (Scientific Data) API) through netCDF4 API. NB: requires separately building HDF4 and libmfhdf.a, and header mfhdf.h must also be installed
# NB: --enable-hdf4 documented at http://www.unidata.ucar.edu/software/netcdf/docs/build_hdf4.html
# NB: --enable-hdf4 documented requires libhdf.a, libdf.a, libjpeg.a (and netCDF configure does not itself add -ljpeg)
# NB: --enable-logging allows HDF error message to print
# NB: --enable-pnetcdf build with parallel I/O for classic files
# NB: --enable-separate-fortran builds libnetcdff.a (default with shared libraries)
# NB: --enable-shared builds shared libraries
# NB: --enable-v2 enables the version 2 interface used by netcdf-perl (needed for htrn2nc.pl)
# NB: --with-libcf builds libcf.a (apparently deprecated ~201307)
# NB: --with-udunits builds libudunits2.a (apparently deprecated ~201307)
# With HDF4 on FC26:
CPPFLAGS='-I/usr/local/include -I/usr/include/hdf' LDFLAGS='-L/usr/local/lib -L/usr/lib64/hdf' LIBS='-ljpeg' ./configure --prefix=/usr/local --enable-shared --enable-cdf5 --enable-dap --enable-hdf4 --enable-logging --enable-netcdf4 --enable-v2 > netcdf.configure.foo 2>&1
mv -f config.log netcdf.config.log.foo
make > netcdf.make.foo 2>&1
make check > netcdf.check.foo 2>&1
scp netcdf.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-c/libsrc/.libs/libnetcdf3.a ${NETCDF4_ROOT}/lib/libnetcdf3.a.gcc
sudo cp ${DATA}/tmp/netcdf-c/libsrc4/.libs/libnetcdf4.a ${NETCDF4_ROOT}/lib/libnetcdf4.a.gcc
make clean
exit # Return to previous shell level
# Output saved to:
http://dust.ess.uci.edu/tmp/netcdf.check.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.configure.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.make.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.config.log.x86_64-unknown-linux-gnu.foo
#***********************************************************************
# 20200418: skyglow.ess.uci.edu x86_64/EMT64 Fedora Core 32 gcc/gfortran 10.0.1 netcdf-4.7.4 HDF4 git
#***********************************************************************

#***********************************************************************
# 20200716: skyglow.ess.uci.edu x86_64/EMT64 Fedora Core 32 gcc/gfortran 10.1.1 netcdf-4.8.0 HDF4 git
#***********************************************************************
sudo aptitude install antlr bison doxygen flex gcc g++ gsl-bin libgsl0-dev libcurl4-gnutls-dev libexpat1-dev libxml2-dev netcdf-bin udunits-bin libudunits2-0 libudunits2-dev # Install netCDF prequisites
sudo yum install antlr antlr-C++ curl-devel libxml2-devel bison flex gcc gcc-c++ gcc-gfortran gsl gsl-devel librx librx-devel udunits2 udunits2-devel
cd ${DATA}/tmp
# svn co https://sub.unidata.ucar.edu/netcdf/trunk;mv trunk netcdf;/bin/cp ~/nco/autobld/ltmain.sh netcdf
# git clone git@github.com:Unidata/netcdf-c.git
# git clone git@github.com:Unidata/netcdf-fortran.git
# git clone git@github.com:Unidata/netcdf-cxx4.git

# 20140320: NB: NCO on FC20 works fine on HDF5 files with default system RPMs
# However, examining HDF4 files (based on default HDF4 RPMs) causes HDF5 library errors
# Not sure whether this is due to netcdf-4.3.2-rc1, system HDF5 (1.8.11) or what
# Do know that hand-building HDF5 1.8.12 and rebuilding netCDF and NCO on that does solve problem
# Conclusion: Best results with HDF4 files with hand-built HDF5 on FC20, though no need to hand-build HDF4

/bin/rm -r -f ${DATA}/tmp/hdf5-1.8.19*
# aptitude install libhdf4-alt-dev
cd ${DATA}/tmp
#wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/hdf5-1.8.19.tar.gz
# https://support.hdfgroup.org/HDF5/release/obtainsrc518.html#src
scp dust.ess.uci.edu:data/tmp/hdf5-1.8.19.tar.gz .
tar xvzf hdf5-1.8.19.tar.gz
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.8.19
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
# NB: x86_64 compilations require -fPIC -m64 flags to avoid errors on shared libraries that link to libnetcdf, e.g., libnetcdf-perl: "/usr/bin/ld: /usr/local/lib/libnetcdf.a(putget.o): relocation R_X86_64_32S against `a local symbol' can not be used when making a shared object; recompile with -fPIC"
export CC='gcc'
export CFLAGS='-fPIC -m64'
export CPPFLAGS=''
export CXX='g++'
export CXXFLAGS='-fPIC -m64'
export FC='gfortran'
export F77='gfortran'
export F90='gfortran'
export FCFLAGS=''
export FFLAGS=''
export F90FLAGS=''
export LDFLAGS='-L/usr/local/lib'
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.8.19/hdf5
# 20150622 Thread-safety is an HDF5 compile-time option
# Provides multiple concurrent reads by serializing its internal library calls, sacrificing their built-in concurrency
# Unclear whether this trade-off is worthwhile. Seems not to be.
# https://www.hdfgroup.org/hdf5-quest.html#mthread
# HDF5 --enable-threadsafe --with-pthread=$PTHREAD_DIR
./configure --prefix=${HDF5_ROOT} --enable-cxx --enable-fortran > hdf5.configure.foo 2>&1
# 20070507 HDF5 --enable-cxx conflicts with --enable-parallel
# 20070507 HDF5 --enable-parallel requires parallel filesystem
# ./configure --prefix=${HDF5_ROOT} --enable-fortran --enable-parallel
make > hdf5.make.foo 2>&1
# make check > hdf5.check.foo 2>&1
scp hdf5.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install

# Do same for netCDF4 Fortran
sudo /bin/rm -f ${NETCDF4_ROOT}/include/netcdf.mod ${NETCDF4_ROOT}/lib/libnetcdff.* 
cd ${DATA}/tmp/netcdf-fortran
make distclean
git pull
autoreconf -i -f
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdff.configure.foo 2>&1
mv -f config.log netcdff.config.log.foo
make > netcdff.make.foo 2>&1
make check > netcdff.check.foo 2>&1
scp netcdff.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/.libs/libnetcdff90.a ${NETCDF4_ROOT}/lib/libnetcdff90.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/.libs/libnetcdff.a ${NETCDF4_ROOT}/lib/libnetcdff.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/typesizes.mod ${NETCDF4_ROOT}/include/typesizes.mod.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/netcdf.mod ${NETCDF4_ROOT}/include/netcdf.mod.gfortran
make clean

# Do same for netCDF4 CXX (old interface, still required by ESMF_RegridWeightGen and by TempestRemap):
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-cxx-4.2.tar.gz
tar xvzf netcdf-cxx-4.2.tar.gz 
cd ${DATA}/tmp/netcdf-cxx-4.2
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdf_cxx.configure.foo 2>&1
make > netcdf_cxx.make.foo 2>&1
mv -f config.log netcdf_cxx.config.log.foo
make check > netcdf_cxx.check.foo 2>&1
scp netcdf_cxx.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install

# Do same for netCDF4 C++ (new interface)
cd ${DATA}/tmp/netcdf-cxx4
git pull
autoreconf -i -f
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdf_c++.configure.foo 2>&1
make > netcdf_c++.make.foo 2>&1
mv -f config.log netcdf_c++.config.log.foo
make check > netcdf_c++.check.foo 2>&1
scp netcdf_c++.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install

# Do same for netCDF4 C
sudo /bin/rm -r -f ${NETCDF4_ROOT}/include/netcdf.h ${NETCDF4_ROOT}/include/netcdf_m*.h ${NETCDF4_ROOT}/lib/libnetcdf.* 
cd ${DATA}/tmp/netcdf-c
# NB: 20171001 make distclean must be run or unresolved link errors may occur
make distclean
git pull
autoreconf -i -f
# NB: --enable-cdf5 enables CDF5 format (disabled by default as of 4.5.0-rc3 20170930) and not re-enabled by default until netCDF 4.6.2
# NB: --enable-cxx-4 enables new netCDF4 C++ API
# NB: --enable-dap enables DAP
# NB: --enable-hdf4 enables reading HDF4 files (created with SD (Scientific Data) API) through netCDF4 API. NB: requires separately building HDF4 and libmfhdf.a, and header mfhdf.h must also be installed
# NB: --enable-hdf4 documented at http://www.unidata.ucar.edu/software/netcdf/docs/build_hdf4.html
# NB: --enable-hdf4 documented requires libhdf.a, libdf.a, libjpeg.a (and netCDF configure does not itself add -ljpeg)
# NB: --enable-logging allows HDF error message to print
# NB: --enable-nczarr builds Zarr
# NB: --enable-pnetcdf build with parallel I/O for classic files
# NB: --enable-separate-fortran builds libnetcdff.a (default with shared libraries)
# NB: --enable-shared builds shared libraries
# NB: --enable-v2 enables the version 2 interface used by netcdf-perl (needed for htrn2nc.pl)
# NB: --with-libcf builds libcf.a (apparently deprecated ~201307)
# NB: --with-udunits builds libudunits2.a (apparently deprecated ~201307)
# With HDF4 on FC26:
CPPFLAGS='-I/usr/local/include -I/usr/include/hdf' LDFLAGS='-L/usr/local/lib -L/usr/lib64/hdf' LIBS='-ljpeg' ./configure --prefix=/usr/local --enable-shared --enable-cdf5 --enable-dap --enable-hdf4 --enable-logging --enable-netcdf4 --enable-nczarr --enable-v2 > netcdf.configure.foo 2>&1
mv -f config.log netcdf.config.log.foo
make > netcdf.make.foo 2>&1
make check > netcdf.check.foo 2>&1
scp netcdf.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-c/libsrc/.libs/libnetcdf3.a ${NETCDF4_ROOT}/lib/libnetcdf3.a.gcc
sudo cp ${DATA}/tmp/netcdf-c/libsrc4/.libs/libnetcdf4.a ${NETCDF4_ROOT}/lib/libnetcdf4.a.gcc
make clean
exit # Return to previous shell level
# Output saved to:
http://dust.ess.uci.edu/tmp/netcdf.check.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.configure.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.make.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.config.log.x86_64-unknown-linux-gnu.foo
#***********************************************************************
# 20200716: skyglow.ess.uci.edu x86_64/EMT64 Fedora Core 32 gcc/gfortran 10.1.1 netcdf-4.8.0 HDF4 git
#***********************************************************************

#***********************************************************************
# 20210330: glace.ess.uci.edu x86_64/EMT64 Ubuntu Xenial 16.04 gcc/gfortran 7.5.0 netcdf-4.8.0 HDF4 git
#***********************************************************************
sudo aptitude install antlr bison doxygen flex gcc g++ gsl-bin libgsl0-dev libcurl4-gnutls-dev libexpat1-dev libxml2-dev netcdf-bin udunits-bin libudunits2-0 libudunits2-dev # Install netCDF prequisites
sudo yum install antlr antlr-C++ curl-devel libxml2-devel bison flex gcc gcc-c++ gcc-gfortran gsl gsl-devel librx librx-devel udunits2 udunits2-devel
cd ${DATA}/tmp
# svn co https://sub.unidata.ucar.edu/netcdf/trunk;mv trunk netcdf;/bin/cp ~/nco/autobld/ltmain.sh netcdf
# git clone git@github.com:Unidata/netcdf-c.git
# git clone git@github.com:Unidata/netcdf-fortran.git
# git clone git@github.com:Unidata/netcdf-cxx4.git

# 20140320: NB: NCO on FC20 works fine on HDF5 files with default system RPMs
# However, examining HDF4 files (based on default HDF4 RPMs) causes HDF5 library errors
# Not sure whether this is due to netcdf-4.3.2-rc1, system HDF5 (1.8.11) or what
# Do know that hand-building HDF5 1.8.12 and rebuilding netCDF and NCO on that does solve problem
# Conclusion: Best results with HDF4 files with hand-built HDF5 on FC20, though no need to hand-build HDF4

/bin/rm -r -f ${DATA}/tmp/hdf5-1.8.19*
# aptitude install libhdf4-alt-dev
cd ${DATA}/tmp
#wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/hdf5-1.8.19.tar.gz
# https://support.hdfgroup.org/HDF5/release/obtainsrc518.html#src
scp dust.ess.uci.edu:data/tmp/hdf5-1.8.19.tar.gz .
tar xvzf hdf5-1.8.19.tar.gz
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.8.19
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
# NB: x86_64 compilations require -fPIC -m64 flags to avoid errors on shared libraries that link to libnetcdf, e.g., libnetcdf-perl: "/usr/bin/ld: /usr/local/lib/libnetcdf.a(putget.o): relocation R_X86_64_32S against `a local symbol' can not be used when making a shared object; recompile with -fPIC"
export CC='gcc'
export CFLAGS='-fPIC -m64'
export CPPFLAGS=''
export CXX='g++'
export CXXFLAGS='-fPIC -m64'
export FC='gfortran'
export F77='gfortran'
export F90='gfortran'
export FCFLAGS=''
export FFLAGS=''
export F90FLAGS=''
export LDFLAGS='-L/usr/local/lib'
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.8.19/hdf5
# 20150622 Thread-safety is an HDF5 compile-time option
# Provides multiple concurrent reads by serializing its internal library calls, sacrificing their built-in concurrency
# Unclear whether this trade-off is worthwhile. Seems not to be.
# https://www.hdfgroup.org/hdf5-quest.html#mthread
# HDF5 --enable-threadsafe --with-pthread=$PTHREAD_DIR
./configure --prefix=${HDF5_ROOT} --enable-cxx --enable-fortran > hdf5.configure.foo 2>&1
# 20070507 HDF5 --enable-cxx conflicts with --enable-parallel
# 20070507 HDF5 --enable-parallel requires parallel filesystem
# ./configure --prefix=${HDF5_ROOT} --enable-fortran --enable-parallel
make > hdf5.make.foo 2>&1
# make check > hdf5.check.foo 2>&1
scp hdf5.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install

# Do same for netCDF4 Fortran
sudo /bin/rm -f ${NETCDF4_ROOT}/include/netcdf.mod ${NETCDF4_ROOT}/lib/libnetcdff.* 
cd ${DATA}/tmp/netcdf-fortran
make distclean
git pull
autoreconf -i -f
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdff.configure.foo 2>&1
mv -f config.log netcdff.config.log.foo
make > netcdff.make.foo 2>&1
make check > netcdff.check.foo 2>&1
scp netcdff.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/.libs/libnetcdff90.a ${NETCDF4_ROOT}/lib/libnetcdff90.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/.libs/libnetcdff.a ${NETCDF4_ROOT}/lib/libnetcdff.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/typesizes.mod ${NETCDF4_ROOT}/include/typesizes.mod.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/netcdf.mod ${NETCDF4_ROOT}/include/netcdf.mod.gfortran
make clean

# Do same for netCDF4 CXX (old interface, still required by ESMF_RegridWeightGen and by TempestRemap):
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-cxx-4.2.tar.gz
tar xvzf netcdf-cxx-4.2.tar.gz 
cd ${DATA}/tmp/netcdf-cxx-4.2
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdf_cxx.configure.foo 2>&1
make > netcdf_cxx.make.foo 2>&1
mv -f config.log netcdf_cxx.config.log.foo
make check > netcdf_cxx.check.foo 2>&1
scp netcdf_cxx.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install

# Do same for netCDF4 C++ (new interface)
cd ${DATA}/tmp/netcdf-cxx4
git pull
autoreconf -i -f
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdf_c++.configure.foo 2>&1
make > netcdf_c++.make.foo 2>&1
mv -f config.log netcdf_c++.config.log.foo
make check > netcdf_c++.check.foo 2>&1
scp netcdf_c++.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install

# Do same for netCDF4 C
sudo /bin/rm -r -f ${NETCDF4_ROOT}/include/netcdf.h ${NETCDF4_ROOT}/include/netcdf_m*.h ${NETCDF4_ROOT}/lib/libnetcdf.* 
cd ${DATA}/tmp/netcdf-c
# NB: 20171001 make distclean must be run or unresolved link errors may occur
make distclean
git pull
autoreconf -i -f
# NB: --enable-cdf5 enables CDF5 format (disabled by default as of 4.5.0-rc3 20170930) and not re-enabled by default until netCDF 4.6.2
# NB: --enable-cxx-4 enables new netCDF4 C++ API
# NB: --enable-dap enables DAP
# NB: --enable-hdf4 enables reading HDF4 files (created with SD (Scientific Data) API) through netCDF4 API. NB: requires separately building HDF4 and libmfhdf.a, and header mfhdf.h must also be installed
# NB: --enable-hdf4 documented at http://www.unidata.ucar.edu/software/netcdf/docs/build_hdf4.html
# NB: --enable-hdf4 documented requires libhdf.a, libdf.a, libjpeg.a (and netCDF configure does not itself add -ljpeg)
# NB: --enable-logging allows HDF error message to print
# NB: --enable-nczarr builds Zarr
# NB: --enable-pnetcdf build with parallel I/O for classic files
# NB: --enable-separate-fortran builds libnetcdff.a (default with shared libraries)
# NB: --enable-shared builds shared libraries
# NB: --enable-v2 enables the version 2 interface used by netcdf-perl (htrn2nc.pl) and by HDF4 ncgen
# NB: --with-libcf builds libcf.a (apparently deprecated ~201307)
# NB: --with-udunits builds libudunits2.a (apparently deprecated ~201307)
# With HDF4 on FC26 in /usr/local:
CPPFLAGS='-I/usr/local/include -I/usr/include/hdf' LDFLAGS='-L/usr/local/lib -L/usr/lib64/hdf' LIBS='-ljpeg' ./configure --prefix=/usr/local --enable-shared --enable-cdf5 --enable-dap --enable-hdf4 --enable-logging --enable-netcdf4 --enable-nczarr --enable-v2 > netcdf.configure.foo 2>&1
mv -f config.log netcdf.config.log.foo
make > netcdf.make.foo 2>&1
make check > netcdf.check.foo 2>&1
scp netcdf.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-c/libsrc/.libs/libnetcdf3.a ${NETCDF4_ROOT}/lib/libnetcdf3.a.gcc
sudo cp ${DATA}/tmp/netcdf-c/libsrc4/.libs/libnetcdf4.a ${NETCDF4_ROOT}/lib/libnetcdf4.a.gcc
make clean
exit # Return to previous shell level
# Output saved to:
http://dust.ess.uci.edu/tmp/netcdf.check.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.configure.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.make.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.config.log.x86_64-unknown-linux-gnu.foo
#***********************************************************************
# 20210330: glace.ess.uci.edu x86_64/EMT64 Ubuntu Xenial 16.04 gcc/gfortran 7.5.0 netcdf-4.8.0 HDF4 git
#***********************************************************************

#***********************************************************************
# 20210416: e3sm.ess.uci.edu x86_64/EMT64 CentOS 7 gcc/gfortran 4.8.5 netcdf-4.8.1-development HDF4 git
#***********************************************************************
sudo aptitude install antlr bison doxygen flex gcc g++ gsl-bin libgsl0-dev libcurl4-gnutls-dev libexpat1-dev libxml2-dev netcdf-bin udunits-bin libudunits2-0 libudunits2-dev # Install netCDF prequisites
sudo yum install antlr antlr-C++ curl-devel libxml2-devel bison flex gcc gcc-c++ gcc-gfortran gsl gsl-devel librx librx-devel udunits2 udunits2-devel
cd ${DATA}/tmp
# svn co https://sub.unidata.ucar.edu/netcdf/trunk;mv trunk netcdf;/bin/cp ~/nco/autobld/ltmain.sh netcdf
# git clone git@github.com:Unidata/netcdf-c.git
# git clone git@github.com:Unidata/netcdf-fortran.git
# git clone git@github.com:Unidata/netcdf-cxx4.git

# 20140320: NB: NCO on FC20 works fine on HDF5 files with default system RPMs
# However, examining HDF4 files (based on default HDF4 RPMs) causes HDF5 library errors
# Not sure whether this is due to netcdf-4.3.2-rc1, system HDF5 (1.8.11) or what
# Do know that hand-building HDF5 1.8.12 and rebuilding netCDF and NCO on that does solve problem
# Conclusion: Best results with HDF4 files with hand-built HDF5 on FC20, though no need to hand-build HDF4

/bin/rm -r -f ${DATA}/tmp/hdf5-1.8.19*
# aptitude install libhdf4-alt-dev
cd ${DATA}/tmp
#wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/hdf5-1.8.19.tar.gz
# https://support.hdfgroup.org/HDF5/release/obtainsrc518.html#src
scp dust.ess.uci.edu:data/tmp/hdf5-1.8.19.tar.gz .
tar xvzf hdf5-1.8.19.tar.gz
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.8.19
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
# NB: x86_64 compilations require -fPIC -m64 flags to avoid errors on shared libraries that link to libnetcdf, e.g., libnetcdf-perl: "/usr/bin/ld: /usr/local/lib/libnetcdf.a(putget.o): relocation R_X86_64_32S against `a local symbol' can not be used when making a shared object; recompile with -fPIC"
export CC='gcc'
export CFLAGS='-fPIC -m64'
export CPPFLAGS=''
export CXX='g++'
export CXXFLAGS='-fPIC -m64'
export FC='gfortran'
export F77='gfortran'
export F90='gfortran'
export FCFLAGS=''
export FFLAGS=''
export F90FLAGS=''
export LDFLAGS='-L/usr/local/lib'
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.8.19/hdf5
# 20150622 Thread-safety is an HDF5 compile-time option
# Provides multiple concurrent reads by serializing its internal library calls, sacrificing their built-in concurrency
# Unclear whether this trade-off is worthwhile. Seems not to be.
# https://www.hdfgroup.org/hdf5-quest.html#mthread
# HDF5 --enable-threadsafe --with-pthread=$PTHREAD_DIR
./configure --prefix=${HDF5_ROOT} --enable-cxx --enable-fortran > hdf5.configure.foo 2>&1
# 20070507 HDF5 --enable-cxx conflicts with --enable-parallel
# 20070507 HDF5 --enable-parallel requires parallel filesystem
# ./configure --prefix=${HDF5_ROOT} --enable-fortran --enable-parallel
make > hdf5.make.foo 2>&1
# make check > hdf5.check.foo 2>&1
scp hdf5.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install

# Do same for netCDF4 Fortran
sudo /bin/rm -f ${NETCDF4_ROOT}/include/netcdf.mod ${NETCDF4_ROOT}/lib/libnetcdff.* 
cd ${DATA}/tmp/netcdf-fortran
make distclean
git pull
autoreconf -i -f
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdff.configure.foo 2>&1
mv -f config.log netcdff.config.log.foo
make > netcdff.make.foo 2>&1
make check > netcdff.check.foo 2>&1
scp netcdff.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/.libs/libnetcdff90.a ${NETCDF4_ROOT}/lib/libnetcdff90.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/.libs/libnetcdff.a ${NETCDF4_ROOT}/lib/libnetcdff.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/typesizes.mod ${NETCDF4_ROOT}/include/typesizes.mod.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/netcdf.mod ${NETCDF4_ROOT}/include/netcdf.mod.gfortran
make clean

# Do same for netCDF4 CXX (old interface, still required by ESMF_RegridWeightGen and by TempestRemap):
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-cxx-4.2.tar.gz
tar xvzf netcdf-cxx-4.2.tar.gz 
cd ${DATA}/tmp/netcdf-cxx-4.2
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdf_cxx.configure.foo 2>&1
make > netcdf_cxx.make.foo 2>&1
mv -f config.log netcdf_cxx.config.log.foo
make check > netcdf_cxx.check.foo 2>&1
scp netcdf_cxx.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install

# Do same for netCDF4 C++ (new interface)
cd ${DATA}/tmp/netcdf-cxx4
git pull
autoreconf -i -f
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdf_c++.configure.foo 2>&1
make > netcdf_c++.make.foo 2>&1
mv -f config.log netcdf_c++.config.log.foo
make check > netcdf_c++.check.foo 2>&1
scp netcdf_c++.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install

# Do same for netCDF4 C
sudo /bin/rm -r -f ${NETCDF4_ROOT}/include/netcdf.h ${NETCDF4_ROOT}/include/netcdf_m*.h ${NETCDF4_ROOT}/lib/libnetcdf.* 
cd ${DATA}/tmp/netcdf-c
# NB: 20171001 make distclean must be run or unresolved link errors may occur
make distclean
git pull
autoreconf -i -f
# NB: --enable-cdf5 enables CDF5 format (disabled by default as of 4.5.0-rc3 20170930) and not re-enabled by default until netCDF 4.6.2
# NB: --enable-cxx-4 enables new netCDF4 C++ API
# NB: --enable-dap enables DAP
# NB: --enable-hdf4 enables reading HDF4 files (created with SD (Scientific Data) API) through netCDF4 API. NB: requires separately building HDF4 and libmfhdf.a, and header mfhdf.h must also be installed
# NB: --enable-hdf4 documented at http://www.unidata.ucar.edu/software/netcdf/docs/build_hdf4.html
# NB: --enable-hdf4 documented requires libhdf.a, libdf.a, libjpeg.a (and netCDF configure does not itself add -ljpeg)
# NB: --enable-logging allows HDF error message to print
# NB: --enable-nczarr builds Zarr
# NB: --enable-pnetcdf build with parallel I/O for classic files
# NB: --enable-separate-fortran builds libnetcdff.a (default with shared libraries)
# NB: --enable-shared builds shared libraries
# NB: --enable-v2 enables the version 2 interface used by netcdf-perl (htrn2nc.pl) and by HDF4 ncgen
# NB: --with-libcf builds libcf.a (apparently deprecated ~201307)
# NB: --with-udunits builds libudunits2.a (apparently deprecated ~201307)
# With HDF4 on FC26 in /usr/local:
CPPFLAGS='-I/usr/local/include -I/usr/include/hdf' LDFLAGS='-L/usr/local/lib -L/usr/lib64/hdf' LIBS='-ljpeg' ./configure --prefix=/usr/local --enable-shared --enable-cdf5 --enable-dap --enable-hdf4 --enable-logging --enable-netcdf4 --enable-nczarr --enable-v2 > netcdf.configure.foo 2>&1
mv -f config.log netcdf.config.log.foo
make > netcdf.make.foo 2>&1
make check > netcdf.check.foo 2>&1
scp netcdf.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-c/libsrc/.libs/libnetcdf3.a ${NETCDF4_ROOT}/lib/libnetcdf3.a.gcc
sudo cp ${DATA}/tmp/netcdf-c/libsrc4/.libs/libnetcdf4.a ${NETCDF4_ROOT}/lib/libnetcdf4.a.gcc
make clean
exit # Return to previous shell level
# Output saved to:
http://dust.ess.uci.edu/tmp/netcdf.check.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.configure.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.make.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.config.log.x86_64-unknown-linux-gnu.foo
#***********************************************************************
# 20210416: e3sm.ess.uci.edu x86_64/EMT64 Ubuntu Xenial 16.04 gcc/gfortran 7.5.0 netcdf-4.8.0 HDF4 git
#***********************************************************************

#***********************************************************************
# 20211019: sastrugi.ess.uci.edu MacOS 11.6 Homebrew clang 13.0/gfortran 11.2 netcdf-4.8.2-development HDF4 git
#***********************************************************************
sudo aptitude install antlr bison doxygen flex gcc g++ gsl-bin libgsl0-dev libcurl4-gnutls-dev libexpat1-dev libxml2-dev netcdf-bin udunits-bin libudunits2-0 libudunits2-dev # Install netCDF prequisites
sudo yum install antlr antlr-C++ curl-devel libxml2-devel bison flex gcc gcc-c++ gcc-gfortran gsl gsl-devel librx librx-devel udunits2 udunits2-devel
cd ${DATA}/tmp
# git clone git@github.com:Unidata/netcdf-c.git
# git clone git@github.com:Unidata/netcdf-fortran.git
# git clone git@github.com:Unidata/netcdf-cxx4.git

/bin/rm -r -f ${DATA}/tmp/hdf5-1.8.19*
# aptitude install libhdf4-alt-dev
cd ${DATA}/tmp
#wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/hdf5-1.8.19.tar.gz
# https://support.hdfgroup.org/HDF5/release/obtainsrc518.html#src
scp dust.ess.uci.edu:data/tmp/hdf5-1.8.19.tar.gz .
tar xvzf hdf5-1.8.19.tar.gz
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.8.19
make distclean
# 20140320: NB: NCO on FC20 works fine on HDF5 files with default system RPMs
# However, examining HDF4 files (based on default HDF4 RPMs) causes HDF5 library errors
# Not sure whether this is due to netcdf-4.3.2-rc1, system HDF5 (1.8.11) or what
# Do know that hand-building HDF5 1.8.12 and rebuilding netCDF and NCO on that does solve problem
# Conclusion: Best results with HDF4 files with hand-built HDF5 on FC20, though no need to hand-build HDF4

bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
# NB: x86_64 compilations require -fPIC -m64 flags to avoid errors on shared libraries that link to libnetcdf, e.g., libnetcdf-perl: "/usr/bin/ld: /usr/local/lib/libnetcdf.a(putget.o): relocation R_X86_64_32S against `a local symbol' can not be used when making a shared object; recompile with -fPIC"
export CC='gcc'
export CFLAGS='-fPIC -m64'
export CPPFLAGS=''
export CXX='g++'
export CXXFLAGS='-fPIC -m64'
export FC='gfortran'
export F77='gfortran'
export F90='gfortran'
export FCFLAGS=''
export FFLAGS=''
export F90FLAGS=''
export LDFLAGS='-L/usr/local/lib'
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.8.19/hdf5
# 20150622 Thread-safety is an HDF5 compile-time option
# Provides multiple concurrent reads by serializing its internal library calls, sacrificing their built-in concurrency
# Unclear whether this trade-off is worthwhile. Seems not to be.
# https://www.hdfgroup.org/hdf5-quest.html#mthread
# HDF5 --enable-threadsafe --with-pthread=$PTHREAD_DIR
./configure --prefix=${HDF5_ROOT} --enable-cxx --enable-fortran > hdf5.configure.foo 2>&1
# 20070507 HDF5 --enable-cxx conflicts with --enable-parallel
# 20070507 HDF5 --enable-parallel requires parallel filesystem
# ./configure --prefix=${HDF5_ROOT} --enable-fortran --enable-parallel
make > hdf5.make.foo 2>&1
# make check > hdf5.check.foo 2>&1
scp hdf5.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install

# Do same for netCDF4 Fortran
sudo /bin/rm -f ${NETCDF4_ROOT}/include/netcdf.mod ${NETCDF4_ROOT}/lib/libnetcdff.* 
cd ${DATA}/tmp/netcdf-fortran
make distclean
git pull
autoreconf -i -f
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdff.configure.foo 2>&1
mv -f config.log netcdff.config.log.foo
make > netcdff.make.foo 2>&1
make check > netcdff.check.foo 2>&1
scp netcdff.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/.libs/libnetcdff90.a ${NETCDF4_ROOT}/lib/libnetcdff90.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/.libs/libnetcdff.a ${NETCDF4_ROOT}/lib/libnetcdff.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/typesizes.mod ${NETCDF4_ROOT}/include/typesizes.mod.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/netcdf.mod ${NETCDF4_ROOT}/include/netcdf.mod.gfortran
make clean

# Do same for netCDF4 CXX (old interface, still required by ESMF_RegridWeightGen and by TempestRemap):
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-cxx-4.2.tar.gz
tar xvzf netcdf-cxx-4.2.tar.gz 
cd ${DATA}/tmp/netcdf-cxx-4.2
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdf_cxx.configure.foo 2>&1
make > netcdf_cxx.make.foo 2>&1
mv -f config.log netcdf_cxx.config.log.foo
make check > netcdf_cxx.check.foo 2>&1
scp netcdf_cxx.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install

# Do same for netCDF4 C++ (new interface)
cd ${DATA}/tmp/netcdf-cxx4
git pull
autoreconf -i -f
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdf_c++.configure.foo 2>&1
make > netcdf_c++.make.foo 2>&1
mv -f config.log netcdf_c++.config.log.foo
make check > netcdf_c++.check.foo 2>&1
scp netcdf_c++.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install

# Do same for netCDF4 C
sudo /bin/rm -r -f ${NETCDF4_ROOT}/include/netcdf.h ${NETCDF4_ROOT}/include/netcdf_m*.h ${NETCDF4_ROOT}/lib/libnetcdf.* 
cd ~/netcdf-c
# NB: 20171001 make distclean must be run or unresolved link errors may occur
make distclean
git pull
autoreconf -i -f
# NB: --enable-cdf5 enables CDF5 format (disabled by default as of 4.5.0-rc3 20170930) and not re-enabled by default until netCDF 4.6.2
# NB: --enable-cxx-4 enables new netCDF4 C++ API
# NB: --enable-dap enables DAP
# NB: --enable-hdf4 enables reading HDF4 files (created with SD (Scientific Data) API) through netCDF4 API. NB: requires separately building HDF4 and libmfhdf.a, and header mfhdf.h must also be installed
# NB: --enable-hdf4 documented at http://www.unidata.ucar.edu/software/netcdf/docs/build_hdf4.html
# NB: --enable-hdf4 documented requires libhdf.a, libdf.a, libjpeg.a (and netCDF configure does not itself add -ljpeg)
# NB: --enable-logging allows HDF error message to print
# NB: --enable-nczarr builds Zarr
# NB: --enable-pnetcdf build with parallel I/O for classic files
# NB: --enable-separate-fortran builds libnetcdff.a (default with shared libraries)
# NB: --enable-shared builds shared libraries
# NB: --enable-v2 enables the version 2 interface used by netcdf-perl (htrn2nc.pl) and by HDF4 ncgen
# NB: --with-libcf builds libcf.a (apparently deprecated ~201307)
# NB: --with-udunits builds libudunits2.a (apparently deprecated ~201307)
# With HDF4 on FC26 in /usr/local:
CPPFLAGS="-I/usr/local/include -I${HOME}/anaconda/include" LDFLAGS="-L/usr/local/lib -L${HOME}/anaconda/lib" ./configure --prefix=${HOME}/opt --enable-shared --enable-cdf5 --enable-dap --enable-hdf4 --enable-logging --enable-netcdf4 --enable-nczarr --enable-v2 > netcdf.configure.foo 2>&1
mv -f config.log netcdf.config.log.foo
make > netcdf.make.foo 2>&1
make check > netcdf.check.foo 2>&1
scp netcdf.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-c/libsrc/.libs/libnetcdf3.a ${NETCDF4_ROOT}/lib/libnetcdf3.a.gcc
sudo cp ${DATA}/tmp/netcdf-c/libsrc4/.libs/libnetcdf4.a ${NETCDF4_ROOT}/lib/libnetcdf4.a.gcc
make clean
exit # Return to previous shell level
# Output saved to:
http://dust.ess.uci.edu/tmp/netcdf.check.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.configure.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.make.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.config.log.x86_64-unknown-linux-gnu.foo
#***********************************************************************
# 20211019: sastrugi.ess.uci.edu MacOS 11.6 Homebrew clang 13.0/gfortran 11.2 netcdf-4.8.2-development HDF4 git
#***********************************************************************

#***********************************************************************
# 20220209: sastrugi.ess.uci.edu MacOS 12.1 Homebrew clang 13.0/gfortran 11.2 netcdf-4.8.2-development HDF4 git
#***********************************************************************
sudo aptitude install antlr bison doxygen flex gcc g++ gsl-bin libgsl0-dev libcurl4-gnutls-dev libexpat1-dev libxml2-dev netcdf-bin udunits-bin libudunits2-0 libudunits2-dev # Install netCDF prequisites
sudo yum install antlr antlr-C++ curl-devel libxml2-devel bison flex gcc gcc-c++ gcc-gfortran gsl gsl-devel librx librx-devel udunits2 udunits2-devel
cd ${DATA}/tmp
# git clone git@github.com:Unidata/netcdf-c.git
# git clone git@github.com:Unidata/netcdf-fortran.git
# git clone git@github.com:Unidata/netcdf-cxx4.git

/bin/rm -r -f ${DATA}/tmp/hdf5-1.8.19*
# aptitude install libhdf4-alt-dev
cd ${DATA}/tmp
#wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/hdf5-1.8.19.tar.gz
# https://support.hdfgroup.org/HDF5/release/obtainsrc518.html#src
scp dust.ess.uci.edu:data/tmp/hdf5-1.8.19.tar.gz .
tar xvzf hdf5-1.8.19.tar.gz
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.8.19
make distclean
# 20140320: NB: NCO on FC20 works fine on HDF5 files with default system RPMs
# However, examining HDF4 files (based on default HDF4 RPMs) causes HDF5 library errors
# Not sure whether this is due to netcdf-4.3.2-rc1, system HDF5 (1.8.11) or what
# Do know that hand-building HDF5 1.8.12 and rebuilding netCDF and NCO on that does solve problem
# Conclusion: Best results with HDF4 files with hand-built HDF5 on FC20, though no need to hand-build HDF4

bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
# NB: x86_64 compilations require -fPIC -m64 flags to avoid errors on shared libraries that link to libnetcdf, e.g., libnetcdf-perl: "/usr/bin/ld: /usr/local/lib/libnetcdf.a(putget.o): relocation R_X86_64_32S against `a local symbol' can not be used when making a shared object; recompile with -fPIC"
export CC='gcc'
export CFLAGS='-fPIC -m64'
export CPPFLAGS=''
export CXX='g++'
export CXXFLAGS='-fPIC -m64'
export FC='gfortran'
export F77='gfortran'
export F90='gfortran'
export FCFLAGS=''
export FFLAGS=''
export F90FLAGS=''
export LDFLAGS='-L/usr/local/lib'
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.8.19/hdf5
# 20150622 Thread-safety is an HDF5 compile-time option
# Provides multiple concurrent reads by serializing its internal library calls, sacrificing their built-in concurrency
# Unclear whether this trade-off is worthwhile. Seems not to be.
# https://www.hdfgroup.org/hdf5-quest.html#mthread
# HDF5 --enable-threadsafe --with-pthread=$PTHREAD_DIR
./configure --prefix=${HDF5_ROOT} --enable-cxx --enable-fortran > hdf5.configure.foo 2>&1
# 20070507 HDF5 --enable-cxx conflicts with --enable-parallel
# 20070507 HDF5 --enable-parallel requires parallel filesystem
# ./configure --prefix=${HDF5_ROOT} --enable-fortran --enable-parallel
make > hdf5.make.foo 2>&1
# make check > hdf5.check.foo 2>&1
scp hdf5.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install

# Do same for netCDF4 Fortran
sudo /bin/rm -f ${NETCDF4_ROOT}/include/netcdf.mod ${NETCDF4_ROOT}/lib/libnetcdff.* 
cd ${DATA}/tmp/netcdf-fortran
make distclean
git pull
autoreconf -i -f
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdff.configure.foo 2>&1
mv -f config.log netcdff.config.log.foo
make > netcdff.make.foo 2>&1
make check > netcdff.check.foo 2>&1
scp netcdff.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/.libs/libnetcdff90.a ${NETCDF4_ROOT}/lib/libnetcdff90.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/.libs/libnetcdff.a ${NETCDF4_ROOT}/lib/libnetcdff.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/typesizes.mod ${NETCDF4_ROOT}/include/typesizes.mod.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/netcdf.mod ${NETCDF4_ROOT}/include/netcdf.mod.gfortran
make clean

# Do same for netCDF4 CXX (old interface, still required by ESMF_RegridWeightGen and by TempestRemap):
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-cxx-4.2.tar.gz
tar xvzf netcdf-cxx-4.2.tar.gz 
cd ${DATA}/tmp/netcdf-cxx-4.2
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdf_cxx.configure.foo 2>&1
make > netcdf_cxx.make.foo 2>&1
mv -f config.log netcdf_cxx.config.log.foo
make check > netcdf_cxx.check.foo 2>&1
scp netcdf_cxx.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install

# Do same for netCDF4 C++ (new interface)
cd ${DATA}/tmp/netcdf-cxx4
git pull
autoreconf -i -f
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdf_c++.configure.foo 2>&1
make > netcdf_c++.make.foo 2>&1
mv -f config.log netcdf_c++.config.log.foo
make check > netcdf_c++.check.foo 2>&1
scp netcdf_c++.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install

# Do same for netCDF4 C
sudo /bin/rm -r -f ${NETCDF4_ROOT}/include/netcdf.h ${NETCDF4_ROOT}/include/netcdf_m*.h ${NETCDF4_ROOT}/lib/libnetcdf.* 

cd ~/netcdf-c
# NB: 20171001 make distclean must be run or unresolved link errors may occur
make distclean
git pull
autoreconf -i -f
# NB: --enable-cdf5 enables CDF5 format (disabled by default as of 4.5.0-rc3 20170930) and not re-enabled by default until netCDF 4.6.2
# NB: --enable-cxx-4 enables new netCDF4 C++ API
# NB: --enable-dap enables DAP
# NB: --enable-hdf4 enables reading HDF4 files (created with SD (Scientific Data) API) through netCDF4 API. NB: requires separately building HDF4 and libmfhdf.a, and header mfhdf.h must also be installed
# NB: --enable-hdf4 documented at http://www.unidata.ucar.edu/software/netcdf/docs/build_hdf4.html
# NB: --enable-hdf4 documented requires libhdf.a, libdf.a, libjpeg.a (and netCDF configure does not itself add -ljpeg)
# NB: --enable-logging allows HDF error message to print
# NB: --enable-nczarr builds Zarr
# NB: --enable-pnetcdf build with parallel I/O for classic files
# NB: --enable-separate-fortran builds libnetcdff.a (default with shared libraries)
# NB: --enable-shared builds shared libraries
# NB: --enable-v2 enables the version 2 interface used by netcdf-perl (htrn2nc.pl) and by HDF4 ncgen
# NB: --with-libcf builds libcf.a (apparently deprecated ~201307)
# NB: --with-udunits builds libudunits2.a (apparently deprecated ~201307)
# With HDF4 on FC26 in /usr/local:
# 20220220: Remove Anaconda paths and HDF4 to build netcdf-c
# Place in /opt/local/netcdf so sudo make install 
CC='clang' CPPFLAGS="-I/usr/local/include" LDFLAGS="-L/usr/local/lib" ./configure --prefix=/opt/netcdf --enable-shared --enable-cdf5 --enable-dap --enable-logging --enable-netcdf4 --enable-nczarr --enable-v2 > netcdf.configure.foo 2>&1
mv -f config.log netcdf.config.log.foo
make > netcdf.make.foo 2>&1
make check > netcdf.check.foo 2>&1
scp netcdf.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-c/libsrc/.libs/libnetcdf3.a ${NETCDF4_ROOT}/lib/libnetcdf3.a.gcc
sudo cp ${DATA}/tmp/netcdf-c/libsrc4/.libs/libnetcdf4.a ${NETCDF4_ROOT}/lib/libnetcdf4.a.gcc
make clean
exit # Return to previous shell level
# Output saved to:
http://dust.ess.uci.edu/tmp/netcdf.check.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.configure.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.make.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.config.log.x86_64-unknown-linux-gnu.foo
#***********************************************************************
# 20220209: sastrugi.ess.uci.edu MacOS 12.1 Homebrew clang 13.0/gfortran 11.2 netcdf-4.8.2-development HDF4 git
#***********************************************************************

#***********************************************************************
# 20220616: glace.ess.uci.edu x86_64/EMT64 Ubuntu Xenial 16.04 gcc/gfortran 7.5.0 netcdf-4.9.1 HDF4 git
#***********************************************************************
sudo aptitude install antlr bison doxygen flex gcc g++ gsl-bin libgsl0-dev libcurl4-gnutls-dev libexpat1-dev libxml2-dev netcdf-bin udunits-bin libudunits2-0 libudunits2-dev # Install netCDF prequisites
sudo yum install antlr antlr-C++ curl-devel libxml2-devel bison flex gcc gcc-c++ gcc-gfortran gsl gsl-devel librx librx-devel udunits2 udunits2-devel
cd ${DATA}/tmp
# svn co https://sub.unidata.ucar.edu/netcdf/trunk;mv trunk netcdf;/bin/cp ~/nco/autobld/ltmain.sh netcdf
# git clone git@github.com:Unidata/netcdf-c.git
# git clone git@github.com:Unidata/netcdf-fortran.git
# git clone git@github.com:Unidata/netcdf-cxx4.git

# 20140320: NB: NCO on FC20 works fine on HDF5 files with default system RPMs
# However, examining HDF4 files (based on default HDF4 RPMs) causes HDF5 library errors
# Not sure whether this is due to netcdf-4.3.2-rc1, system HDF5 (1.8.11) or what
# Do know that hand-building HDF5 1.8.12 and rebuilding netCDF and NCO on that does solve problem
# Conclusion: Best results with HDF4 files with hand-built HDF5 on FC20, though no need to hand-build HDF4

/bin/rm -r -f ${DATA}/tmp/hdf5-1.8.19*
# aptitude install libhdf4-alt-dev
cd ${DATA}/tmp
#wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/hdf5-1.8.19.tar.gz
# https://support.hdfgroup.org/HDF5/release/obtainsrc518.html#src
scp dust.ess.uci.edu:data/tmp/hdf5-1.8.19.tar.gz .
tar xvzf hdf5-1.8.19.tar.gz
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.8.19
make distclean
bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
# NB: x86_64 compilations require -fPIC -m64 flags to avoid errors on shared libraries that link to libnetcdf, e.g., libnetcdf-perl: "/usr/bin/ld: /usr/local/lib/libnetcdf.a(putget.o): relocation R_X86_64_32S against `a local symbol' can not be used when making a shared object; recompile with -fPIC"
export CC='gcc'
export CFLAGS='-fPIC -m64'
export CPPFLAGS=''
export CXX='g++'
export CXXFLAGS='-fPIC -m64'
export FC='gfortran'
export F77='gfortran'
export F90='gfortran'
export FCFLAGS=''
export FFLAGS=''
export F90FLAGS=''
export LDFLAGS='-L/usr/local/lib'
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.8.19/hdf5
# 20150622 Thread-safety is an HDF5 compile-time option
# Provides multiple concurrent reads by serializing its internal library calls, sacrificing their built-in concurrency
# Unclear whether this trade-off is worthwhile. Seems not to be.
# https://www.hdfgroup.org/hdf5-quest.html#mthread
# HDF5 --enable-threadsafe --with-pthread=$PTHREAD_DIR
./configure --prefix=${HDF5_ROOT} --enable-cxx --enable-fortran > hdf5.configure.foo 2>&1
# 20070507 HDF5 --enable-cxx conflicts with --enable-parallel
# 20070507 HDF5 --enable-parallel requires parallel filesystem
# ./configure --prefix=${HDF5_ROOT} --enable-fortran --enable-parallel
make > hdf5.make.foo 2>&1
# make check > hdf5.check.foo 2>&1
scp hdf5.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install

# Do same for netCDF4 Fortran
sudo /bin/rm -f ${NETCDF4_ROOT}/include/netcdf.mod ${NETCDF4_ROOT}/lib/libnetcdff.* 
cd ${DATA}/tmp/netcdf-fortran
make distclean
git pull
autoreconf -i -f
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdff.configure.foo 2>&1
mv -f config.log netcdff.config.log.foo
make > netcdff.make.foo 2>&1
make check > netcdff.check.foo 2>&1
scp netcdff.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/.libs/libnetcdff90.a ${NETCDF4_ROOT}/lib/libnetcdff90.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/.libs/libnetcdff.a ${NETCDF4_ROOT}/lib/libnetcdff.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/typesizes.mod ${NETCDF4_ROOT}/include/typesizes.mod.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/netcdf.mod ${NETCDF4_ROOT}/include/netcdf.mod.gfortran
make clean

# Do same for netCDF4 CXX (old interface, still required by ESMF_RegridWeightGen and by TempestRemap):
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-cxx-4.2.tar.gz
tar xvzf netcdf-cxx-4.2.tar.gz 
cd ${DATA}/tmp/netcdf-cxx-4.2
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdf_cxx.configure.foo 2>&1
make > netcdf_cxx.make.foo 2>&1
mv -f config.log netcdf_cxx.config.log.foo
make check > netcdf_cxx.check.foo 2>&1
scp netcdf_cxx.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install

# Do same for netCDF4 C++ (new interface)
cd ${DATA}/tmp/netcdf-cxx4
git pull
autoreconf -i -f
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdf_c++.configure.foo 2>&1
make > netcdf_c++.make.foo 2>&1
mv -f config.log netcdf_c++.config.log.foo
make check > netcdf_c++.check.foo 2>&1
scp netcdf_c++.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install

# Do same for netCDF4 C
sudo /bin/rm -r -f ${NETCDF4_ROOT}/include/netcdf.h ${NETCDF4_ROOT}/include/netcdf_m*.h ${NETCDF4_ROOT}/lib/libnetcdf.* 
cd ${DATA}/tmp/netcdf-c
# NB: 20171001 make distclean must be run or unresolved link errors may occur
make distclean
git pull
autoreconf -i -f
# NB: --enable-cdf5 enables CDF5 format (disabled by default as of 4.5.0-rc3 20170930) and not re-enabled by default until netCDF 4.6.2
# NB: --enable-cxx-4 enables new netCDF4 C++ API
# NB: --enable-dap enables DAP
# NB: --enable-hdf4 enables reading HDF4 files (created with SD (Scientific Data) API) through netCDF4 API. NB: requires separately building HDF4 and libmfhdf.a, and header mfhdf.h must also be installed
# NB: --enable-hdf4 documented at http://www.unidata.ucar.edu/software/netcdf/docs/build_hdf4.html
# NB: --enable-hdf4 documented requires libhdf.a, libdf.a, libjpeg.a (and netCDF configure does not itself add -ljpeg)
# NB: --enable-logging allows HDF error message to print
# NB: --enable-nczarr builds Zarr
# NB: --enable-pnetcdf build with parallel I/O for classic files
# NB: --enable-separate-fortran builds libnetcdff.a (default with shared libraries)
# NB: --enable-shared builds shared libraries
# NB: --enable-v2 enables the version 2 interface used by netcdf-perl (htrn2nc.pl) and by HDF4 ncgen
# NB: --with-libcf builds libcf.a (apparently deprecated ~201307)
# NB: --with-udunits builds libudunits2.a (apparently deprecated ~201307)
# With HDF4 on FC26 in /usr/local:
CPPFLAGS='-I/usr/local/include -I/usr/include/hdf' LDFLAGS='-L/usr/local/lib -L/usr/lib64/hdf' LIBS='-ljpeg' ./configure --prefix=/usr/local --enable-shared --enable-cdf5 --enable-dap --enable-hdf4 --enable-logging --enable-netcdf4 --enable-nczarr --enable-v2 > netcdf.configure.foo 2>&1
mv -f config.log netcdf.config.log.foo
make > netcdf.make.foo 2>&1
make check > netcdf.check.foo 2>&1
scp netcdf.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-c/libsrc/.libs/libnetcdf3.a ${NETCDF4_ROOT}/lib/libnetcdf3.a.gcc
sudo cp ${DATA}/tmp/netcdf-c/libsrc4/.libs/libnetcdf4.a ${NETCDF4_ROOT}/lib/libnetcdf4.a.gcc
make clean
exit # Return to previous shell level
# Output saved to:
http://dust.ess.uci.edu/tmp/netcdf.check.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.configure.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.make.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.config.log.x86_64-unknown-linux-gnu.foo
#***********************************************************************
# 20220616: glace.ess.uci.edu x86_64/EMT64 Ubuntu Xenial 16.04 gcc/gfortran 7.5.0 netcdf-4.9.1 HDF4 git
#***********************************************************************

#***********************************************************************
# 20220617: spectral.ess.uci.edu MacOS 12.4 Homebrew clang 13.0.1/gfortran 11.3.0 netcdf-4.9.1-development git
#***********************************************************************
sudo aptitude install antlr bison doxygen flex gcc g++ gsl-bin libgsl0-dev libcurl4-gnutls-dev libexpat1-dev libxml2-dev netcdf-bin udunits-bin libudunits2-0 libudunits2-dev # Install netCDF prequisites
sudo yum install antlr antlr-C++ curl-devel libxml2-devel bison flex gcc gcc-c++ gcc-gfortran gsl gsl-devel librx librx-devel udunits2 udunits2-devel
cd ${DATA}/tmp
# git clone git@github.com:Unidata/netcdf-c.git
# git clone git@github.com:Unidata/netcdf-fortran.git
# git clone git@github.com:Unidata/netcdf-cxx4.git

/bin/rm -r -f ${DATA}/tmp/hdf5-1.8.19*
# aptitude install libhdf4-alt-dev
cd ${DATA}/tmp
#wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/hdf5-1.8.19.tar.gz
# https://support.hdfgroup.org/HDF5/release/obtainsrc518.html#src
scp dust.ess.uci.edu:data/tmp/hdf5-1.8.19.tar.gz .
tar xvzf hdf5-1.8.19.tar.gz
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.8.19
make distclean
# 20140320: NB: NCO on FC20 works fine on HDF5 files with default system RPMs
# However, examining HDF4 files (based on default HDF4 RPMs) causes HDF5 library errors
# Not sure whether this is due to netcdf-4.3.2-rc1, system HDF5 (1.8.11) or what
# Do know that hand-building HDF5 1.8.12 and rebuilding netCDF and NCO on that does solve problem
# Conclusion: Best results with HDF4 files with hand-built HDF5 on FC20, though no need to hand-build HDF4

bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
# NB: x86_64 compilations require -fPIC -m64 flags to avoid errors on shared libraries that link to libnetcdf, e.g., libnetcdf-perl: "/usr/bin/ld: /usr/local/lib/libnetcdf.a(putget.o): relocation R_X86_64_32S against `a local symbol' can not be used when making a shared object; recompile with -fPIC"
export CC='gcc'
export CFLAGS='-fPIC -m64'
export CPPFLAGS=''
export CXX='g++'
export CXXFLAGS='-fPIC -m64'
export FC='gfortran'
export F77='gfortran'
export F90='gfortran'
export FCFLAGS=''
export FFLAGS=''
export F90FLAGS=''
export LDFLAGS='-L/usr/local/lib'
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.8.19/hdf5
# 20150622 Thread-safety is an HDF5 compile-time option
# Provides multiple concurrent reads by serializing its internal library calls, sacrificing their built-in concurrency
# Unclear whether this trade-off is worthwhile. Seems not to be.
# https://www.hdfgroup.org/hdf5-quest.html#mthread
# HDF5 --enable-threadsafe --with-pthread=$PTHREAD_DIR
./configure --prefix=${HDF5_ROOT} --enable-cxx --enable-fortran > hdf5.configure.foo 2>&1
# 20070507 HDF5 --enable-cxx conflicts with --enable-parallel
# 20070507 HDF5 --enable-parallel requires parallel filesystem
# ./configure --prefix=${HDF5_ROOT} --enable-fortran --enable-parallel
make > hdf5.make.foo 2>&1
# make check > hdf5.check.foo 2>&1
scp hdf5.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install

# Do same for netCDF4 Fortran
sudo /bin/rm -f ${NETCDF4_ROOT}/include/netcdf.mod ${NETCDF4_ROOT}/lib/libnetcdff.* 
cd ${DATA}/tmp/netcdf-fortran
make distclean
git pull
autoreconf -i -f
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdff.configure.foo 2>&1
mv -f config.log netcdff.config.log.foo
make > netcdff.make.foo 2>&1
make check > netcdff.check.foo 2>&1
scp netcdff.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/.libs/libnetcdff90.a ${NETCDF4_ROOT}/lib/libnetcdff90.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/.libs/libnetcdff.a ${NETCDF4_ROOT}/lib/libnetcdff.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/typesizes.mod ${NETCDF4_ROOT}/include/typesizes.mod.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/netcdf.mod ${NETCDF4_ROOT}/include/netcdf.mod.gfortran
make clean

# Do same for netCDF4 CXX (old interface, still required by ESMF_RegridWeightGen and by TempestRemap):
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-cxx-4.2.tar.gz
tar xvzf netcdf-cxx-4.2.tar.gz 
cd ${DATA}/tmp/netcdf-cxx-4.2
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdf_cxx.configure.foo 2>&1
make > netcdf_cxx.make.foo 2>&1
mv -f config.log netcdf_cxx.config.log.foo
make check > netcdf_cxx.check.foo 2>&1
scp netcdf_cxx.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install

# Do same for netCDF4 C++ (new interface)
cd ${DATA}/tmp/netcdf-cxx4
git pull
autoreconf -i -f
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdf_c++.configure.foo 2>&1
make > netcdf_c++.make.foo 2>&1
mv -f config.log netcdf_c++.config.log.foo
make check > netcdf_c++.check.foo 2>&1
scp netcdf_c++.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install

# Do same for netCDF4 C
sudo /bin/rm -r -f ${NETCDF4_ROOT}/include/netcdf.h ${NETCDF4_ROOT}/include/netcdf_m*.h ${NETCDF4_ROOT}/lib/libnetcdf.* 

cd ~/netcdf-c
# NB: 20171001 make distclean must be run or unresolved link errors may occur
make distclean
git pull
autoreconf -i -f
# NB: --enable-cdf5 enables CDF5 format (disabled by default as of 4.5.0-rc3 20170930) and not re-enabled by default until netCDF 4.6.2
# NB: --enable-cxx-4 enables new netCDF4 C++ API
# NB: --enable-dap enables DAP
# NB: --enable-hdf4 enables reading HDF4 files (created with SD (Scientific Data) API) through netCDF4 API. NB: requires separately building HDF4 and libmfhdf.a, and header mfhdf.h must also be installed
# NB: --enable-hdf4 documented at http://www.unidata.ucar.edu/software/netcdf/docs/build_hdf4.html
# NB: --enable-hdf4 documented requires libhdf.a, libdf.a, libjpeg.a (and netCDF configure does not itself add -ljpeg)
# NB: --enable-logging allows HDF error message to print
# NB: --enable-nczarr builds Zarr (true by default)
# NB: --enable-nczarr-s3 enables NCZarr S3 support (must be specified, is false by default)
# NB: --enable-pnetcdf build with parallel I/O for classic files
# NB: --enable-separate-fortran builds libnetcdff.a (default with shared libraries)
# NB: --enable-shared builds shared libraries
# NB: --enable-v2 enables the version 2 interface used by netcdf-perl (htrn2nc.pl) and by HDF4 ncgen
# NB: --with-libcf builds libcf.a (apparently deprecated ~201307)
# NB: --with-udunits builds libudunits2.a (apparently deprecated ~201307)
# With HDF4 on FC26 in /usr/local:
# 20220220: Remove Anaconda paths and HDF4 to build netcdf-c
# Place in /opt/netcdf so requires sudo make install 
CC='clang' CPPFLAGS="-I/opt/homebrew/include" LDFLAGS="-L/opt/homebrew/lib" ./configure --prefix=/opt/netcdf --enable-shared --enable-cdf5 --enable-dap --enable-logging --enable-netcdf4 --enable-nczarr --enable-nczarr-s3 --enable-v2 --with-plugin-dir=${HDF5_PLUGIN_PATH} > netcdf.configure.foo 2>&1
mv -f config.log netcdf.config.log.foo
make > netcdf.make.foo 2>&1
make check > netcdf.check.foo 2>&1
scp netcdf.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-c/libsrc/.libs/libnetcdf3.a ${NETCDF4_ROOT}/lib/libnetcdf3.a.gcc
sudo cp ${DATA}/tmp/netcdf-c/libsrc4/.libs/libnetcdf4.a ${NETCDF4_ROOT}/lib/libnetcdf4.a.gcc
make clean
exit # Return to previous shell level
# Output saved to:
http://dust.ess.uci.edu/tmp/netcdf.check.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.configure.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.make.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.config.log.x86_64-unknown-linux-gnu.foo
#***********************************************************************
# 20220617: spectral.ess.uci.edu MacOS 12.4 Homebrew clang 13.0.1/gfortran 11.3.0 netcdf-4.9.1-development git
#***********************************************************************

#***********************************************************************
# 20220619: frazil.ess.uci.edu Fedora Core 36 clang 14.0.0 gfortran 12.1.1 netcdf-4.9.1-development git
#***********************************************************************
sudo aptitude install antlr bison doxygen flex gcc g++ gsl-bin libgsl0-dev libcurl4-gnutls-dev libexpat1-dev libxml2-dev netcdf-bin udunits-bin libudunits2-0 libudunits2-dev # Install netCDF prequisites
sudo yum install antlr antlr-C++ curl-devel libxml2-devel bison flex gcc gcc-c++ gcc-gfortran gsl gsl-devel librx librx-devel udunits2 udunits2-devel
cd ${DATA}/tmp
# git clone git@github.com:Unidata/netcdf-c.git
# git clone git@github.com:Unidata/netcdf-fortran.git
# git clone git@github.com:Unidata/netcdf-cxx4.git

/bin/rm -r -f ${DATA}/tmp/hdf5-1.8.19*
# aptitude install libhdf4-alt-dev
cd ${DATA}/tmp
#wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/hdf5-1.8.19.tar.gz
# https://support.hdfgroup.org/HDF5/release/obtainsrc518.html#src
scp dust.ess.uci.edu:data/tmp/hdf5-1.8.19.tar.gz .
tar xvzf hdf5-1.8.19.tar.gz
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.8.19
make distclean
# 20140320: NB: NCO on FC20 works fine on HDF5 files with default system RPMs
# However, examining HDF4 files (based on default HDF4 RPMs) causes HDF5 library errors
# Not sure whether this is due to netcdf-4.3.2-rc1, system HDF5 (1.8.11) or what
# Do know that hand-building HDF5 1.8.12 and rebuilding netCDF and NCO on that does solve problem
# Conclusion: Best results with HDF4 files with hand-built HDF5 on FC20, though no need to hand-build HDF4

bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
# NB: x86_64 compilations require -fPIC -m64 flags to avoid errors on shared libraries that link to libnetcdf, e.g., libnetcdf-perl: "/usr/bin/ld: /usr/local/lib/libnetcdf.a(putget.o): relocation R_X86_64_32S against `a local symbol' can not be used when making a shared object; recompile with -fPIC"
export CC='gcc'
export CFLAGS='-fPIC -m64'
export CPPFLAGS=''
export CXX='g++'
export CXXFLAGS='-fPIC -m64'
export FC='gfortran'
export F77='gfortran'
export F90='gfortran'
export FCFLAGS=''
export FFLAGS=''
export F90FLAGS=''
export LDFLAGS='-L/usr/local/lib'
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.8.19/hdf5
# 20150622 Thread-safety is an HDF5 compile-time option
# Provides multiple concurrent reads by serializing its internal library calls, sacrificing their built-in concurrency
# Unclear whether this trade-off is worthwhile. Seems not to be.
# https://www.hdfgroup.org/hdf5-quest.html#mthread
# HDF5 --enable-threadsafe --with-pthread=$PTHREAD_DIR
./configure --prefix=${HDF5_ROOT} --enable-cxx --enable-fortran > hdf5.configure.foo 2>&1
# 20070507 HDF5 --enable-cxx conflicts with --enable-parallel
# 20070507 HDF5 --enable-parallel requires parallel filesystem
# ./configure --prefix=${HDF5_ROOT} --enable-fortran --enable-parallel
make > hdf5.make.foo 2>&1
# make check > hdf5.check.foo 2>&1
scp hdf5.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install

# Do same for netCDF4 Fortran
sudo /bin/rm -f ${NETCDF4_ROOT}/include/netcdf.mod ${NETCDF4_ROOT}/lib/libnetcdff.* 
cd ${DATA}/tmp/netcdf-fortran
make distclean
git pull
autoreconf -i -f
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdff.configure.foo 2>&1
mv -f config.log netcdff.config.log.foo
make > netcdff.make.foo 2>&1
make check > netcdff.check.foo 2>&1
scp netcdff.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/.libs/libnetcdff90.a ${NETCDF4_ROOT}/lib/libnetcdff90.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/.libs/libnetcdff.a ${NETCDF4_ROOT}/lib/libnetcdff.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/typesizes.mod ${NETCDF4_ROOT}/include/typesizes.mod.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/netcdf.mod ${NETCDF4_ROOT}/include/netcdf.mod.gfortran
make clean

# Do same for netCDF4 CXX (old interface, still required by ESMF_RegridWeightGen and by TempestRemap):
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-cxx-4.2.tar.gz
tar xvzf netcdf-cxx-4.2.tar.gz 
cd ${DATA}/tmp/netcdf-cxx-4.2
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdf_cxx.configure.foo 2>&1
make > netcdf_cxx.make.foo 2>&1
mv -f config.log netcdf_cxx.config.log.foo
make check > netcdf_cxx.check.foo 2>&1
scp netcdf_cxx.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install

# Do same for netCDF4 C++ (new interface)
cd ${DATA}/tmp/netcdf-cxx4
git pull
autoreconf -i -f
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdf_c++.configure.foo 2>&1
make > netcdf_c++.make.foo 2>&1
mv -f config.log netcdf_c++.config.log.foo
make check > netcdf_c++.check.foo 2>&1
scp netcdf_c++.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install

# Do same for netCDF4 C
sudo /bin/rm -r -f ${NETCDF4_ROOT}/include/netcdf.h ${NETCDF4_ROOT}/include/netcdf_m*.h ${NETCDF4_ROOT}/lib/libnetcdf.* 

cd ~/netcdf-c
# NB: 20171001 make distclean must be run or unresolved link errors may occur
make distclean
git pull
autoreconf -i -f
# NB: --enable-cdf5 enables CDF5 format (disabled by default as of 4.5.0-rc3 20170930) and not re-enabled by default until netCDF 4.6.2
# NB: --enable-cxx-4 enables new netCDF4 C++ API
# NB: --enable-dap enables DAP
# NB: --enable-hdf4 enables reading HDF4 files (created with SD (Scientific Data) API) through netCDF4 API. NB: requires separately building HDF4 and libmfhdf.a, and header mfhdf.h must also be installed
# NB: --enable-hdf4 documented at http://www.unidata.ucar.edu/software/netcdf/docs/build_hdf4.html
# NB: --enable-hdf4 documented requires libhdf.a, libdf.a, libjpeg.a (and netCDF configure does not itself add -ljpeg)
# NB: --enable-logging allows HDF error message to print
# NB: --enable-nczarr builds Zarr
# NB: --enable-pnetcdf build with parallel I/O for classic files
# NB: --enable-separate-fortran builds libnetcdff.a (default with shared libraries)
# NB: --enable-shared builds shared libraries
# NB: --enable-v2 enables the version 2 interface used by netcdf-perl (htrn2nc.pl) and by HDF4 ncgen
# NB: --with-libcf builds libcf.a (apparently deprecated ~201307)
# NB: --with-udunits builds libudunits2.a (apparently deprecated ~201307)
# With HDF4 on FC36 in /usr/local:
CC='clang' CFLAGS='-g' ./configure --prefix=/usr/local --enable-shared --enable-cdf5 --enable-dap --enable-logging --enable-netcdf4 --enable-nczarr --enable-v2 --with-plugin-dir=${HDF5_PLUGIN_PATH} > netcdf.configure.foo 2>&1
mv -f config.log netcdf.config.log.foo
make > netcdf.make.foo 2>&1
make check > netcdf.check.foo 2>&1
scp netcdf.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-c/libsrc/.libs/libnetcdf3.a ${NETCDF4_ROOT}/lib/libnetcdf3.a.gcc
sudo cp ${DATA}/tmp/netcdf-c/libsrc4/.libs/libnetcdf4.a ${NETCDF4_ROOT}/lib/libnetcdf4.a.gcc
make clean
exit # Return to previous shell level
# Output saved to:
http://dust.ess.uci.edu/tmp/netcdf.check.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.configure.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.make.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.config.log.x86_64-unknown-linux-gnu.foo
#***********************************************************************
# 20220619: frazil.ess.uci.edu Fedora Core 36 clang 14.0.0 gfortran 12.1.1 netcdf-4.9.1-development git
#***********************************************************************

#***********************************************************************
# 20220907: spectral.ess.uci.edu MacOS 12.5.1 Homebrew clang 14.0.6/gfortran 11.3.0 netcdf-4.9.1-development git
#***********************************************************************
sudo aptitude install antlr bison doxygen flex gcc g++ gsl-bin libgsl0-dev libcurl4-gnutls-dev libexpat1-dev libxml2-dev netcdf-bin udunits-bin libudunits2-0 libudunits2-dev # Install netCDF prequisites
sudo yum install antlr antlr-C++ curl-devel libxml2-devel bison flex gcc gcc-c++ gcc-gfortran gsl gsl-devel librx librx-devel udunits2 udunits2-devel
cd ${DATA}/tmp
# git clone git@github.com:Unidata/netcdf-fortran.git
# git clone git@github.com:Unidata/netcdf-cxx4.git

/bin/rm -r -f ${DATA}/tmp/hdf5-1.8.19*
# aptitude install libhdf4-alt-dev
cd ${DATA}/tmp
#wget -c ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/hdf5-1.8.19.tar.gz
# https://support.hdfgroup.org/HDF5/release/obtainsrc518.html#src
scp dust.ess.uci.edu:data/tmp/hdf5-1.8.19.tar.gz .
tar xvzf hdf5-1.8.19.tar.gz
# Build HDF5 first ('make install' installs locally)
cd ${DATA}/tmp/hdf5-1.8.19
make distclean
# 20140320: NB: NCO on FC20 works fine on HDF5 files with default system RPMs
# However, examining HDF4 files (based on default HDF4 RPMs) causes HDF5 library errors
# Not sure whether this is due to netcdf-4.3.2-rc1, system HDF5 (1.8.11) or what
# Do know that hand-building HDF5 1.8.12 and rebuilding netCDF and NCO on that does solve problem
# Conclusion: Best results with HDF4 files with hand-built HDF5 on FC20, though no need to hand-build HDF4

bash # New shell level keeps environment variables sandboxed
export GNU_TRP=`~/nco/autobld/config.guess`
# NB: x86_64 compilations require -fPIC -m64 flags to avoid errors on shared libraries that link to libnetcdf, e.g., libnetcdf-perl: "/usr/bin/ld: /usr/local/lib/libnetcdf.a(putget.o): relocation R_X86_64_32S against `a local symbol' can not be used when making a shared object; recompile with -fPIC"
export CC='gcc'
export CFLAGS='-fPIC -m64'
export CPPFLAGS=''
export CXX='g++'
export CXXFLAGS='-fPIC -m64'
export FC='gfortran'
export F77='gfortran'
export F90='gfortran'
export FCFLAGS=''
export FFLAGS=''
export F90FLAGS=''
export LDFLAGS='-L/usr/local/lib'
# Install HDF5 and netCDF4 in same directory for easier paths
export NETCDF4_ROOT=/usr/local
export HDF5_ROOT=${NETCDF4_ROOT}
# HDF5 builds here unless otherwise specified
# HDF5_ROOT=${DATA}/tmp/hdf5-1.8.19/hdf5
# 20150622 Thread-safety is an HDF5 compile-time option
# Provides multiple concurrent reads by serializing its internal library calls, sacrificing their built-in concurrency
# Unclear whether this trade-off is worthwhile. Seems not to be.
# https://www.hdfgroup.org/hdf5-quest.html#mthread
# HDF5 --enable-threadsafe --with-pthread=$PTHREAD_DIR
./configure --prefix=${HDF5_ROOT} --enable-cxx --enable-fortran > hdf5.configure.foo 2>&1
# 20070507 HDF5 --enable-cxx conflicts with --enable-parallel
# 20070507 HDF5 --enable-parallel requires parallel filesystem
# ./configure --prefix=${HDF5_ROOT} --enable-fortran --enable-parallel
make > hdf5.make.foo 2>&1
# make check > hdf5.check.foo 2>&1
scp hdf5.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install

# Do same for netCDF4 Fortran
sudo /bin/rm -f ${NETCDF4_ROOT}/include/netcdf.mod ${NETCDF4_ROOT}/lib/libnetcdff.* 
cd ${DATA}/tmp/netcdf-fortran
make distclean
git pull
autoreconf -i -f
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdff.configure.foo 2>&1
mv -f config.log netcdff.config.log.foo
make > netcdff.make.foo 2>&1
make check > netcdff.check.foo 2>&1
scp netcdff.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/.libs/libnetcdff90.a ${NETCDF4_ROOT}/lib/libnetcdff90.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/.libs/libnetcdff.a ${NETCDF4_ROOT}/lib/libnetcdff.a.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/typesizes.mod ${NETCDF4_ROOT}/include/typesizes.mod.gfortran
sudo cp ${DATA}/tmp/netcdf-fortran/fortran/netcdf.mod ${NETCDF4_ROOT}/include/netcdf.mod.gfortran
make clean

# Do same for netCDF4 CXX (old interface, still required by ESMF_RegridWeightGen and by TempestRemap):
cd ${DATA}/tmp
wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-cxx-4.2.tar.gz
tar xvzf netcdf-cxx-4.2.tar.gz 
cd ${DATA}/tmp/netcdf-cxx-4.2
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdf_cxx.configure.foo 2>&1
make > netcdf_cxx.make.foo 2>&1
mv -f config.log netcdf_cxx.config.log.foo
make check > netcdf_cxx.check.foo 2>&1
scp netcdf_cxx.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install

# Do same for netCDF4 C++ (new interface)
cd ${DATA}/tmp/netcdf-cxx4
git pull
autoreconf -i -f
LDFLAGS='-L/usr/local/lib' ./configure --prefix=/usr/local > netcdf_c++.configure.foo 2>&1
make > netcdf_c++.make.foo 2>&1
mv -f config.log netcdf_c++.config.log.foo
make check > netcdf_c++.check.foo 2>&1
scp netcdf_c++.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install

# Do same for netCDF4 C
sudo /bin/rm -r -f ${NETCDF4_ROOT}/include/netcdf.h ${NETCDF4_ROOT}/include/netcdf_m*.h ${NETCDF4_ROOT}/lib/libnetcdf.* 

# git clone git@github.com:nco/netcdf-c.git
cd ~/netcdf-c
# NB: 20171001 make distclean must be run or unresolved link errors may occur
make distclean
git pull
autoreconf -i -f
# NB: --enable-cdf5 enables CDF5 format (disabled by default as of 4.5.0-rc3 20170930) and not re-enabled by default until netCDF 4.6.2
# NB: --enable-cxx-4 enables new netCDF4 C++ API
# NB: --enable-dap enables DAP
# NB: --enable-hdf4 enables reading HDF4 files (created with SD (Scientific Data) API) through netCDF4 API. NB: requires separately building HDF4 and libmfhdf.a, and header mfhdf.h must also be installed
# NB: --enable-hdf4 documented at http://www.unidata.ucar.edu/software/netcdf/docs/build_hdf4.html
# NB: --enable-hdf4 documented requires libhdf.a, libdf.a, libjpeg.a (and netCDF configure does not itself add -ljpeg)
# NB: --enable-logging allows HDF error message to print
# NB: --enable-nczarr builds Zarr (true by default)
# NB: --enable-nczarr-s3 enables NCZarr S3 support (must be specified, is false by default)
# NB: --enable-pnetcdf build with parallel I/O for classic files
# NB: --enable-separate-fortran builds libnetcdff.a (default with shared libraries)
# NB: --enable-shared builds shared libraries
# NB: --enable-v2 enables the version 2 interface used by netcdf-perl (htrn2nc.pl) and by HDF4 ncgen
# NB: --with-libcf builds libcf.a (apparently deprecated ~201307)
# NB: --with-udunits builds libudunits2.a (apparently deprecated ~201307)
# With HDF4 on FC26 in /usr/local:
# 20220220: Remove Anaconda paths and HDF4 to build netcdf-c
# Place in /opt/netcdf so requires sudo make install 
CC='clang' CPPFLAGS="-I/opt/homebrew/include" LDFLAGS="-L/opt/homebrew/lib" ./configure --prefix=/opt/netcdf --enable-shared --enable-cdf5 --enable-dap --enable-logging --enable-netcdf4 --enable-nczarr --enable-nczarr-s3 --enable-v2 --with-plugin-dir=${HDF5_PLUGIN_PATH} > netcdf.configure.foo 2>&1
mv -f config.log netcdf.config.log.foo
make > netcdf.make.foo 2>&1
make check > netcdf.check.foo 2>&1
scp netcdf.*.foo dust.ess.uci.edu:Sites/tmp
sudo make install
# NB: Fortran symbols do get munged into libnetcdf.a somehow
sudo cp ${DATA}/tmp/netcdf-c/libsrc/.libs/libnetcdf3.a ${NETCDF4_ROOT}/lib/libnetcdf3.a.gcc
sudo cp ${DATA}/tmp/netcdf-c/libsrc4/.libs/libnetcdf4.a ${NETCDF4_ROOT}/lib/libnetcdf4.a.gcc
make clean
exit # Return to previous shell level
# Output saved to:
http://dust.ess.uci.edu/tmp/netcdf.check.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.configure.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.make.x86_64-unknown-linux-gnu.foo
http://dust.ess.uci.edu/tmp/netcdf.config.log.x86_64-unknown-linux-gnu.foo
#***********************************************************************
# 20220907: spectral.ess.uci.edu MacOS 12.5.1 Homebrew clang 14.0.6/gfortran 11.3.0 netcdf-4.9.1-development git
#***********************************************************************


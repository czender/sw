%%
%% This is file `srcltx.sty',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% srcltx.dtx  (with options: `package,latex')
%% 
%% This package is in the public domain. It comes with no guarantees
%% and no reserved rights. You can use or modify this package at your
%% own risk.
%% Originally written by: Aleksander Simonic
%% Current maintainer: Stefan Ulrich <ulrich@cis.uni-muenchen.de>
%% 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{srcltx}[2001/04/08 v1.1 DVI Search]
\newif\ifSRCOK \SRCOKtrue
\newif\ifsrc@debug@
\newif\ifsrc@dviwin@
\newif\ifsrc@everypar@\src@everypar@true
\newif\ifsrc@everymath@\src@everymath@true
\DeclareOption{active}{\SRCOKtrue}
\DeclareOption{inactive}{\SRCOKfalse}
\DeclareOption{debug}{\src@debug@true}
\DeclareOption{nopar}{\global\src@everypar@false}
\DeclareOption{nomath}{\global\src@everymath@false}
\newcommand*\src@maybe@space{}
\let\src@maybe@space\space
\DeclareOption{dviwin}{\let\src@maybe@space\relax}
\ExecuteOptions{active}
\ProcessOptions
\newcount\src@pg@top
\newcount\src@lastline

\global\src@pg@top=1
\global\src@lastline=-1
\newcommand*\src@stack{}
\newcommand*\src@debug{}
\def\src@debug#1{\ifsrc@debug@\typeout{#1}\fi}
\newcommand*\MainFile{}
\gdef\MainFile{\jobname.tex}
\newcommand*\CurrentInput{}
\gdef\CurrentInput{\MainFile}
\newcommand*\src@eject{}
\def\src@eject{\src@spec\eject}
\newcommand*\WinEdt{}
\def\WinEdt#1{\typeout{:#1}}
\newtoks\src@ta
\newtoks\src@tb
\newcommand\src@AfterFi{}
\def\src@AfterFi#1\fi{\fi#1}
\AtBeginDocument{%
    \@ifpackageloaded{soul}{%
        \let\src@SOUL@\SOUL@
        \def\SOUL@#1{%
            \ifSRCOK
                \SRCOKfalse\src@SOUL@{#1}\SRCOKtrue
            \else
                \src@AfterFi\src@SOUL@{#1}%
            \fi
        }
    }{}%
}
\src@ta=\expandafter{\expandafter\src@elt\expandafter{\MainFile}}%
\xdef\src@stack{\the\src@ta}%

\newcommand*\src@spec{}
\def\src@spec{%
    \ifSRCOK
        \ifnum\inputlineno>\src@lastline
            \ifnum\src@lastline < 0\relax
                \global\src@pg@top=\inputlineno
            \fi
            \global\src@lastline=\inputlineno
            \ifx\src@stack\empty
                \ifnum\inputlineno > \src@pg@top\relax
                    \special{src:\the\inputlineno\src@maybe@space
                        \CurrentInput}%
                \fi
            \else
                \special{src:\the\inputlineno\src@maybe@space
                        \CurrentInput}%
            \fi
        \fi
    \fi
}
\newcommand*\src@push{}
\def\src@push#1{%
    \src@spec
    \src@ta={\src@elt{#1}}%
    \src@tb=\expandafter{\src@stack}%
    \xdef\src@stack{\the\src@ta\the\src@tb}%
    \src@debug{after push: \meaning\src@stack}%
    \gdef\CurrentInput{#1}%
    \WinEdt{<+ \CurrentInput}%
    \global\src@lastline=0
    \ifSRCOK\special{src:1\CurrentInput}\fi
}
\newcommand*\src@pop{}
\def\src@pop{%
    \ifx\src@stack\empty
        \typeout{srcltx BUG: trying to pop from empty stack!}%
    \else
        \expandafter\src@@pop\src@stack\src@@pop\src@stack
        \WinEdt{<-}%
        \global\src@lastline=\inputlineno
        \global\advance\src@lastline by -1%
        \src@spec
    \fi
}
\newcommand*\src@@pop{}
\def\src@@pop\src@elt#1#2\src@@pop#3{%
    \def#3{#2}%
        \ifx#3\empty
            \typeout{srcltx BUG: trying to read from empty stack!}%
        \else
            \expandafter\src@get@top\src@stack\src@get@top\CurrentInput
        \fi
    \src@debug{after pop: \meaning\src@stack}%
}
\newcommand*\src@get@top{}
\def\src@get@top\src@elt#1#2\src@get@top#3{%
    \def#3{#1}%
    \src@debug{re-assigned \string\CurrentInput: #3}%
}
\newcommand*\INPUT{}
\def\INPUT#1{\relax}
\newcommand*\src@include{}
\let\src@include\include
\def\include#1{%
    \src@eject
    \src@push{#1.tex}%
    \src@include{#1}%
    \src@pop
}
\newcommand*\Input{}
\def\Input#1{%
    \src@push{#1}%
    \input#1%
    \src@pop
}
\ifsrc@everypar@
    \newcommand*\src@everypar{}
    \let\src@everypar\everypar
    \newtoks\everypar
    \src@everypar{\the\everypar\expandafter\src@spec}
\else
    \everypar\expandafter{\the\everypar\expandafter\src@spec}
\fi
\ifsrc@everymath@
    \everymath\expandafter{\the\everymath\expandafter\src@spec}
\fi
\newcommand*\src@bibliography{}
\let\src@bibliography\bibliography
\def\bibliography#1{%
    \src@push{\jobname.bbl}%
    \src@bibliography{#1}%
    \src@pop
}
\output\expandafter{\expandafter\SRCOKfalse\the\output}
\endinput
%%
%% End of file `srcltx.sty'.
